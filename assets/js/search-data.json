{
  
    
        "post0": {
            "title": "Entity Extraction (NER) - Training and Inference using Transformers - Part 3",
            "content": "In the previous post we trained the NER model on a kaggle dataset. . In this post we will train an Entity Extraction model on a MIT restaurant Intent dataset. These dataset is helpful for slot filling in the chatbot conversations. The model will be able to recognize following entities . Rating Dish Location . . from google.colab import drive drive.mount(&#39;/content/drive&#39;) . Mounted at /content/drive . !pip install git+https://github.com/huggingface/transformers.git !pip install seqeval !pip install conllu . Download the Restaurant Intent Dataset . !wget https://groups.csail.mit.edu/sls/downloads/restaurant/restauranttrain.bio !wget https://groups.csail.mit.edu/sls/downloads/restaurant/restauranttest.bio . The data is present in the following format . O a B-Rating four I-Rating star O restaurant B-Location with I-Location a B-Amenity bar . . Convert datafile to conllu input format for processing with NER Task Class . Reverse the tag and the column column in both the test and train files. . | Replace the tab seperator to space. . | Change the example seperator to newline . | !awk &#39;{print $2,$1}&#39; restauranttest.bio &gt; &quot;/content/drive/My Drive/transformers-ner/mit-restaurant-data/test.txt&quot; !awk &#39;{print $2,$1}&#39; restauranttrain.bio &gt; &quot;/content/drive/My Drive/transformers-ner/mit-restaurant-data/train.txt&quot; !sed -i &#39;s/ t/ /g&#39; &#39;/content/drive/My Drive/transformers-ner/mit-restaurant-data/test.txt&#39; !sed -i &#39;s/^ $/ n/g&#39; &#39;/content/drive/My Drive/transformers-ner/mit-restaurant-data/test.txt&#39; !sed -i &#39;s/ t/ /g&#39; &#39;/content/drive/My Drive/transformers-ner/mit-restaurant-data/train.txt&#39; !sed -i &#39;s/^ $/ n/g&#39; &#39;/content/drive/My Drive/transformers-ner/mit-restaurant-data/train.txt&#39; . import pandas as pd df = pd.read_csv(&#39;/content/drive/My Drive/transformers-ner/mit-restaurant-data/train.txt&#39;,sep=&#39; &#39;, header=None) . with open(&#39;/content/drive/My Drive/transformers-ner/mit-restaurant-data/labels.txt&#39;,&#39;w&#39;) as fout: for tag in df[1].unique(): fout.write(tag+&#39; n&#39;) . !wget https://raw.githubusercontent.com/huggingface/transformers/master/examples/token-classification/utils_ner.py !wget https://raw.githubusercontent.com/huggingface/transformers/master/examples/token-classification/run_ner.py !wget https://raw.githubusercontent.com/huggingface/transformers/master/examples/token-classification/tasks.py . Run the Training Code . !python run_ner.py --model_name_or_path &#39;roberta-base&#39; --data_dir &#39;/content/drive/My Drive/transformers-ner/mit-restaurant-data/&#39; --output_dir &#39;restaurant-model&#39; --max_seq_length &#39;128&#39; --num_train_epochs 3 --per_device_train_batch_size 8 --save_steps 1000000 --seed 16 --do_train --do_predict --overwrite_output_dir --labels &quot;/content/drive/My Drive/transformers-ner/mit-restaurant-data/labels.txt&quot; --fp16 . The model training achieves an accuracy score of 91% on the test dataset. . eval_loss = 0.29688322173849724 eval_accuracy_score = 0.9196127946127947 eval_precision = 0.7854288349216109 eval_recall = 0.8108536972389717 eval_f1 = 0.7979387882573391 . Model Prediction . Run the prediction using the pipeline class . from transformers import pipeline model_name = &#39;/content/restaurant-model&#39; nlp = pipeline(task=&quot;ner&quot;, model=model_name, tokenizer=model_name, framework=&quot;pt&quot;,grouped_entities=True) . sequence =[&quot;&quot;&quot;how many 5 star restaurants are near me.&quot;&quot;&quot;,&quot;Which restaurant in Downtown serves best Momos?&quot;] nlp(sequence) . [[{&#39;entity_group&#39;: &#39;B-Rating&#39;, &#39;score&#39;: 0.9906011819839478, &#39;word&#39;: &#39; 5 star&#39;}, {&#39;entity_group&#39;: &#39;B-Location&#39;, &#39;score&#39;: 0.927771806716919, &#39;word&#39;: &#39; near me&#39;}], [{&#39;entity_group&#39;: &#39;B-Location&#39;, &#39;score&#39;: 0.6126553416252136, &#39;word&#39;: &#39; in Downtown&#39;}, {&#39;entity_group&#39;: &#39;B-Rating&#39;, &#39;score&#39;: 0.9742729663848877, &#39;word&#39;: &#39; best&#39;}, {&#39;entity_group&#39;: &#39;B-Dish&#39;, &#39;score&#39;: 0.990350604057312, &#39;word&#39;: &#39; Momos&#39;}]] .",
            "url": "http://forgetfulcrow.com/nlp/token%20classification/2021/02/21/_09_20_Entity_Extraction_Transformers_Part_3.html",
            "relUrl": "/nlp/token%20classification/2021/02/21/_09_20_Entity_Extraction_Transformers_Part_3.html",
            "date": " • Feb 21, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Entity Extraction (NER) - Training and Inference using Transformers - Part 2",
            "content": ". Problem Statement . In the Part-1, we talked about how to use the pretrained language model, Tokenizer and TokenClassification model. . In this post we will train an NER model using GMB(Groningen Meaning Bank) corpus annotated dataset. The dataset is available on the Kaggle. It has annotations for following entities . geo = Geographical Entity org = Organization per = Person gpe = Geopolitical Entity tim = Time indicator art = Artifact eve = Event nat = Natural Phenomenon . The trained NER model will be able to recognize entities like in following examples . . . Important: New versions of HF Transformers use Datasets package for training. . Fine Tuning Token Classification Model . Steps for Finetuning TC Model . Step 1. Dataset - Get labelled dataset for training and testing. For token classification, we need word level labels like following . The O | battery Aspect | of O | the O | speaker O | is O | very Sentiment | poor Sentiment | . We need train.txt, test.txt and labels.txt file to finetune the model, and to verify the performance of the model. . train.txt/test.txt - word and corresponding label per line and a blank line between each example. . labels.txt - list of unique tags that we have labelled in the train.txt and test.txt . Step 2. If the data is in any other format, we have to either convert it into this format, or write a new Task class and implement the methods of TokenClassificationTask . For this example, we will use the Task class NER in the tasks.py file. This will prepare the list of InputExample . class InputExample: &quot;&quot;&quot; A single training/test example for token classification. Args: guid: Unique id for the example. words: list. The words of the sequence. labels: (Optional) list. The labels for each word of the sequence. This should be specified for train and dev examples, but not for test examples. &quot;&quot;&quot; guid: str words: List[str] labels: Optional[List[str]] . Step 3. NER class extends the TokenClassificationTask class which has a method convert_examples_to_features to convert list of example in to input features . class InputFeatures: &quot;&quot;&quot; A single set of features of data. Property names are the same names as the corresponding inputs to a model. &quot;&quot;&quot; input_ids: List[int] attention_mask: List[int] token_type_ids: Optional[List[int]] = None label_ids: Optional[List[int]] = None . This method convert_examples_to_features uses the Tokenizer class to convert InputExample into InputFeature. In the Part-1 we discussed about the Tokenizer and how to prepate input for the model. . Step 4. Convert InputFeatures into Pytorch Dataset. The utils_ner.py has a function to convert InputFeatures into Dataset required for training. . Step 5. Call the Trainer class in run_ner.py which trains the model and evaluates the model. . Installation . Install the latest transformers library . !pip install transformers==3.1.0 !pip install seqeval !pip install conllu . Collecting transformers==3.1.0 Downloading https://files.pythonhosted.org/packages/ae/05/c8c55b600308dc04e95100dc8ad8a244dd800fe75dfafcf1d6348c6f6209/transformers-3.1.0-py3-none-any.whl (884kB) |████████████████████████████████| 890kB 16.9MB/s Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from transformers==3.1.0) (1.19.5) Requirement already satisfied: filelock in /usr/local/lib/python3.6/dist-packages (from transformers==3.1.0) (3.0.12) Requirement already satisfied: tqdm&gt;=4.27 in /usr/local/lib/python3.6/dist-packages (from transformers==3.1.0) (4.41.1) Collecting tokenizers==0.8.1.rc2 Downloading https://files.pythonhosted.org/packages/80/83/8b9fccb9e48eeb575ee19179e2bdde0ee9a1904f97de5f02d19016b8804f/tokenizers-0.8.1rc2-cp36-cp36m-manylinux1_x86_64.whl (3.0MB) |████████████████████████████████| 3.0MB 57.2MB/s Requirement already satisfied: dataclasses; python_version &lt; &#34;3.7&#34; in /usr/local/lib/python3.6/dist-packages (from transformers==3.1.0) (0.8) Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.6/dist-packages (from transformers==3.1.0) (2019.12.20) Requirement already satisfied: sacremoses in /usr/local/lib/python3.6/dist-packages (from transformers==3.1.0) (0.0.43) Requirement already satisfied: packaging in /usr/local/lib/python3.6/dist-packages (from transformers==3.1.0) (20.9) Collecting sentencepiece!=0.1.92 Downloading https://files.pythonhosted.org/packages/14/67/e42bd1181472c95c8cda79305df848264f2a7f62740995a46945d9797b67/sentencepiece-0.1.95-cp36-cp36m-manylinux2014_x86_64.whl (1.2MB) |████████████████████████████████| 1.2MB 60.9MB/s Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from transformers==3.1.0) (2.23.0) Requirement already satisfied: click in /usr/local/lib/python3.6/dist-packages (from sacremoses-&gt;transformers==3.1.0) (7.1.2) Requirement already satisfied: joblib in /usr/local/lib/python3.6/dist-packages (from sacremoses-&gt;transformers==3.1.0) (1.0.0) Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from sacremoses-&gt;transformers==3.1.0) (1.15.0) Requirement already satisfied: pyparsing&gt;=2.0.2 in /usr/local/lib/python3.6/dist-packages (from packaging-&gt;transformers==3.1.0) (2.4.7) Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests-&gt;transformers==3.1.0) (1.24.3) Requirement already satisfied: chardet&lt;4,&gt;=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests-&gt;transformers==3.1.0) (3.0.4) Requirement already satisfied: certifi&gt;=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests-&gt;transformers==3.1.0) (2020.12.5) Requirement already satisfied: idna&lt;3,&gt;=2.5 in /usr/local/lib/python3.6/dist-packages (from requests-&gt;transformers==3.1.0) (2.10) Installing collected packages: tokenizers, sentencepiece, transformers Found existing installation: tokenizers 0.10.1 Uninstalling tokenizers-0.10.1: Successfully uninstalled tokenizers-0.10.1 Found existing installation: transformers 4.4.0.dev0 Uninstalling transformers-4.4.0.dev0: Successfully uninstalled transformers-4.4.0.dev0 Successfully installed sentencepiece-0.1.95 tokenizers-0.8.1rc2 transformers-3.1.0 . Requirement already satisfied: seqeval in /usr/local/lib/python3.6/dist-packages (1.2.2) Requirement already satisfied: scikit-learn&gt;=0.21.3 in /usr/local/lib/python3.6/dist-packages (from seqeval) (0.22.2.post1) Requirement already satisfied: numpy&gt;=1.14.0 in /usr/local/lib/python3.6/dist-packages (from seqeval) (1.19.5) Requirement already satisfied: joblib&gt;=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn&gt;=0.21.3-&gt;seqeval) (1.0.0) Requirement already satisfied: scipy&gt;=0.17.0 in /usr/local/lib/python3.6/dist-packages (from scikit-learn&gt;=0.21.3-&gt;seqeval) (1.4.1) Requirement already satisfied: conllu in /usr/local/lib/python3.6/dist-packages (4.4) . from google.colab import drive drive.mount(&#39;/content/drive&#39;) . Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&#34;/content/drive&#34;, force_remount=True). . Prepare the Training Data . Download the dataset from https://www.kaggle.com/abhinavwalia95/entity-annotated-corpus . download the file new_dataset.csv . Let&#39;s load the dataset in pandas dataframe and look at the data . import pandas as pd data_path = &#39;/content/drive/My Drive/transformers-ner/ner_dataset.csv&#39; df = pd.read_csv(data_path, encoding=&quot;latin-1&quot;) # fille the empty Sentence# with the previous available value df.loc[:, &quot;Sentence #&quot;] = df[&quot;Sentence #&quot;].fillna(method=&quot;ffill&quot;) df.head() . Sentence # Word POS Tag . 0 Sentence: 1 | Thousands | NNS | O | . 1 Sentence: 1 | of | IN | O | . 2 Sentence: 1 | demonstrators | NNS | O | . 3 Sentence: 1 | have | VBP | O | . 4 Sentence: 1 | marched | VBN | O | . sentences = df.groupby(&quot;Sentence #&quot;)[&quot;Word&quot;].apply(list).values tags = df.groupby(&quot;Sentence #&quot;)[&quot;Tag&quot;].apply(list).values . print(sentences[0]) print(tags[0]) . [&#39;Thousands&#39;, &#39;of&#39;, &#39;demonstrators&#39;, &#39;have&#39;, &#39;marched&#39;, &#39;through&#39;, &#39;London&#39;, &#39;to&#39;, &#39;protest&#39;, &#39;the&#39;, &#39;war&#39;, &#39;in&#39;, &#39;Iraq&#39;, &#39;and&#39;, &#39;demand&#39;, &#39;the&#39;, &#39;withdrawal&#39;, &#39;of&#39;, &#39;British&#39;, &#39;troops&#39;, &#39;from&#39;, &#39;that&#39;, &#39;country&#39;, &#39;.&#39;] [&#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;B-geo&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;B-geo&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;B-gpe&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;] . Split the dataset into Train and Test using sklearn . from sklearn.model_selection import train_test_split #split into 80% train and 20% test X_train, X_test, y_train, y_test = train_test_split(sentences, tags, test_size=0.2, random_state=42) . TRAIN_FILE_PATH = &#39;/content/drive/My Drive/transformers-ner/data/train.txt&#39; TEST_FILE_PATH = &#39;/content/drive/My Drive/transformers-ner/data/test.txt&#39; LABELS_FILE_PATH = &#39;/content/drive/My Drive/transformers-ner/data/labels.txt&#39; with open(TRAIN_FILE_PATH,&#39;w&#39;) as ftrain: for (k,v) in zip(X_train, y_train): [ftrain.write(s+&#39; &#39;+t+&#39; n&#39;) for s,t in zip(k,v)] ftrain.write(&#39; n&#39;) with open(TEST_FILE_PATH,&#39;w&#39;) as ftest: for (k,v) in zip(X_test, y_test): [ftest.write(s+&#39; &#39;+str(t)+&#39; n&#39;) for s,t in zip(k,v)] ftest.write(&#39; n&#39;) . Prepare the labels file with list of unique labels . with open(LABELS_FILE_PATH,&#39;w&#39;) as f: for tag in df[&#39;Tag&#39;].unique(): print(tag) f.write(str(tag)+&#39; n&#39;) . O B-geo B-gpe B-per I-geo B-org I-org B-tim B-art I-art I-per I-gpe I-tim B-nat B-eve I-eve I-nat . Download Finetuning Code from Transformers Package . Download following files from transformers github repo. . !wget https://raw.githubusercontent.com/huggingface/transformers/v3.1.0/examples/token-classification/utils_ner.py !wget https://raw.githubusercontent.com/huggingface/transformers/v3.1.0/examples/token-classification/run_ner.py !wget https://raw.githubusercontent.com/huggingface/transformers/v3.1.0/examples/token-classification/tasks.py . --2021-02-21 14:09:44-- https://raw.githubusercontent.com/huggingface/transformers/v3.1.0/examples/token-classification/utils_ner.py Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 15629 (15K) [text/plain] Saving to: ‘utils_ner.py’ utils_ner.py 100%[===================&gt;] 15.26K --.-KB/s in 0s 2021-02-21 14:09:44 (137 MB/s) - ‘utils_ner.py’ saved [15629/15629] --2021-02-21 14:09:45-- https://raw.githubusercontent.com/huggingface/transformers/v3.1.0/examples/token-classification/run_ner.py Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 11596 (11K) [text/plain] Saving to: ‘run_ner.py’ run_ner.py 100%[===================&gt;] 11.32K --.-KB/s in 0s 2021-02-21 14:09:45 (125 MB/s) - ‘run_ner.py’ saved [11596/11596] --2021-02-21 14:09:45-- https://raw.githubusercontent.com/huggingface/transformers/v3.1.0/examples/token-classification/tasks.py Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ... Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 5509 (5.4K) [text/plain] Saving to: ‘tasks.py’ tasks.py 100%[===================&gt;] 5.38K --.-KB/s in 0s 2021-02-21 14:09:45 (86.6 MB/s) - ‘tasks.py’ saved [5509/5509] . Training Code . The datafiles are converted into Input Example and and input features using the tasks.py NER class. The run_ner.py takes care of converting . Datafile -&gt; InputExample -&gt; InputFeature -&gt; Dataset -&gt; DataLoader . which is required for Training Loop. We can simply run the run_ner.py file with all the required parameters. . We will perform training using run_ner.py but before that let us look at how the InputExample and InputFeature looks like . from tasks import NER task = NER() examples = task.read_examples_from_file(&#39;/content/drive/My Drive/transformers-ner/data&#39;,mode= &#39;train&#39;) . examples[:2] . [InputExample(guid=&#39;train-1&#39;, words=[&#39;South&#39;, &#39;Korea&#39;, &#34;&#39;s&#34;, &#39;government&#39;, &#39;Tuesday&#39;, &#39;also&#39;, &#39;unveiled&#39;, &#39;a&#39;, &#39;so-called&#39;, &#39;Green&#39;, &#39;New&#39;, &#39;Job&#39;, &#39;Creation&#39;, &#39;Plan&#39;, &#39;,&#39;, &#39;expected&#39;, &#39;to&#39;, &#39;create&#39;, &#39;9,60,000&#39;, &#39;new&#39;, &#39;jobs&#39;, &#39;.&#39;], labels=[&#39;B-geo&#39;, &#39;I-geo&#39;, &#39;O&#39;, &#39;O&#39;, &#39;B-tim&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;]), InputExample(guid=&#39;train-2&#39;, words=[&#39;When&#39;, &#39;the&#39;, &#39;Lion&#39;, &#39;found&#39;, &#39;that&#39;, &#39;he&#39;, &#39;could&#39;, &#39;not&#39;, &#39;escape&#39;, &#39;,&#39;, &#39;he&#39;, &#39;flew&#39;, &#39;upon&#39;, &#39;the&#39;, &#39;sheep&#39;, &#39;and&#39;, &#39;killed&#39;, &#39;them&#39;, &#39;,&#39;, &#39;and&#39;, &#39;then&#39;, &#39;attacked&#39;, &#39;the&#39;, &#39;oxen&#39;, &#39;.&#39;], labels=[&#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;, &#39;O&#39;])] . labels = [] for t in open(LABELS_FILE_PATH).readlines(): labels.append(t.replace(&#39; n&#39;,&#39;&#39;)) labels . [&#39;O&#39;, &#39;B-geo&#39;, &#39;B-gpe&#39;, &#39;B-per&#39;, &#39;I-geo&#39;, &#39;B-org&#39;, &#39;I-org&#39;, &#39;B-tim&#39;, &#39;B-art&#39;, &#39;I-art&#39;, &#39;I-per&#39;, &#39;I-gpe&#39;, &#39;I-tim&#39;, &#39;B-nat&#39;, &#39;B-eve&#39;, &#39;I-eve&#39;, &#39;I-nat&#39;] . from transformers import AutoTokenizer tokenizer= AutoTokenizer.from_pretrained(&#39;roberta-base&#39;) . . features = task.convert_examples_to_features(examples,label_list=labels, max_seq_length=128, tokenizer=tokenizer) . features[:2][0] . InputFeatures(input_ids=[3, 10050, 530, 33594, 18, 11455, 25464, 19726, 879, 548, 6691, 102, 2527, 12, 4155, 19247, 4030, 43128, 40008, 1258, 35351, 6, 10162, 560, 32845, 466, 6, 2466, 6, 151, 4651, 41207, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], attention_mask=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], token_type_ids=None, label_ids=[-100, 1, 4, -100, 0, 0, 7, 0, 0, -100, -100, 0, 0, -100, -100, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, -100, -100, -100, -100, 0, 0, 0, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100, -100]) . !python run_ner.py --model_name_or_path &#39;roberta-base&#39; --labels &#39;/content/drive/My Drive/transformers-ner/data/labels.txt&#39; --data_dir &#39;/content/drive/My Drive/transformers-ner/data&#39; --output_dir &#39;model&#39; --max_seq_length &#39;128&#39; --num_train_epochs 3 --per_device_train_batch_size 8 --save_steps 1000000 --seed 16 --do_train --do_predict --overwrite_output_dir --fp16 . Streaming output truncated to the last 5000 lines. Iteration: 96% 4618/4796 [09:26&lt;00:21, 8.09it/s] Iteration: 96% 4619/4796 [09:26&lt;00:21, 8.12it/s] Iteration: 96% 4620/4796 [09:26&lt;00:21, 8.24it/s] Iteration: 96% 4621/4796 [09:26&lt;00:21, 8.22it/s] Iteration: 96% 4622/4796 [09:26&lt;00:21, 8.22it/s] Iteration: 96% 4623/4796 [09:27&lt;00:20, 8.28it/s] Iteration: 96% 4624/4796 [09:27&lt;00:20, 8.36it/s] Iteration: 96% 4625/4796 [09:27&lt;00:20, 8.39it/s] Iteration: 96% 4626/4796 [09:27&lt;00:20, 8.32it/s] Iteration: 96% 4627/4796 [09:27&lt;00:20, 8.28it/s] Iteration: 96% 4628/4796 [09:27&lt;00:20, 8.25it/s] Iteration: 97% 4629/4796 [09:27&lt;00:20, 8.21it/s] Iteration: 97% 4630/4796 [09:27&lt;00:20, 8.22it/s] Iteration: 97% 4631/4796 [09:27&lt;00:20, 8.22it/s] Iteration: 97% 4632/4796 [09:28&lt;00:20, 8.07it/s] Iteration: 97% 4633/4796 [09:28&lt;00:19, 8.23it/s] Iteration: 97% 4634/4796 [09:28&lt;00:19, 8.31it/s] Iteration: 97% 4635/4796 [09:28&lt;00:19, 8.26it/s] Iteration: 97% 4636/4796 [09:28&lt;00:19, 8.22it/s] Iteration: 97% 4637/4796 [09:28&lt;00:19, 8.19it/s] Iteration: 97% 4638/4796 [09:28&lt;00:19, 8.17it/s] Iteration: 97% 4639/4796 [09:28&lt;00:18, 8.29it/s] Iteration: 97% 4640/4796 [09:29&lt;00:18, 8.25it/s] Iteration: 97% 4641/4796 [09:29&lt;00:18, 8.22it/s] Iteration: 97% 4642/4796 [09:29&lt;00:18, 8.25it/s] Iteration: 97% 4643/4796 [09:29&lt;00:18, 8.08it/s] Iteration: 97% 4644/4796 [09:29&lt;00:18, 8.14it/s] Iteration: 97% 4645/4796 [09:29&lt;00:18, 8.16it/s] Iteration: 97% 4646/4796 [09:29&lt;00:18, 8.14it/s] Iteration: 97% 4647/4796 [09:29&lt;00:18, 8.14it/s] Iteration: 97% 4648/4796 [09:30&lt;00:18, 8.13it/s] Iteration: 97% 4649/4796 [09:30&lt;00:18, 8.14it/s] Iteration: 97% 4650/4796 [09:30&lt;00:17, 8.16it/s] Iteration: 97% 4651/4796 [09:30&lt;00:17, 8.19it/s] Iteration: 97% 4652/4796 [09:30&lt;00:17, 8.29it/s] Iteration: 97% 4653/4796 [09:30&lt;00:17, 8.25it/s] Iteration: 97% 4654/4796 [09:30&lt;00:17, 8.35it/s] Iteration: 97% 4655/4796 [09:30&lt;00:16, 8.32it/s] Iteration: 97% 4656/4796 [09:31&lt;00:17, 8.22it/s] Iteration: 97% 4657/4796 [09:31&lt;00:16, 8.19it/s] Iteration: 97% 4658/4796 [09:31&lt;00:16, 8.20it/s] Iteration: 97% 4659/4796 [09:31&lt;00:16, 8.14it/s] Iteration: 97% 4660/4796 [09:31&lt;00:16, 8.27it/s] Iteration: 97% 4661/4796 [09:31&lt;00:16, 8.32it/s] Iteration: 97% 4662/4796 [09:31&lt;00:16, 8.25it/s] Iteration: 97% 4663/4796 [09:31&lt;00:16, 8.24it/s] Iteration: 97% 4664/4796 [09:31&lt;00:15, 8.25it/s] Iteration: 97% 4665/4796 [09:32&lt;00:15, 8.33it/s] Iteration: 97% 4666/4796 [09:32&lt;00:15, 8.23it/s] Iteration: 97% 4667/4796 [09:32&lt;00:15, 8.23it/s] Iteration: 97% 4668/4796 [09:32&lt;00:15, 8.20it/s] Iteration: 97% 4669/4796 [09:32&lt;00:15, 8.19it/s] Iteration: 97% 4670/4796 [09:32&lt;00:15, 8.21it/s] Iteration: 97% 4671/4796 [09:32&lt;00:15, 8.08it/s] Iteration: 97% 4672/4796 [09:32&lt;00:15, 8.10it/s] Iteration: 97% 4673/4796 [09:33&lt;00:15, 8.14it/s] Iteration: 97% 4674/4796 [09:33&lt;00:15, 8.13it/s] Iteration: 97% 4675/4796 [09:33&lt;00:15, 8.01it/s] Iteration: 97% 4676/4796 [09:33&lt;00:14, 8.05it/s] Iteration: 98% 4677/4796 [09:33&lt;00:14, 8.11it/s] Iteration: 98% 4678/4796 [09:33&lt;00:14, 8.25it/s] Iteration: 98% 4679/4796 [09:33&lt;00:14, 8.13it/s] Iteration: 98% 4680/4796 [09:33&lt;00:14, 8.28it/s] Iteration: 98% 4681/4796 [09:34&lt;00:13, 8.27it/s] Iteration: 98% 4682/4796 [09:34&lt;00:13, 8.25it/s] Iteration: 98% 4683/4796 [09:34&lt;00:13, 8.20it/s] Iteration: 98% 4684/4796 [09:34&lt;00:13, 8.06it/s] Iteration: 98% 4685/4796 [09:34&lt;00:13, 8.09it/s] Iteration: 98% 4686/4796 [09:34&lt;00:13, 8.22it/s] Iteration: 98% 4687/4796 [09:34&lt;00:13, 8.21it/s] Iteration: 98% 4688/4796 [09:34&lt;00:13, 8.19it/s] Iteration: 98% 4689/4796 [09:35&lt;00:13, 8.19it/s] Iteration: 98% 4690/4796 [09:35&lt;00:12, 8.22it/s] Iteration: 98% 4691/4796 [09:35&lt;00:12, 8.31it/s] Iteration: 98% 4692/4796 [09:35&lt;00:12, 8.27it/s] Iteration: 98% 4693/4796 [09:35&lt;00:12, 8.23it/s] Iteration: 98% 4694/4796 [09:35&lt;00:12, 8.12it/s] Iteration: 98% 4695/4796 [09:35&lt;00:12, 8.24it/s] Iteration: 98% 4696/4796 [09:35&lt;00:11, 8.34it/s] Iteration: 98% 4697/4796 [09:36&lt;00:11, 8.29it/s] Iteration: 98% 4698/4796 [09:36&lt;00:11, 8.23it/s] Iteration: 98% 4699/4796 [09:36&lt;00:11, 8.21it/s] Iteration: 98% 4700/4796 [09:36&lt;00:11, 8.19it/s] Iteration: 98% 4701/4796 [09:36&lt;00:11, 8.13it/s] Iteration: 98% 4702/4796 [09:36&lt;00:11, 8.15it/s] Iteration: 98% 4703/4796 [09:36&lt;00:11, 8.25it/s]{&#39;loss&#39;: 0.0807364501953125, &#39;learning_rate&#39;: 1.6986377536836252e-05, &#39;epoch&#39;: 1.980817347789825, &#39;step&#39;: 9500} Iteration: 98% 4704/4796 [09:36&lt;00:11, 8.12it/s] Iteration: 98% 4705/4796 [09:36&lt;00:11, 8.18it/s] Iteration: 98% 4706/4796 [09:37&lt;00:10, 8.19it/s] Iteration: 98% 4707/4796 [09:37&lt;00:10, 8.12it/s] Iteration: 98% 4708/4796 [09:37&lt;00:10, 8.03it/s] Iteration: 98% 4709/4796 [09:37&lt;00:10, 8.07it/s] Iteration: 98% 4710/4796 [09:37&lt;00:10, 8.09it/s] Iteration: 98% 4711/4796 [09:37&lt;00:10, 8.11it/s] Iteration: 98% 4712/4796 [09:37&lt;00:10, 8.17it/s] Iteration: 98% 4713/4796 [09:37&lt;00:10, 8.10it/s] Iteration: 98% 4714/4796 [09:38&lt;00:10, 8.12it/s] Iteration: 98% 4715/4796 [09:38&lt;00:10, 8.08it/s] Iteration: 98% 4716/4796 [09:38&lt;00:09, 8.14it/s] Iteration: 98% 4717/4796 [09:38&lt;00:09, 8.07it/s] Iteration: 98% 4718/4796 [09:38&lt;00:09, 8.19it/s] Iteration: 98% 4719/4796 [09:38&lt;00:09, 8.20it/s] Iteration: 98% 4720/4796 [09:38&lt;00:09, 8.19it/s] Iteration: 98% 4721/4796 [09:38&lt;00:09, 8.05it/s] Iteration: 98% 4722/4796 [09:39&lt;00:09, 8.10it/s] Iteration: 98% 4723/4796 [09:39&lt;00:08, 8.11it/s] Iteration: 98% 4724/4796 [09:39&lt;00:09, 7.99it/s] Iteration: 99% 4725/4796 [09:39&lt;00:08, 8.07it/s] Iteration: 99% 4726/4796 [09:39&lt;00:08, 8.22it/s] Iteration: 99% 4727/4796 [09:39&lt;00:08, 8.23it/s] Iteration: 99% 4728/4796 [09:39&lt;00:08, 8.16it/s] Iteration: 99% 4729/4796 [09:39&lt;00:08, 8.16it/s] Iteration: 99% 4730/4796 [09:40&lt;00:08, 8.19it/s] Iteration: 99% 4731/4796 [09:40&lt;00:07, 8.16it/s] Iteration: 99% 4732/4796 [09:40&lt;00:07, 8.15it/s] Iteration: 99% 4733/4796 [09:40&lt;00:07, 8.20it/s] Iteration: 99% 4734/4796 [09:40&lt;00:07, 8.21it/s] Iteration: 99% 4735/4796 [09:40&lt;00:07, 8.10it/s] Iteration: 99% 4736/4796 [09:40&lt;00:07, 8.12it/s] Iteration: 99% 4737/4796 [09:40&lt;00:07, 8.16it/s] Iteration: 99% 4738/4796 [09:41&lt;00:07, 8.17it/s] Iteration: 99% 4739/4796 [09:41&lt;00:07, 7.99it/s] Iteration: 99% 4740/4796 [09:41&lt;00:06, 8.06it/s] Iteration: 99% 4741/4796 [09:41&lt;00:06, 8.07it/s] Iteration: 99% 4742/4796 [09:41&lt;00:06, 8.11it/s] Iteration: 99% 4743/4796 [09:41&lt;00:06, 8.14it/s] Iteration: 99% 4744/4796 [09:41&lt;00:06, 8.10it/s] Iteration: 99% 4745/4796 [09:41&lt;00:06, 8.21it/s] Iteration: 99% 4746/4796 [09:42&lt;00:06, 8.22it/s] Iteration: 99% 4747/4796 [09:42&lt;00:05, 8.18it/s] Iteration: 99% 4748/4796 [09:42&lt;00:05, 8.04it/s] Iteration: 99% 4749/4796 [09:42&lt;00:05, 8.11it/s] Iteration: 99% 4750/4796 [09:42&lt;00:05, 8.15it/s] Iteration: 99% 4751/4796 [09:42&lt;00:05, 8.26it/s] Iteration: 99% 4752/4796 [09:42&lt;00:05, 8.26it/s] Iteration: 99% 4753/4796 [09:42&lt;00:05, 8.14it/s] Iteration: 99% 4754/4796 [09:43&lt;00:05, 8.19it/s] Iteration: 99% 4755/4796 [09:43&lt;00:05, 8.17it/s] Iteration: 99% 4756/4796 [09:43&lt;00:04, 8.14it/s] Iteration: 99% 4757/4796 [09:43&lt;00:04, 7.99it/s] Iteration: 99% 4758/4796 [09:43&lt;00:04, 8.04it/s] Iteration: 99% 4759/4796 [09:43&lt;00:04, 8.07it/s] Iteration: 99% 4760/4796 [09:43&lt;00:04, 8.22it/s] Iteration: 99% 4761/4796 [09:43&lt;00:04, 8.18it/s] Iteration: 99% 4762/4796 [09:44&lt;00:04, 8.21it/s] Iteration: 99% 4763/4796 [09:44&lt;00:04, 8.19it/s] Iteration: 99% 4764/4796 [09:44&lt;00:03, 8.17it/s] Iteration: 99% 4765/4796 [09:44&lt;00:03, 8.30it/s] Iteration: 99% 4766/4796 [09:44&lt;00:03, 8.29it/s] Iteration: 99% 4767/4796 [09:44&lt;00:03, 8.12it/s] Iteration: 99% 4768/4796 [09:44&lt;00:03, 8.18it/s] Iteration: 99% 4769/4796 [09:44&lt;00:03, 8.17it/s] Iteration: 99% 4770/4796 [09:44&lt;00:03, 8.15it/s] Iteration: 99% 4771/4796 [09:45&lt;00:03, 8.12it/s] Iteration: 99% 4772/4796 [09:45&lt;00:02, 8.23it/s] Iteration: 100% 4773/4796 [09:45&lt;00:02, 8.19it/s] Iteration: 100% 4774/4796 [09:45&lt;00:02, 8.19it/s] Iteration: 100% 4775/4796 [09:45&lt;00:02, 8.30it/s] Iteration: 100% 4776/4796 [09:45&lt;00:02, 8.28it/s] Iteration: 100% 4777/4796 [09:45&lt;00:02, 8.37it/s] Iteration: 100% 4778/4796 [09:45&lt;00:02, 8.31it/s] Iteration: 100% 4779/4796 [09:46&lt;00:02, 8.37it/s] Iteration: 100% 4780/4796 [09:46&lt;00:01, 8.33it/s] Iteration: 100% 4781/4796 [09:46&lt;00:01, 8.17it/s] Iteration: 100% 4782/4796 [09:46&lt;00:01, 8.20it/s] Iteration: 100% 4783/4796 [09:46&lt;00:01, 8.28it/s] Iteration: 100% 4784/4796 [09:46&lt;00:01, 8.31it/s] Iteration: 100% 4785/4796 [09:46&lt;00:01, 8.12it/s] Iteration: 100% 4786/4796 [09:46&lt;00:01, 8.16it/s] Iteration: 100% 4787/4796 [09:47&lt;00:01, 8.26it/s] Iteration: 100% 4788/4796 [09:47&lt;00:00, 8.24it/s] Iteration: 100% 4789/4796 [09:47&lt;00:00, 8.34it/s] Iteration: 100% 4790/4796 [09:47&lt;00:00, 8.31it/s] Iteration: 100% 4791/4796 [09:47&lt;00:00, 8.15it/s] Iteration: 100% 4792/4796 [09:47&lt;00:00, 8.18it/s] Iteration: 100% 4793/4796 [09:47&lt;00:00, 8.18it/s] Iteration: 100% 4794/4796 [09:47&lt;00:00, 8.19it/s] Iteration: 100% 4795/4796 [09:48&lt;00:00, 8.19it/s] Iteration: 100% 4796/4796 [09:48&lt;00:00, 8.15it/s] Epoch: 67% 2/3 [19:33&lt;09:45, 585.99s/it] Iteration: 0% 0/4796 [00:00&lt;?, ?it/s] Iteration: 0% 1/4796 [00:00&lt;09:39, 8.27it/s] Iteration: 0% 2/4796 [00:00&lt;09:40, 8.26it/s] Iteration: 0% 3/4796 [00:00&lt;09:36, 8.32it/s] Iteration: 0% 4/4796 [00:00&lt;09:47, 8.15it/s] Iteration: 0% 5/4796 [00:00&lt;09:45, 8.18it/s] Iteration: 0% 6/4796 [00:00&lt;09:45, 8.18it/s] Iteration: 0% 7/4796 [00:00&lt;09:39, 8.27it/s] Iteration: 0% 8/4796 [00:00&lt;09:33, 8.34it/s] Iteration: 0% 9/4796 [00:01&lt;09:39, 8.26it/s] Iteration: 0% 10/4796 [00:01&lt;09:38, 8.27it/s] Iteration: 0% 11/4796 [00:01&lt;09:39, 8.26it/s] Iteration: 0% 12/4796 [00:01&lt;09:39, 8.26it/s] Iteration: 0% 13/4796 [00:01&lt;09:48, 8.13it/s] Iteration: 0% 14/4796 [00:01&lt;09:56, 8.02it/s] Iteration: 0% 15/4796 [00:01&lt;09:51, 8.08it/s] Iteration: 0% 16/4796 [00:01&lt;09:43, 8.19it/s] Iteration: 0% 17/4796 [00:02&lt;09:44, 8.18it/s] Iteration: 0% 18/4796 [00:02&lt;09:44, 8.18it/s] Iteration: 0% 19/4796 [00:02&lt;09:44, 8.17it/s] Iteration: 0% 20/4796 [00:02&lt;09:44, 8.18it/s] Iteration: 0% 21/4796 [00:02&lt;09:41, 8.21it/s] Iteration: 0% 22/4796 [00:02&lt;09:41, 8.21it/s] Iteration: 0% 23/4796 [00:02&lt;09:43, 8.18it/s] Iteration: 1% 24/4796 [00:02&lt;09:41, 8.21it/s] Iteration: 1% 25/4796 [00:03&lt;09:41, 8.20it/s] Iteration: 1% 26/4796 [00:03&lt;09:35, 8.28it/s] Iteration: 1% 27/4796 [00:03&lt;09:36, 8.27it/s] Iteration: 1% 28/4796 [00:03&lt;09:50, 8.08it/s] Iteration: 1% 29/4796 [00:03&lt;09:46, 8.13it/s] Iteration: 1% 30/4796 [00:03&lt;09:37, 8.25it/s] Iteration: 1% 31/4796 [00:03&lt;09:41, 8.20it/s] Iteration: 1% 32/4796 [00:03&lt;09:34, 8.30it/s] Iteration: 1% 33/4796 [00:04&lt;09:34, 8.28it/s] Iteration: 1% 34/4796 [00:04&lt;09:37, 8.25it/s] Iteration: 1% 35/4796 [00:04&lt;09:37, 8.25it/s] Iteration: 1% 36/4796 [00:04&lt;09:38, 8.22it/s] Iteration: 1% 37/4796 [00:04&lt;09:40, 8.20it/s] Iteration: 1% 38/4796 [00:04&lt;09:38, 8.22it/s] Iteration: 1% 39/4796 [00:04&lt;09:33, 8.29it/s] Iteration: 1% 40/4796 [00:04&lt;09:30, 8.34it/s] Iteration: 1% 41/4796 [00:04&lt;09:31, 8.32it/s] Iteration: 1% 42/4796 [00:05&lt;09:33, 8.29it/s] Iteration: 1% 43/4796 [00:05&lt;09:43, 8.15it/s] Iteration: 1% 44/4796 [00:05&lt;09:41, 8.18it/s] Iteration: 1% 45/4796 [00:05&lt;09:34, 8.27it/s] Iteration: 1% 46/4796 [00:05&lt;09:34, 8.27it/s] Iteration: 1% 47/4796 [00:05&lt;09:45, 8.10it/s] Iteration: 1% 48/4796 [00:05&lt;09:41, 8.17it/s] Iteration: 1% 49/4796 [00:05&lt;09:40, 8.18it/s] Iteration: 1% 50/4796 [00:06&lt;09:33, 8.28it/s] Iteration: 1% 51/4796 [00:06&lt;09:36, 8.23it/s] Iteration: 1% 52/4796 [00:06&lt;09:44, 8.12it/s] Iteration: 1% 53/4796 [00:06&lt;09:41, 8.15it/s] Iteration: 1% 54/4796 [00:06&lt;09:40, 8.17it/s] Iteration: 1% 55/4796 [00:06&lt;09:39, 8.18it/s] Iteration: 1% 56/4796 [00:06&lt;09:47, 8.07it/s] Iteration: 1% 57/4796 [00:06&lt;09:43, 8.12it/s] Iteration: 1% 58/4796 [00:07&lt;09:39, 8.17it/s] Iteration: 1% 59/4796 [00:07&lt;09:38, 8.19it/s] Iteration: 1% 60/4796 [00:07&lt;09:39, 8.18it/s] Iteration: 1% 61/4796 [00:07&lt;09:40, 8.16it/s] Iteration: 1% 62/4796 [00:07&lt;09:36, 8.20it/s] Iteration: 1% 63/4796 [00:07&lt;09:36, 8.21it/s] Iteration: 1% 64/4796 [00:07&lt;09:28, 8.32it/s] Iteration: 1% 65/4796 [00:07&lt;09:38, 8.18it/s] Iteration: 1% 66/4796 [00:08&lt;09:36, 8.21it/s] Iteration: 1% 67/4796 [00:08&lt;09:37, 8.19it/s] Iteration: 1% 68/4796 [00:08&lt;09:36, 8.20it/s] Iteration: 1% 69/4796 [00:08&lt;09:37, 8.19it/s] Iteration: 1% 70/4796 [00:08&lt;09:44, 8.09it/s] Iteration: 1% 71/4796 [00:08&lt;09:46, 8.06it/s] Iteration: 2% 72/4796 [00:08&lt;09:45, 8.07it/s] Iteration: 2% 73/4796 [00:08&lt;09:36, 8.19it/s] Iteration: 2% 74/4796 [00:09&lt;09:44, 8.08it/s] Iteration: 2% 75/4796 [00:09&lt;09:41, 8.12it/s] Iteration: 2% 76/4796 [00:09&lt;09:40, 8.13it/s] Iteration: 2% 77/4796 [00:09&lt;09:30, 8.27it/s] Iteration: 2% 78/4796 [00:09&lt;09:32, 8.25it/s] Iteration: 2% 79/4796 [00:09&lt;09:38, 8.15it/s] Iteration: 2% 80/4796 [00:09&lt;09:38, 8.15it/s] Iteration: 2% 81/4796 [00:09&lt;09:37, 8.16it/s] Iteration: 2% 82/4796 [00:10&lt;09:35, 8.19it/s] Iteration: 2% 83/4796 [00:10&lt;09:34, 8.20it/s] Iteration: 2% 84/4796 [00:10&lt;09:43, 8.08it/s] Iteration: 2% 85/4796 [00:10&lt;09:39, 8.13it/s] Iteration: 2% 86/4796 [00:10&lt;09:39, 8.13it/s] Iteration: 2% 87/4796 [00:10&lt;09:38, 8.14it/s] Iteration: 2% 88/4796 [00:10&lt;09:30, 8.25it/s] Iteration: 2% 89/4796 [00:10&lt;09:32, 8.23it/s] Iteration: 2% 90/4796 [00:10&lt;09:34, 8.19it/s] Iteration: 2% 91/4796 [00:11&lt;09:32, 8.22it/s] Iteration: 2% 92/4796 [00:11&lt;09:33, 8.21it/s] Iteration: 2% 93/4796 [00:11&lt;09:43, 8.06it/s] Iteration: 2% 94/4796 [00:11&lt;09:38, 8.13it/s] Iteration: 2% 95/4796 [00:11&lt;09:30, 8.24it/s] Iteration: 2% 96/4796 [00:11&lt;09:37, 8.14it/s] Iteration: 2% 97/4796 [00:11&lt;09:46, 8.01it/s] Iteration: 2% 98/4796 [00:11&lt;09:41, 8.08it/s] Iteration: 2% 99/4796 [00:12&lt;09:33, 8.19it/s] Iteration: 2% 100/4796 [00:12&lt;09:32, 8.20it/s] Iteration: 2% 101/4796 [00:12&lt;09:33, 8.19it/s] Iteration: 2% 102/4796 [00:12&lt;09:42, 8.06it/s] Iteration: 2% 103/4796 [00:12&lt;09:40, 8.08it/s] Iteration: 2% 104/4796 [00:12&lt;09:37, 8.13it/s] Iteration: 2% 105/4796 [00:12&lt;09:36, 8.13it/s] Iteration: 2% 106/4796 [00:12&lt;09:42, 8.06it/s] Iteration: 2% 107/4796 [00:13&lt;09:32, 8.20it/s] Iteration: 2% 108/4796 [00:13&lt;09:31, 8.21it/s] Iteration: 2% 109/4796 [00:13&lt;09:30, 8.22it/s] Iteration: 2% 110/4796 [00:13&lt;09:30, 8.22it/s] Iteration: 2% 111/4796 [00:13&lt;09:40, 8.08it/s] Iteration: 2% 112/4796 [00:13&lt;09:54, 7.88it/s] Iteration: 2% 113/4796 [00:13&lt;09:40, 8.07it/s] Iteration: 2% 114/4796 [00:13&lt;09:38, 8.10it/s] Iteration: 2% 115/4796 [00:14&lt;09:44, 8.00it/s] Iteration: 2% 116/4796 [00:14&lt;09:41, 8.05it/s] Iteration: 2% 117/4796 [00:14&lt;09:33, 8.16it/s] Iteration: 2% 118/4796 [00:14&lt;09:26, 8.26it/s] Iteration: 2% 119/4796 [00:14&lt;09:27, 8.24it/s] Iteration: 3% 120/4796 [00:14&lt;09:28, 8.23it/s] Iteration: 3% 121/4796 [00:14&lt;09:30, 8.19it/s] Iteration: 3% 122/4796 [00:14&lt;09:24, 8.28it/s] Iteration: 3% 123/4796 [00:15&lt;09:25, 8.26it/s] Iteration: 3% 124/4796 [00:15&lt;09:27, 8.23it/s] Iteration: 3% 125/4796 [00:15&lt;09:37, 8.09it/s] Iteration: 3% 126/4796 [00:15&lt;09:28, 8.22it/s] Iteration: 3% 127/4796 [00:15&lt;09:23, 8.28it/s] Iteration: 3% 128/4796 [00:15&lt;09:23, 8.28it/s] Iteration: 3% 129/4796 [00:15&lt;09:24, 8.27it/s] Iteration: 3% 130/4796 [00:15&lt;09:35, 8.11it/s] Iteration: 3% 131/4796 [00:16&lt;09:24, 8.26it/s] Iteration: 3% 132/4796 [00:16&lt;09:28, 8.20it/s] Iteration: 3% 133/4796 [00:16&lt;09:23, 8.27it/s] Iteration: 3% 134/4796 [00:16&lt;09:22, 8.29it/s] Iteration: 3% 135/4796 [00:16&lt;09:22, 8.29it/s] Iteration: 3% 136/4796 [00:16&lt;09:24, 8.25it/s] Iteration: 3% 137/4796 [00:16&lt;09:19, 8.32it/s] Iteration: 3% 138/4796 [00:16&lt;09:29, 8.18it/s] Iteration: 3% 139/4796 [00:16&lt;09:28, 8.19it/s] Iteration: 3% 140/4796 [00:17&lt;09:32, 8.13it/s] Iteration: 3% 141/4796 [00:17&lt;09:30, 8.16it/s] Iteration: 3% 142/4796 [00:17&lt;09:28, 8.18it/s] Iteration: 3% 143/4796 [00:17&lt;09:31, 8.14it/s] Iteration: 3% 144/4796 [00:17&lt;09:22, 8.28it/s] Iteration: 3% 145/4796 [00:17&lt;09:25, 8.23it/s] Iteration: 3% 146/4796 [00:17&lt;09:25, 8.22it/s] Iteration: 3% 147/4796 [00:17&lt;09:26, 8.21it/s] Iteration: 3% 148/4796 [00:18&lt;09:24, 8.23it/s] Iteration: 3% 149/4796 [00:18&lt;09:35, 8.07it/s] Iteration: 3% 150/4796 [00:18&lt;09:31, 8.13it/s] Iteration: 3% 151/4796 [00:18&lt;09:33, 8.10it/s] Iteration: 3% 152/4796 [00:18&lt;09:30, 8.14it/s] Iteration: 3% 153/4796 [00:18&lt;09:27, 8.19it/s] Iteration: 3% 154/4796 [00:18&lt;09:36, 8.06it/s] Iteration: 3% 155/4796 [00:18&lt;09:26, 8.19it/s] Iteration: 3% 156/4796 [00:19&lt;09:23, 8.23it/s] Iteration: 3% 157/4796 [00:19&lt;09:19, 8.29it/s] Iteration: 3% 158/4796 [00:19&lt;09:28, 8.15it/s] Iteration: 3% 159/4796 [00:19&lt;09:19, 8.29it/s] Iteration: 3% 160/4796 [00:19&lt;09:14, 8.35it/s] Iteration: 3% 161/4796 [00:19&lt;09:17, 8.31it/s] Iteration: 3% 162/4796 [00:19&lt;09:19, 8.28it/s] Iteration: 3% 163/4796 [00:19&lt;09:24, 8.21it/s] Iteration: 3% 164/4796 [00:20&lt;09:18, 8.29it/s] Iteration: 3% 165/4796 [00:20&lt;09:21, 8.25it/s] Iteration: 3% 166/4796 [00:20&lt;09:23, 8.22it/s] Iteration: 3% 167/4796 [00:20&lt;09:25, 8.19it/s] Iteration: 4% 168/4796 [00:20&lt;09:36, 8.02it/s] Iteration: 4% 169/4796 [00:20&lt;09:26, 8.16it/s] Iteration: 4% 170/4796 [00:20&lt;09:25, 8.19it/s] Iteration: 4% 171/4796 [00:20&lt;09:20, 8.26it/s] Iteration: 4% 172/4796 [00:21&lt;09:20, 8.25it/s] Iteration: 4% 173/4796 [00:21&lt;09:30, 8.10it/s] Iteration: 4% 174/4796 [00:21&lt;09:28, 8.13it/s] Iteration: 4% 175/4796 [00:21&lt;09:20, 8.24it/s] Iteration: 4% 176/4796 [00:21&lt;09:13, 8.35it/s] Iteration: 4% 177/4796 [00:21&lt;09:09, 8.40it/s] Iteration: 4% 178/4796 [00:21&lt;09:22, 8.21it/s] Iteration: 4% 179/4796 [00:21&lt;09:23, 8.20it/s] Iteration: 4% 180/4796 [00:21&lt;09:16, 8.29it/s] Iteration: 4% 181/4796 [00:22&lt;09:18, 8.27it/s] Iteration: 4% 182/4796 [00:22&lt;09:19, 8.25it/s] Iteration: 4% 183/4796 [00:22&lt;09:25, 8.16it/s] Iteration: 4% 184/4796 [00:22&lt;09:17, 8.28it/s] Iteration: 4% 185/4796 [00:22&lt;09:18, 8.25it/s] Iteration: 4% 186/4796 [00:22&lt;09:14, 8.32it/s] Iteration: 4% 187/4796 [00:22&lt;09:21, 8.21it/s] Iteration: 4% 188/4796 [00:22&lt;09:21, 8.21it/s] Iteration: 4% 189/4796 [00:23&lt;09:21, 8.20it/s] Iteration: 4% 190/4796 [00:23&lt;09:22, 8.19it/s] Iteration: 4% 191/4796 [00:23&lt;09:21, 8.19it/s] Iteration: 4% 192/4796 [00:23&lt;09:29, 8.08it/s] Iteration: 4% 193/4796 [00:23&lt;09:26, 8.13it/s] Iteration: 4% 194/4796 [00:23&lt;09:22, 8.19it/s] Iteration: 4% 195/4796 [00:23&lt;09:22, 8.19it/s] Iteration: 4% 196/4796 [00:23&lt;09:30, 8.07it/s] Iteration: 4% 197/4796 [00:24&lt;09:25, 8.13it/s] Iteration: 4% 198/4796 [00:24&lt;09:26, 8.12it/s] Iteration: 4% 199/4796 [00:24&lt;09:47, 7.83it/s] Iteration: 4% 200/4796 [00:24&lt;09:31, 8.04it/s] Iteration: 4% 201/4796 [00:24&lt;09:32, 8.03it/s] Iteration: 4% 202/4796 [00:24&lt;09:28, 8.08it/s] Iteration: 4% 203/4796 [00:24&lt;09:27, 8.09it/s] Iteration: 4% 204/4796 [00:24&lt;09:20, 8.19it/s] Iteration: 4% 205/4796 [00:25&lt;09:28, 8.08it/s] Iteration: 4% 206/4796 [00:25&lt;09:28, 8.07it/s] Iteration: 4% 207/4796 [00:25&lt;09:25, 8.11it/s] Iteration: 4% 208/4796 [00:25&lt;09:23, 8.15it/s] Iteration: 4% 209/4796 [00:25&lt;09:29, 8.05it/s] Iteration: 4% 210/4796 [00:25&lt;09:18, 8.21it/s] Iteration: 4% 211/4796 [00:25&lt;09:11, 8.31it/s] Iteration: 4% 212/4796 [00:25&lt;09:15, 8.25it/s] Iteration: 4% 213/4796 [00:26&lt;09:18, 8.21it/s] Iteration: 4% 214/4796 [00:26&lt;09:19, 8.19it/s] Iteration: 4% 215/4796 [00:26&lt;09:25, 8.11it/s] Iteration: 5% 216/4796 [00:26&lt;09:23, 8.12it/s] Iteration: 5% 217/4796 [00:26&lt;09:17, 8.21it/s] Iteration: 5% 218/4796 [00:26&lt;09:15, 8.24it/s] Iteration: 5% 219/4796 [00:26&lt;09:23, 8.12it/s] Iteration: 5% 220/4796 [00:26&lt;09:22, 8.14it/s] Iteration: 5% 221/4796 [00:27&lt;09:24, 8.10it/s] Iteration: 5% 222/4796 [00:27&lt;09:20, 8.15it/s] Iteration: 5% 223/4796 [00:27&lt;09:31, 8.00it/s] Iteration: 5% 224/4796 [00:27&lt;09:26, 8.07it/s] Iteration: 5% 225/4796 [00:27&lt;09:23, 8.11it/s] Iteration: 5% 226/4796 [00:27&lt;09:21, 8.15it/s] Iteration: 5% 227/4796 [00:27&lt;09:20, 8.16it/s] Iteration: 5% 228/4796 [00:27&lt;09:22, 8.13it/s] Iteration: 5% 229/4796 [00:27&lt;09:14, 8.24it/s] Iteration: 5% 230/4796 [00:28&lt;09:09, 8.31it/s] Iteration: 5% 231/4796 [00:28&lt;09:11, 8.28it/s] Iteration: 5% 232/4796 [00:28&lt;09:15, 8.22it/s] Iteration: 5% 233/4796 [00:28&lt;09:14, 8.23it/s] Iteration: 5% 234/4796 [00:28&lt;09:15, 8.22it/s] Iteration: 5% 235/4796 [00:28&lt;09:15, 8.22it/s] Iteration: 5% 236/4796 [00:28&lt;09:06, 8.34it/s] Iteration: 5% 237/4796 [00:28&lt;09:02, 8.41it/s] Iteration: 5% 238/4796 [00:29&lt;09:18, 8.16it/s] Iteration: 5% 239/4796 [00:29&lt;09:12, 8.25it/s] Iteration: 5% 240/4796 [00:29&lt;09:13, 8.24it/s] Iteration: 5% 241/4796 [00:29&lt;09:06, 8.34it/s] Iteration: 5% 242/4796 [00:29&lt;09:10, 8.27it/s] Iteration: 5% 243/4796 [00:29&lt;09:18, 8.14it/s] Iteration: 5% 244/4796 [00:29&lt;09:16, 8.18it/s] Iteration: 5% 245/4796 [00:29&lt;09:11, 8.26it/s] Iteration: 5% 246/4796 [00:30&lt;09:06, 8.32it/s] Iteration: 5% 247/4796 [00:30&lt;09:10, 8.27it/s] Iteration: 5% 248/4796 [00:30&lt;09:11, 8.24it/s] Iteration: 5% 249/4796 [00:30&lt;09:16, 8.17it/s] Iteration: 5% 250/4796 [00:30&lt;09:09, 8.27it/s] Iteration: 5% 251/4796 [00:30&lt;09:04, 8.35it/s] Iteration: 5% 252/4796 [00:30&lt;09:00, 8.41it/s] Iteration: 5% 253/4796 [00:30&lt;09:14, 8.19it/s] Iteration: 5% 254/4796 [00:31&lt;09:13, 8.21it/s] Iteration: 5% 255/4796 [00:31&lt;09:14, 8.19it/s] Iteration: 5% 256/4796 [00:31&lt;09:16, 8.16it/s] Iteration: 5% 257/4796 [00:31&lt;09:16, 8.16it/s] Iteration: 5% 258/4796 [00:31&lt;09:15, 8.17it/s] Iteration: 5% 259/4796 [00:31&lt;09:18, 8.12it/s] Iteration: 5% 260/4796 [00:31&lt;09:16, 8.15it/s] Iteration: 5% 261/4796 [00:31&lt;09:14, 8.18it/s] Iteration: 5% 262/4796 [00:31&lt;09:13, 8.19it/s] Iteration: 5% 263/4796 [00:32&lt;09:21, 8.08it/s] Iteration: 6% 264/4796 [00:32&lt;09:11, 8.22it/s] Iteration: 6% 265/4796 [00:32&lt;09:12, 8.20it/s] Iteration: 6% 266/4796 [00:32&lt;09:12, 8.20it/s] Iteration: 6% 267/4796 [00:32&lt;09:11, 8.21it/s] Iteration: 6% 268/4796 [00:32&lt;09:11, 8.20it/s] Iteration: 6% 269/4796 [00:32&lt;09:05, 8.30it/s] Iteration: 6% 270/4796 [00:32&lt;09:01, 8.36it/s] Iteration: 6% 271/4796 [00:33&lt;09:02, 8.34it/s] Iteration: 6% 272/4796 [00:33&lt;09:04, 8.30it/s] Iteration: 6% 273/4796 [00:33&lt;09:07, 8.26it/s] Iteration: 6% 274/4796 [00:33&lt;09:03, 8.33it/s] Iteration: 6% 275/4796 [00:33&lt;09:05, 8.28it/s] Iteration: 6% 276/4796 [00:33&lt;09:00, 8.36it/s] Iteration: 6% 277/4796 [00:33&lt;09:17, 8.10it/s] Iteration: 6% 278/4796 [00:33&lt;09:13, 8.16it/s] Iteration: 6% 279/4796 [00:34&lt;09:06, 8.26it/s] Iteration: 6% 280/4796 [00:34&lt;09:06, 8.27it/s] Iteration: 6% 281/4796 [00:34&lt;09:06, 8.26it/s] Iteration: 6% 282/4796 [00:34&lt;09:10, 8.19it/s] Iteration: 6% 283/4796 [00:34&lt;09:09, 8.21it/s] Iteration: 6% 284/4796 [00:34&lt;09:10, 8.20it/s] Iteration: 6% 285/4796 [00:34&lt;09:10, 8.19it/s] Iteration: 6% 286/4796 [00:34&lt;09:08, 8.22it/s] Iteration: 6% 287/4796 [00:35&lt;09:20, 8.05it/s] Iteration: 6% 288/4796 [00:35&lt;09:10, 8.18it/s] Iteration: 6% 289/4796 [00:35&lt;09:02, 8.31it/s] Iteration: 6% 290/4796 [00:35&lt;09:03, 8.29it/s] Iteration: 6% 291/4796 [00:35&lt;09:12, 8.16it/s] Iteration: 6% 292/4796 [00:35&lt;09:05, 8.26it/s] Iteration: 6% 293/4796 [00:35&lt;09:06, 8.24it/s] Iteration: 6% 294/4796 [00:35&lt;09:00, 8.33it/s] Iteration: 6% 295/4796 [00:35&lt;08:59, 8.35it/s] Iteration: 6% 296/4796 [00:36&lt;09:09, 8.18it/s] Iteration: 6% 297/4796 [00:36&lt;09:07, 8.21it/s] Iteration: 6% 298/4796 [00:36&lt;09:09, 8.19it/s] Iteration: 6% 299/4796 [00:36&lt;09:02, 8.29it/s] Iteration: 6% 300/4796 [00:36&lt;09:11, 8.16it/s] Iteration: 6% 301/4796 [00:36&lt;09:11, 8.15it/s] Iteration: 6% 302/4796 [00:36&lt;09:10, 8.16it/s] Iteration: 6% 303/4796 [00:36&lt;09:11, 8.15it/s] Iteration: 6% 304/4796 [00:37&lt;09:10, 8.16it/s] Iteration: 6% 305/4796 [00:37&lt;09:10, 8.16it/s] Iteration: 6% 306/4796 [00:37&lt;09:11, 8.14it/s] Iteration: 6% 307/4796 [00:37&lt;09:11, 8.14it/s] Iteration: 6% 308/4796 [00:37&lt;09:11, 8.13it/s] Iteration: 6% 309/4796 [00:37&lt;09:11, 8.13it/s] Iteration: 6% 310/4796 [00:37&lt;09:20, 8.01it/s] Iteration: 6% 311/4796 [00:37&lt;09:14, 8.09it/s] Iteration: 7% 312/4796 [00:38&lt;09:18, 8.02it/s] Iteration: 7% 313/4796 [00:38&lt;09:17, 8.04it/s] Iteration: 7% 314/4796 [00:38&lt;09:08, 8.17it/s] Iteration: 7% 315/4796 [00:38&lt;09:10, 8.15it/s] Iteration: 7% 316/4796 [00:38&lt;09:10, 8.14it/s] Iteration: 7% 317/4796 [00:38&lt;09:08, 8.17it/s] Iteration: 7% 318/4796 [00:38&lt;09:06, 8.19it/s] Iteration: 7% 319/4796 [00:38&lt;09:14, 8.08it/s] Iteration: 7% 320/4796 [00:39&lt;09:10, 8.13it/s] Iteration: 7% 321/4796 [00:39&lt;09:10, 8.14it/s] Iteration: 7% 322/4796 [00:39&lt;09:10, 8.13it/s] Iteration: 7% 323/4796 [00:39&lt;09:01, 8.26it/s] Iteration: 7% 324/4796 [00:39&lt;09:05, 8.20it/s] Iteration: 7% 325/4796 [00:39&lt;09:04, 8.21it/s] Iteration: 7% 326/4796 [00:39&lt;09:05, 8.20it/s] Iteration: 7% 327/4796 [00:39&lt;09:03, 8.22it/s] Iteration: 7% 328/4796 [00:40&lt;09:07, 8.16it/s] Iteration: 7% 329/4796 [00:40&lt;09:14, 8.06it/s] Iteration: 7% 330/4796 [00:40&lt;09:10, 8.12it/s] Iteration: 7% 331/4796 [00:40&lt;09:07, 8.15it/s] Iteration: 7% 332/4796 [00:40&lt;09:08, 8.14it/s] Iteration: 7% 333/4796 [00:40&lt;09:16, 8.03it/s] Iteration: 7% 334/4796 [00:40&lt;09:13, 8.07it/s] Iteration: 7% 335/4796 [00:40&lt;09:12, 8.08it/s] Iteration: 7% 336/4796 [00:41&lt;09:03, 8.20it/s] Iteration: 7% 337/4796 [00:41&lt;09:04, 8.18it/s] Iteration: 7% 338/4796 [00:41&lt;09:03, 8.20it/s] Iteration: 7% 339/4796 [00:41&lt;09:02, 8.21it/s] Iteration: 7% 340/4796 [00:41&lt;09:02, 8.22it/s] Iteration: 7% 341/4796 [00:41&lt;09:01, 8.23it/s] Iteration: 7% 342/4796 [00:41&lt;09:09, 8.11it/s] Iteration: 7% 343/4796 [00:41&lt;09:06, 8.14it/s] Iteration: 7% 344/4796 [00:42&lt;09:06, 8.14it/s] Iteration: 7% 345/4796 [00:42&lt;09:15, 8.01it/s] Iteration: 7% 346/4796 [00:42&lt;09:11, 8.08it/s] Iteration: 7% 347/4796 [00:42&lt;09:13, 8.03it/s] Iteration: 7% 348/4796 [00:42&lt;09:11, 8.06it/s] Iteration: 7% 349/4796 [00:42&lt;09:07, 8.13it/s] Iteration: 7% 350/4796 [00:42&lt;09:04, 8.17it/s] Iteration: 7% 351/4796 [00:42&lt;09:09, 8.09it/s] Iteration: 7% 352/4796 [00:43&lt;09:00, 8.22it/s] Iteration: 7% 353/4796 [00:43&lt;09:02, 8.19it/s] Iteration: 7% 354/4796 [00:43&lt;08:56, 8.27it/s] Iteration: 7% 355/4796 [00:43&lt;08:58, 8.25it/s] Iteration: 7% 356/4796 [00:43&lt;09:06, 8.12it/s] Iteration: 7% 357/4796 [00:43&lt;09:07, 8.11it/s] Iteration: 7% 358/4796 [00:43&lt;09:04, 8.15it/s] Iteration: 7% 359/4796 [00:43&lt;08:56, 8.27it/s] Iteration: 8% 360/4796 [00:43&lt;09:09, 8.07it/s] Iteration: 8% 361/4796 [00:44&lt;09:03, 8.15it/s] Iteration: 8% 362/4796 [00:44&lt;08:58, 8.24it/s] Iteration: 8% 363/4796 [00:44&lt;08:52, 8.32it/s] Iteration: 8% 364/4796 [00:44&lt;08:54, 8.30it/s] Iteration: 8% 365/4796 [00:44&lt;08:56, 8.26it/s] Iteration: 8% 366/4796 [00:44&lt;09:05, 8.11it/s] Iteration: 8% 367/4796 [00:44&lt;09:05, 8.13it/s] Iteration: 8% 368/4796 [00:44&lt;09:03, 8.14it/s] Iteration: 8% 369/4796 [00:45&lt;09:03, 8.14it/s] Iteration: 8% 370/4796 [00:45&lt;09:14, 7.98it/s] Iteration: 8% 371/4796 [00:45&lt;09:08, 8.07it/s] Iteration: 8% 372/4796 [00:45&lt;08:59, 8.20it/s] Iteration: 8% 373/4796 [00:45&lt;08:58, 8.21it/s] Iteration: 8% 374/4796 [00:45&lt;08:58, 8.22it/s] Iteration: 8% 375/4796 [00:45&lt;09:02, 8.15it/s] Iteration: 8% 376/4796 [00:45&lt;09:00, 8.18it/s] Iteration: 8% 377/4796 [00:46&lt;08:51, 8.31it/s] Iteration: 8% 378/4796 [00:46&lt;08:53, 8.29it/s] Iteration: 8% 379/4796 [00:46&lt;09:04, 8.12it/s] Iteration: 8% 380/4796 [00:46&lt;09:01, 8.15it/s] Iteration: 8% 381/4796 [00:46&lt;08:54, 8.26it/s] Iteration: 8% 382/4796 [00:46&lt;08:54, 8.25it/s] Iteration: 8% 383/4796 [00:46&lt;09:00, 8.17it/s] Iteration: 8% 384/4796 [00:46&lt;08:57, 8.21it/s] Iteration: 8% 385/4796 [00:47&lt;08:56, 8.22it/s] Iteration: 8% 386/4796 [00:47&lt;08:56, 8.21it/s] Iteration: 8% 387/4796 [00:47&lt;08:52, 8.28it/s] Iteration: 8% 388/4796 [00:47&lt;08:53, 8.27it/s] Iteration: 8% 389/4796 [00:47&lt;08:51, 8.30it/s] Iteration: 8% 390/4796 [00:47&lt;08:46, 8.37it/s] Iteration: 8% 391/4796 [00:47&lt;08:50, 8.31it/s] Iteration: 8% 392/4796 [00:47&lt;08:50, 8.30it/s] Iteration: 8% 393/4796 [00:47&lt;08:45, 8.37it/s] Iteration: 8% 394/4796 [00:48&lt;08:56, 8.21it/s] Iteration: 8% 395/4796 [00:48&lt;08:56, 8.20it/s] Iteration: 8% 396/4796 [00:48&lt;08:49, 8.31it/s] Iteration: 8% 397/4796 [00:48&lt;08:52, 8.27it/s] Iteration: 8% 398/4796 [00:48&lt;09:01, 8.12it/s] Iteration: 8% 399/4796 [00:48&lt;08:53, 8.24it/s] Iteration: 8% 400/4796 [00:48&lt;08:53, 8.24it/s] Iteration: 8% 401/4796 [00:48&lt;08:53, 8.24it/s] Iteration: 8% 402/4796 [00:49&lt;08:54, 8.23it/s] Iteration: 8% 403/4796 [00:49&lt;08:58, 8.16it/s] Iteration: 8% 404/4796 [00:49&lt;08:49, 8.30it/s] Iteration: 8% 405/4796 [00:49&lt;08:50, 8.27it/s] Iteration: 8% 406/4796 [00:49&lt;08:52, 8.24it/s] Iteration: 8% 407/4796 [00:49&lt;08:51, 8.25it/s]{&#39;loss&#39;: 0.0661268310546875, &#39;learning_rate&#39;: 1.5248818459827636e-05, &#39;epoch&#39;: 2.085070892410342, &#39;step&#39;: 10000} Iteration: 9% 408/4796 [00:49&lt;08:59, 8.13it/s] Iteration: 9% 409/4796 [00:49&lt;08:54, 8.22it/s] Iteration: 9% 410/4796 [00:50&lt;08:54, 8.20it/s] Iteration: 9% 411/4796 [00:50&lt;08:47, 8.31it/s] Iteration: 9% 412/4796 [00:50&lt;08:51, 8.26it/s] Iteration: 9% 413/4796 [00:50&lt;08:58, 8.14it/s] Iteration: 9% 414/4796 [00:50&lt;08:56, 8.17it/s] Iteration: 9% 415/4796 [00:50&lt;08:53, 8.21it/s] Iteration: 9% 416/4796 [00:50&lt;08:54, 8.19it/s] Iteration: 9% 417/4796 [00:50&lt;09:05, 8.03it/s] Iteration: 9% 418/4796 [00:51&lt;08:53, 8.20it/s] Iteration: 9% 419/4796 [00:51&lt;08:53, 8.21it/s] Iteration: 9% 420/4796 [00:51&lt;08:58, 8.13it/s] Iteration: 9% 421/4796 [00:51&lt;08:55, 8.16it/s] Iteration: 9% 422/4796 [00:51&lt;08:49, 8.27it/s] Iteration: 9% 423/4796 [00:51&lt;08:45, 8.33it/s] Iteration: 9% 424/4796 [00:51&lt;08:42, 8.37it/s] Iteration: 9% 425/4796 [00:51&lt;08:46, 8.30it/s] Iteration: 9% 426/4796 [00:52&lt;08:47, 8.28it/s] Iteration: 9% 427/4796 [00:52&lt;08:57, 8.13it/s] Iteration: 9% 428/4796 [00:52&lt;08:49, 8.25it/s] Iteration: 9% 429/4796 [00:52&lt;08:43, 8.34it/s] Iteration: 9% 430/4796 [00:52&lt;08:45, 8.32it/s] Iteration: 9% 431/4796 [00:52&lt;08:45, 8.30it/s] Iteration: 9% 432/4796 [00:52&lt;08:55, 8.15it/s] Iteration: 9% 433/4796 [00:52&lt;08:54, 8.17it/s] Iteration: 9% 434/4796 [00:52&lt;08:54, 8.15it/s] Iteration: 9% 435/4796 [00:53&lt;08:53, 8.18it/s] Iteration: 9% 436/4796 [00:53&lt;08:51, 8.20it/s] Iteration: 9% 437/4796 [00:53&lt;08:59, 8.09it/s] Iteration: 9% 438/4796 [00:53&lt;08:52, 8.18it/s] Iteration: 9% 439/4796 [00:53&lt;08:50, 8.21it/s] Iteration: 9% 440/4796 [00:53&lt;08:49, 8.23it/s] Iteration: 9% 441/4796 [00:53&lt;08:48, 8.25it/s] Iteration: 9% 442/4796 [00:53&lt;08:50, 8.21it/s] Iteration: 9% 443/4796 [00:54&lt;08:50, 8.20it/s] Iteration: 9% 444/4796 [00:54&lt;08:43, 8.31it/s] Iteration: 9% 445/4796 [00:54&lt;08:47, 8.25it/s] Iteration: 9% 446/4796 [00:54&lt;08:55, 8.12it/s] Iteration: 9% 447/4796 [00:54&lt;08:52, 8.17it/s] Iteration: 9% 448/4796 [00:54&lt;08:46, 8.25it/s] Iteration: 9% 449/4796 [00:54&lt;08:47, 8.24it/s] Iteration: 9% 450/4796 [00:54&lt;08:46, 8.25it/s] Iteration: 9% 451/4796 [00:55&lt;08:48, 8.22it/s] Iteration: 9% 452/4796 [00:55&lt;08:46, 8.24it/s] Iteration: 9% 453/4796 [00:55&lt;08:51, 8.17it/s] Iteration: 9% 454/4796 [00:55&lt;08:50, 8.18it/s] Iteration: 9% 455/4796 [00:55&lt;08:50, 8.18it/s] Iteration: 10% 456/4796 [00:55&lt;08:51, 8.17it/s] Iteration: 10% 457/4796 [00:55&lt;08:50, 8.18it/s] Iteration: 10% 458/4796 [00:55&lt;08:51, 8.16it/s] Iteration: 10% 459/4796 [00:56&lt;08:48, 8.21it/s] Iteration: 10% 460/4796 [00:56&lt;08:55, 8.09it/s] Iteration: 10% 461/4796 [00:56&lt;08:54, 8.12it/s] Iteration: 10% 462/4796 [00:56&lt;08:53, 8.13it/s] Iteration: 10% 463/4796 [00:56&lt;08:50, 8.16it/s] Iteration: 10% 464/4796 [00:56&lt;08:57, 8.06it/s] Iteration: 10% 465/4796 [00:56&lt;08:53, 8.12it/s] Iteration: 10% 466/4796 [00:56&lt;08:54, 8.10it/s] Iteration: 10% 467/4796 [00:57&lt;08:56, 8.07it/s] Iteration: 10% 468/4796 [00:57&lt;08:53, 8.12it/s] Iteration: 10% 469/4796 [00:57&lt;08:58, 8.04it/s] Iteration: 10% 470/4796 [00:57&lt;08:47, 8.20it/s] Iteration: 10% 471/4796 [00:57&lt;08:40, 8.30it/s] Iteration: 10% 472/4796 [00:57&lt;08:37, 8.36it/s] Iteration: 10% 473/4796 [00:57&lt;08:42, 8.27it/s] Iteration: 10% 474/4796 [00:57&lt;08:53, 8.10it/s] Iteration: 10% 475/4796 [00:57&lt;08:52, 8.11it/s] Iteration: 10% 476/4796 [00:58&lt;08:41, 8.28it/s] Iteration: 10% 477/4796 [00:58&lt;08:37, 8.35it/s] Iteration: 10% 478/4796 [00:58&lt;08:48, 8.17it/s] Iteration: 10% 479/4796 [00:58&lt;08:39, 8.32it/s] Iteration: 10% 480/4796 [00:58&lt;08:42, 8.26it/s] Iteration: 10% 481/4796 [00:58&lt;08:36, 8.36it/s] Iteration: 10% 482/4796 [00:58&lt;08:33, 8.40it/s] Iteration: 10% 483/4796 [00:58&lt;08:37, 8.34it/s] Iteration: 10% 484/4796 [00:59&lt;08:38, 8.32it/s] Iteration: 10% 485/4796 [00:59&lt;08:44, 8.22it/s] Iteration: 10% 486/4796 [00:59&lt;08:45, 8.20it/s] Iteration: 10% 487/4796 [00:59&lt;08:44, 8.21it/s] Iteration: 10% 488/4796 [00:59&lt;08:37, 8.32it/s] Iteration: 10% 489/4796 [00:59&lt;08:47, 8.17it/s] Iteration: 10% 490/4796 [00:59&lt;08:46, 8.18it/s] Iteration: 10% 491/4796 [00:59&lt;08:45, 8.19it/s] Iteration: 10% 492/4796 [01:00&lt;08:44, 8.21it/s] Iteration: 10% 493/4796 [01:00&lt;08:51, 8.10it/s] Iteration: 10% 494/4796 [01:00&lt;08:48, 8.15it/s] Iteration: 10% 495/4796 [01:00&lt;08:44, 8.20it/s] Iteration: 10% 496/4796 [01:00&lt;08:43, 8.22it/s] Iteration: 10% 497/4796 [01:00&lt;08:41, 8.24it/s] Iteration: 10% 498/4796 [01:00&lt;08:35, 8.34it/s] Iteration: 10% 499/4796 [01:00&lt;08:42, 8.23it/s] Iteration: 10% 500/4796 [01:01&lt;08:42, 8.23it/s] Iteration: 10% 501/4796 [01:01&lt;08:42, 8.22it/s] Iteration: 10% 502/4796 [01:01&lt;08:43, 8.21it/s] Iteration: 10% 503/4796 [01:01&lt;08:50, 8.09it/s] Iteration: 11% 504/4796 [01:01&lt;08:47, 8.13it/s] Iteration: 11% 505/4796 [01:01&lt;08:44, 8.18it/s] Iteration: 11% 506/4796 [01:01&lt;08:43, 8.20it/s] Iteration: 11% 507/4796 [01:01&lt;08:45, 8.17it/s] Iteration: 11% 508/4796 [01:02&lt;08:44, 8.18it/s] Iteration: 11% 509/4796 [01:02&lt;08:43, 8.18it/s] Iteration: 11% 510/4796 [01:02&lt;08:37, 8.28it/s] Iteration: 11% 511/4796 [01:02&lt;08:39, 8.25it/s] Iteration: 11% 512/4796 [01:02&lt;08:49, 8.10it/s] Iteration: 11% 513/4796 [01:02&lt;08:45, 8.15it/s] Iteration: 11% 514/4796 [01:02&lt;08:44, 8.16it/s] Iteration: 11% 515/4796 [01:02&lt;08:44, 8.16it/s] Iteration: 11% 516/4796 [01:02&lt;08:38, 8.26it/s] Iteration: 11% 517/4796 [01:03&lt;08:39, 8.23it/s] Iteration: 11% 518/4796 [01:03&lt;08:32, 8.34it/s] Iteration: 11% 519/4796 [01:03&lt;08:36, 8.28it/s] Iteration: 11% 520/4796 [01:03&lt;08:33, 8.32it/s] Iteration: 11% 521/4796 [01:03&lt;08:36, 8.28it/s] Iteration: 11% 522/4796 [01:03&lt;08:39, 8.23it/s] Iteration: 11% 523/4796 [01:03&lt;08:41, 8.19it/s] Iteration: 11% 524/4796 [01:03&lt;08:41, 8.19it/s] Iteration: 11% 525/4796 [01:04&lt;08:41, 8.20it/s] Iteration: 11% 526/4796 [01:04&lt;08:41, 8.18it/s] Iteration: 11% 527/4796 [01:04&lt;08:39, 8.21it/s] Iteration: 11% 528/4796 [01:04&lt;08:34, 8.30it/s] Iteration: 11% 529/4796 [01:04&lt;08:35, 8.28it/s] Iteration: 11% 530/4796 [01:04&lt;08:30, 8.36it/s] Iteration: 11% 531/4796 [01:04&lt;08:31, 8.33it/s] Iteration: 11% 532/4796 [01:04&lt;08:34, 8.29it/s] Iteration: 11% 533/4796 [01:05&lt;08:29, 8.36it/s] Iteration: 11% 534/4796 [01:05&lt;08:33, 8.30it/s] Iteration: 11% 535/4796 [01:05&lt;08:29, 8.37it/s] Iteration: 11% 536/4796 [01:05&lt;08:32, 8.32it/s] Iteration: 11% 537/4796 [01:05&lt;08:36, 8.24it/s] Iteration: 11% 538/4796 [01:05&lt;08:37, 8.23it/s] Iteration: 11% 539/4796 [01:05&lt;08:38, 8.21it/s] Iteration: 11% 540/4796 [01:05&lt;08:37, 8.22it/s] Iteration: 11% 541/4796 [01:06&lt;08:36, 8.23it/s] Iteration: 11% 542/4796 [01:06&lt;08:43, 8.13it/s] Iteration: 11% 543/4796 [01:06&lt;08:37, 8.21it/s] Iteration: 11% 544/4796 [01:06&lt;08:37, 8.22it/s] Iteration: 11% 545/4796 [01:06&lt;08:46, 8.07it/s] Iteration: 11% 546/4796 [01:06&lt;08:45, 8.09it/s] Iteration: 11% 547/4796 [01:06&lt;08:41, 8.15it/s] Iteration: 11% 548/4796 [01:06&lt;08:40, 8.17it/s] Iteration: 11% 549/4796 [01:06&lt;08:39, 8.17it/s] Iteration: 11% 550/4796 [01:07&lt;08:40, 8.16it/s] Iteration: 11% 551/4796 [01:07&lt;08:46, 8.06it/s] Iteration: 12% 552/4796 [01:07&lt;08:43, 8.11it/s] Iteration: 12% 553/4796 [01:07&lt;08:38, 8.19it/s] Iteration: 12% 554/4796 [01:07&lt;08:36, 8.21it/s] Iteration: 12% 555/4796 [01:07&lt;08:30, 8.31it/s] Iteration: 12% 556/4796 [01:07&lt;08:37, 8.19it/s] Iteration: 12% 557/4796 [01:07&lt;08:32, 8.27it/s] Iteration: 12% 558/4796 [01:08&lt;08:27, 8.34it/s] Iteration: 12% 559/4796 [01:08&lt;08:27, 8.36it/s] Iteration: 12% 560/4796 [01:08&lt;08:32, 8.26it/s] Iteration: 12% 561/4796 [01:08&lt;08:26, 8.36it/s] Iteration: 12% 562/4796 [01:08&lt;08:35, 8.21it/s] Iteration: 12% 563/4796 [01:08&lt;08:36, 8.20it/s] Iteration: 12% 564/4796 [01:08&lt;08:35, 8.21it/s] Iteration: 12% 565/4796 [01:08&lt;08:43, 8.08it/s] Iteration: 12% 566/4796 [01:09&lt;08:40, 8.13it/s] Iteration: 12% 567/4796 [01:09&lt;08:41, 8.11it/s] Iteration: 12% 568/4796 [01:09&lt;08:38, 8.15it/s] Iteration: 12% 569/4796 [01:09&lt;08:39, 8.14it/s] Iteration: 12% 570/4796 [01:09&lt;08:50, 7.97it/s] Iteration: 12% 571/4796 [01:09&lt;08:44, 8.05it/s] Iteration: 12% 572/4796 [01:09&lt;08:36, 8.18it/s] Iteration: 12% 573/4796 [01:09&lt;08:35, 8.19it/s] Iteration: 12% 574/4796 [01:10&lt;08:34, 8.21it/s] Iteration: 12% 575/4796 [01:10&lt;08:36, 8.18it/s] Iteration: 12% 576/4796 [01:10&lt;08:36, 8.17it/s] Iteration: 12% 577/4796 [01:10&lt;08:40, 8.11it/s] Iteration: 12% 578/4796 [01:10&lt;08:39, 8.11it/s] Iteration: 12% 579/4796 [01:10&lt;08:47, 8.00it/s] Iteration: 12% 580/4796 [01:10&lt;08:42, 8.06it/s] Iteration: 12% 581/4796 [01:10&lt;08:41, 8.08it/s] Iteration: 12% 582/4796 [01:11&lt;08:38, 8.12it/s] Iteration: 12% 583/4796 [01:11&lt;08:41, 8.09it/s] Iteration: 12% 584/4796 [01:11&lt;08:31, 8.23it/s] Iteration: 12% 585/4796 [01:11&lt;08:33, 8.21it/s] Iteration: 12% 586/4796 [01:11&lt;08:27, 8.29it/s] Iteration: 12% 587/4796 [01:11&lt;08:28, 8.27it/s] Iteration: 12% 588/4796 [01:11&lt;08:37, 8.14it/s] Iteration: 12% 589/4796 [01:11&lt;08:34, 8.17it/s] Iteration: 12% 590/4796 [01:12&lt;08:29, 8.25it/s] Iteration: 12% 591/4796 [01:12&lt;08:31, 8.23it/s] Iteration: 12% 592/4796 [01:12&lt;08:32, 8.20it/s] Iteration: 12% 593/4796 [01:12&lt;08:41, 8.06it/s] Iteration: 12% 594/4796 [01:12&lt;08:38, 8.10it/s] Iteration: 12% 595/4796 [01:12&lt;08:36, 8.13it/s] Iteration: 12% 596/4796 [01:12&lt;08:28, 8.25it/s] Iteration: 12% 597/4796 [01:12&lt;08:31, 8.20it/s] Iteration: 12% 598/4796 [01:12&lt;08:30, 8.22it/s] Iteration: 12% 599/4796 [01:13&lt;08:30, 8.22it/s] Iteration: 13% 600/4796 [01:13&lt;08:26, 8.28it/s] Iteration: 13% 601/4796 [01:13&lt;08:27, 8.26it/s] Iteration: 13% 602/4796 [01:13&lt;08:32, 8.19it/s] Iteration: 13% 603/4796 [01:13&lt;08:26, 8.28it/s] Iteration: 13% 604/4796 [01:13&lt;08:27, 8.25it/s] Iteration: 13% 605/4796 [01:13&lt;08:28, 8.25it/s] Iteration: 13% 606/4796 [01:13&lt;08:29, 8.23it/s] Iteration: 13% 607/4796 [01:14&lt;08:35, 8.13it/s] Iteration: 13% 608/4796 [01:14&lt;08:34, 8.14it/s] Iteration: 13% 609/4796 [01:14&lt;08:33, 8.15it/s] Iteration: 13% 610/4796 [01:14&lt;08:26, 8.27it/s] Iteration: 13% 611/4796 [01:14&lt;08:28, 8.23it/s] Iteration: 13% 612/4796 [01:14&lt;08:24, 8.29it/s] Iteration: 13% 613/4796 [01:14&lt;08:26, 8.25it/s] Iteration: 13% 614/4796 [01:14&lt;08:29, 8.21it/s] Iteration: 13% 615/4796 [01:15&lt;08:29, 8.21it/s] Iteration: 13% 616/4796 [01:15&lt;08:25, 8.27it/s] Iteration: 13% 617/4796 [01:15&lt;08:32, 8.15it/s] Iteration: 13% 618/4796 [01:15&lt;08:32, 8.15it/s] Iteration: 13% 619/4796 [01:15&lt;08:29, 8.20it/s] Iteration: 13% 620/4796 [01:15&lt;08:28, 8.21it/s] Iteration: 13% 621/4796 [01:15&lt;08:35, 8.10it/s] Iteration: 13% 622/4796 [01:15&lt;08:31, 8.15it/s] Iteration: 13% 623/4796 [01:16&lt;08:29, 8.20it/s] Iteration: 13% 624/4796 [01:16&lt;08:28, 8.20it/s] Iteration: 13% 625/4796 [01:16&lt;08:29, 8.19it/s] Iteration: 13% 626/4796 [01:16&lt;08:36, 8.07it/s] Iteration: 13% 627/4796 [01:16&lt;08:27, 8.22it/s] Iteration: 13% 628/4796 [01:16&lt;08:36, 8.06it/s] Iteration: 13% 629/4796 [01:16&lt;08:32, 8.13it/s] Iteration: 13% 630/4796 [01:16&lt;08:30, 8.16it/s] Iteration: 13% 631/4796 [01:17&lt;08:28, 8.19it/s] Iteration: 13% 632/4796 [01:17&lt;08:30, 8.16it/s] Iteration: 13% 633/4796 [01:17&lt;08:30, 8.16it/s] Iteration: 13% 634/4796 [01:17&lt;08:29, 8.17it/s] Iteration: 13% 635/4796 [01:17&lt;08:35, 8.08it/s] Iteration: 13% 636/4796 [01:17&lt;08:25, 8.24it/s] Iteration: 13% 637/4796 [01:17&lt;08:25, 8.22it/s] Iteration: 13% 638/4796 [01:17&lt;08:28, 8.18it/s] Iteration: 13% 639/4796 [01:17&lt;08:19, 8.33it/s] Iteration: 13% 640/4796 [01:18&lt;08:19, 8.31it/s] Iteration: 13% 641/4796 [01:18&lt;08:23, 8.26it/s] Iteration: 13% 642/4796 [01:18&lt;08:24, 8.24it/s] Iteration: 13% 643/4796 [01:18&lt;08:24, 8.23it/s] Iteration: 13% 644/4796 [01:18&lt;08:24, 8.24it/s] Iteration: 13% 645/4796 [01:18&lt;08:31, 8.12it/s] Iteration: 13% 646/4796 [01:18&lt;08:28, 8.16it/s] Iteration: 13% 647/4796 [01:18&lt;08:27, 8.17it/s] Iteration: 14% 648/4796 [01:19&lt;08:26, 8.18it/s] Iteration: 14% 649/4796 [01:19&lt;08:27, 8.17it/s] Iteration: 14% 650/4796 [01:19&lt;08:28, 8.15it/s] Iteration: 14% 651/4796 [01:19&lt;08:28, 8.15it/s] Iteration: 14% 652/4796 [01:19&lt;08:27, 8.17it/s] Iteration: 14% 653/4796 [01:19&lt;08:30, 8.12it/s] Iteration: 14% 654/4796 [01:19&lt;08:22, 8.24it/s] Iteration: 14% 655/4796 [01:19&lt;08:22, 8.24it/s] Iteration: 14% 656/4796 [01:20&lt;08:22, 8.23it/s] Iteration: 14% 657/4796 [01:20&lt;08:22, 8.23it/s] Iteration: 14% 658/4796 [01:20&lt;08:22, 8.23it/s] Iteration: 14% 659/4796 [01:20&lt;08:26, 8.17it/s] Iteration: 14% 660/4796 [01:20&lt;08:25, 8.19it/s] Iteration: 14% 661/4796 [01:20&lt;08:23, 8.21it/s] Iteration: 14% 662/4796 [01:20&lt;08:22, 8.22it/s] Iteration: 14% 663/4796 [01:20&lt;08:31, 8.08it/s] Iteration: 14% 664/4796 [01:21&lt;08:27, 8.14it/s] Iteration: 14% 665/4796 [01:21&lt;08:27, 8.15it/s] Iteration: 14% 666/4796 [01:21&lt;08:28, 8.12it/s] Iteration: 14% 667/4796 [01:21&lt;08:24, 8.18it/s] Iteration: 14% 668/4796 [01:21&lt;08:22, 8.21it/s] Iteration: 14% 669/4796 [01:21&lt;08:21, 8.23it/s] Iteration: 14% 670/4796 [01:21&lt;08:21, 8.22it/s] Iteration: 14% 671/4796 [01:21&lt;08:22, 8.21it/s] Iteration: 14% 672/4796 [01:22&lt;08:22, 8.21it/s] Iteration: 14% 673/4796 [01:22&lt;08:25, 8.15it/s] Iteration: 14% 674/4796 [01:22&lt;08:17, 8.28it/s] Iteration: 14% 675/4796 [01:22&lt;08:19, 8.24it/s] Iteration: 14% 676/4796 [01:22&lt;08:18, 8.26it/s] Iteration: 14% 677/4796 [01:22&lt;08:20, 8.23it/s] Iteration: 14% 678/4796 [01:22&lt;08:15, 8.32it/s] Iteration: 14% 679/4796 [01:22&lt;08:17, 8.28it/s] Iteration: 14% 680/4796 [01:22&lt;08:19, 8.23it/s] Iteration: 14% 681/4796 [01:23&lt;08:18, 8.26it/s] Iteration: 14% 682/4796 [01:23&lt;08:27, 8.11it/s] Iteration: 14% 683/4796 [01:23&lt;08:18, 8.26it/s] Iteration: 14% 684/4796 [01:23&lt;08:18, 8.25it/s] Iteration: 14% 685/4796 [01:23&lt;08:13, 8.33it/s] Iteration: 14% 686/4796 [01:23&lt;08:15, 8.29it/s] Iteration: 14% 687/4796 [01:23&lt;08:25, 8.12it/s] Iteration: 14% 688/4796 [01:23&lt;08:24, 8.14it/s] Iteration: 14% 689/4796 [01:24&lt;08:21, 8.20it/s] Iteration: 14% 690/4796 [01:24&lt;08:15, 8.29it/s] Iteration: 14% 691/4796 [01:24&lt;08:19, 8.22it/s] Iteration: 14% 692/4796 [01:24&lt;08:17, 8.25it/s] Iteration: 14% 693/4796 [01:24&lt;08:17, 8.24it/s] Iteration: 14% 694/4796 [01:24&lt;08:13, 8.32it/s] Iteration: 14% 695/4796 [01:24&lt;08:11, 8.34it/s] Iteration: 15% 696/4796 [01:24&lt;08:14, 8.29it/s] Iteration: 15% 697/4796 [01:25&lt;08:23, 8.14it/s] Iteration: 15% 698/4796 [01:25&lt;08:21, 8.17it/s] Iteration: 15% 699/4796 [01:25&lt;08:14, 8.28it/s] Iteration: 15% 700/4796 [01:25&lt;08:15, 8.26it/s] Iteration: 15% 701/4796 [01:25&lt;08:09, 8.36it/s] Iteration: 15% 702/4796 [01:25&lt;08:19, 8.20it/s] Iteration: 15% 703/4796 [01:25&lt;08:26, 8.07it/s] Iteration: 15% 704/4796 [01:25&lt;08:22, 8.14it/s] Iteration: 15% 705/4796 [01:26&lt;08:20, 8.18it/s] Iteration: 15% 706/4796 [01:26&lt;08:26, 8.07it/s] Iteration: 15% 707/4796 [01:26&lt;08:24, 8.10it/s] Iteration: 15% 708/4796 [01:26&lt;08:17, 8.23it/s] Iteration: 15% 709/4796 [01:26&lt;08:17, 8.22it/s] Iteration: 15% 710/4796 [01:26&lt;08:19, 8.18it/s] Iteration: 15% 711/4796 [01:26&lt;08:17, 8.21it/s] Iteration: 15% 712/4796 [01:26&lt;08:18, 8.19it/s] Iteration: 15% 713/4796 [01:26&lt;08:16, 8.22it/s] Iteration: 15% 714/4796 [01:27&lt;08:16, 8.22it/s] Iteration: 15% 715/4796 [01:27&lt;08:24, 8.10it/s] Iteration: 15% 716/4796 [01:27&lt;08:23, 8.11it/s] Iteration: 15% 717/4796 [01:27&lt;08:21, 8.13it/s] Iteration: 15% 718/4796 [01:27&lt;08:19, 8.16it/s] Iteration: 15% 719/4796 [01:27&lt;08:18, 8.17it/s] Iteration: 15% 720/4796 [01:27&lt;08:22, 8.12it/s] Iteration: 15% 721/4796 [01:27&lt;08:19, 8.15it/s] Iteration: 15% 722/4796 [01:28&lt;08:19, 8.16it/s] Iteration: 15% 723/4796 [01:28&lt;08:18, 8.17it/s] Iteration: 15% 724/4796 [01:28&lt;08:26, 8.05it/s] Iteration: 15% 725/4796 [01:28&lt;08:22, 8.10it/s] Iteration: 15% 726/4796 [01:28&lt;08:15, 8.22it/s] Iteration: 15% 727/4796 [01:28&lt;08:08, 8.32it/s] Iteration: 15% 728/4796 [01:28&lt;08:12, 8.26it/s] Iteration: 15% 729/4796 [01:28&lt;08:11, 8.27it/s] Iteration: 15% 730/4796 [01:29&lt;08:14, 8.22it/s] Iteration: 15% 731/4796 [01:29&lt;08:15, 8.21it/s] Iteration: 15% 732/4796 [01:29&lt;08:11, 8.28it/s] Iteration: 15% 733/4796 [01:29&lt;08:10, 8.28it/s] Iteration: 15% 734/4796 [01:29&lt;08:11, 8.26it/s] Iteration: 15% 735/4796 [01:29&lt;08:14, 8.22it/s] Iteration: 15% 736/4796 [01:29&lt;08:14, 8.21it/s] Iteration: 15% 737/4796 [01:29&lt;08:14, 8.21it/s] Iteration: 15% 738/4796 [01:30&lt;08:12, 8.24it/s] Iteration: 15% 739/4796 [01:30&lt;08:12, 8.24it/s] Iteration: 15% 740/4796 [01:30&lt;08:12, 8.24it/s] Iteration: 15% 741/4796 [01:30&lt;08:12, 8.23it/s] Iteration: 15% 742/4796 [01:30&lt;08:13, 8.22it/s] Iteration: 15% 743/4796 [01:30&lt;08:11, 8.24it/s] Iteration: 16% 744/4796 [01:30&lt;08:20, 8.09it/s] Iteration: 16% 745/4796 [01:30&lt;08:19, 8.11it/s] Iteration: 16% 746/4796 [01:31&lt;08:17, 8.15it/s] Iteration: 16% 747/4796 [01:31&lt;08:14, 8.19it/s] Iteration: 16% 748/4796 [01:31&lt;08:06, 8.32it/s] Iteration: 16% 749/4796 [01:31&lt;08:12, 8.22it/s] Iteration: 16% 750/4796 [01:31&lt;08:12, 8.22it/s] Iteration: 16% 751/4796 [01:31&lt;08:07, 8.30it/s] Iteration: 16% 752/4796 [01:31&lt;08:10, 8.25it/s] Iteration: 16% 753/4796 [01:31&lt;08:05, 8.33it/s] Iteration: 16% 754/4796 [01:31&lt;08:12, 8.21it/s] Iteration: 16% 755/4796 [01:32&lt;08:11, 8.21it/s] Iteration: 16% 756/4796 [01:32&lt;08:10, 8.23it/s] Iteration: 16% 757/4796 [01:32&lt;08:04, 8.33it/s] Iteration: 16% 758/4796 [01:32&lt;08:14, 8.16it/s] Iteration: 16% 759/4796 [01:32&lt;08:12, 8.19it/s] Iteration: 16% 760/4796 [01:32&lt;08:11, 8.21it/s] Iteration: 16% 761/4796 [01:32&lt;08:13, 8.18it/s] Iteration: 16% 762/4796 [01:32&lt;08:05, 8.31it/s] Iteration: 16% 763/4796 [01:33&lt;08:07, 8.27it/s] Iteration: 16% 764/4796 [01:33&lt;08:15, 8.15it/s] Iteration: 16% 765/4796 [01:33&lt;08:13, 8.17it/s] Iteration: 16% 766/4796 [01:33&lt;08:12, 8.18it/s] Iteration: 16% 767/4796 [01:33&lt;08:11, 8.20it/s] Iteration: 16% 768/4796 [01:33&lt;08:09, 8.23it/s] Iteration: 16% 769/4796 [01:33&lt;08:20, 8.04it/s] Iteration: 16% 770/4796 [01:33&lt;08:19, 8.06it/s] Iteration: 16% 771/4796 [01:34&lt;08:14, 8.14it/s] Iteration: 16% 772/4796 [01:34&lt;08:12, 8.17it/s] Iteration: 16% 773/4796 [01:34&lt;08:14, 8.13it/s] Iteration: 16% 774/4796 [01:34&lt;08:13, 8.16it/s] Iteration: 16% 775/4796 [01:34&lt;08:12, 8.17it/s] Iteration: 16% 776/4796 [01:34&lt;08:09, 8.21it/s] Iteration: 16% 777/4796 [01:34&lt;08:09, 8.21it/s] Iteration: 16% 778/4796 [01:34&lt;08:16, 8.09it/s] Iteration: 16% 779/4796 [01:35&lt;08:07, 8.25it/s] Iteration: 16% 780/4796 [01:35&lt;08:07, 8.23it/s] Iteration: 16% 781/4796 [01:35&lt;08:01, 8.34it/s] Iteration: 16% 782/4796 [01:35&lt;07:56, 8.42it/s] Iteration: 16% 783/4796 [01:35&lt;08:06, 8.25it/s] Iteration: 16% 784/4796 [01:35&lt;07:59, 8.36it/s] Iteration: 16% 785/4796 [01:35&lt;08:00, 8.34it/s] Iteration: 16% 786/4796 [01:35&lt;08:02, 8.31it/s] Iteration: 16% 787/4796 [01:36&lt;07:57, 8.39it/s] Iteration: 16% 788/4796 [01:36&lt;08:02, 8.30it/s] Iteration: 16% 789/4796 [01:36&lt;08:01, 8.33it/s] Iteration: 16% 790/4796 [01:36&lt;08:03, 8.29it/s] Iteration: 16% 791/4796 [01:36&lt;08:05, 8.25it/s] Iteration: 17% 792/4796 [01:36&lt;08:05, 8.25it/s] Iteration: 17% 793/4796 [01:36&lt;08:18, 8.03it/s] Iteration: 17% 794/4796 [01:36&lt;08:08, 8.20it/s] Iteration: 17% 795/4796 [01:36&lt;08:09, 8.18it/s] Iteration: 17% 796/4796 [01:37&lt;08:07, 8.20it/s] Iteration: 17% 797/4796 [01:37&lt;08:07, 8.20it/s] Iteration: 17% 798/4796 [01:37&lt;08:09, 8.17it/s] Iteration: 17% 799/4796 [01:37&lt;08:08, 8.19it/s] Iteration: 17% 800/4796 [01:37&lt;08:02, 8.28it/s] Iteration: 17% 801/4796 [01:37&lt;08:03, 8.26it/s] Iteration: 17% 802/4796 [01:37&lt;08:02, 8.28it/s] Iteration: 17% 803/4796 [01:37&lt;08:04, 8.24it/s] Iteration: 17% 804/4796 [01:38&lt;08:06, 8.21it/s] Iteration: 17% 805/4796 [01:38&lt;08:07, 8.18it/s] Iteration: 17% 806/4796 [01:38&lt;08:07, 8.19it/s] Iteration: 17% 807/4796 [01:38&lt;08:07, 8.19it/s] Iteration: 17% 808/4796 [01:38&lt;08:12, 8.09it/s] Iteration: 17% 809/4796 [01:38&lt;08:05, 8.20it/s] Iteration: 17% 810/4796 [01:38&lt;07:59, 8.31it/s] Iteration: 17% 811/4796 [01:38&lt;08:00, 8.30it/s] Iteration: 17% 812/4796 [01:39&lt;08:08, 8.15it/s] Iteration: 17% 813/4796 [01:39&lt;08:01, 8.27it/s] Iteration: 17% 814/4796 [01:39&lt;08:02, 8.25it/s] Iteration: 17% 815/4796 [01:39&lt;07:57, 8.34it/s] Iteration: 17% 816/4796 [01:39&lt;07:54, 8.38it/s] Iteration: 17% 817/4796 [01:39&lt;07:53, 8.40it/s] Iteration: 17% 818/4796 [01:39&lt;08:03, 8.23it/s] Iteration: 17% 819/4796 [01:39&lt;08:02, 8.25it/s] Iteration: 17% 820/4796 [01:40&lt;08:04, 8.20it/s] Iteration: 17% 821/4796 [01:40&lt;08:05, 8.19it/s] Iteration: 17% 822/4796 [01:40&lt;08:03, 8.21it/s] Iteration: 17% 823/4796 [01:40&lt;08:03, 8.21it/s] Iteration: 17% 824/4796 [01:40&lt;08:03, 8.22it/s] Iteration: 17% 825/4796 [01:40&lt;08:04, 8.20it/s] Iteration: 17% 826/4796 [01:40&lt;08:05, 8.17it/s] Iteration: 17% 827/4796 [01:40&lt;08:12, 8.06it/s] Iteration: 17% 828/4796 [01:41&lt;08:09, 8.11it/s] Iteration: 17% 829/4796 [01:41&lt;08:02, 8.23it/s] Iteration: 17% 830/4796 [01:41&lt;07:57, 8.31it/s] Iteration: 17% 831/4796 [01:41&lt;07:58, 8.29it/s] Iteration: 17% 832/4796 [01:41&lt;07:59, 8.26it/s] Iteration: 17% 833/4796 [01:41&lt;08:00, 8.25it/s] Iteration: 17% 834/4796 [01:41&lt;07:59, 8.26it/s] Iteration: 17% 835/4796 [01:41&lt;07:54, 8.35it/s] Iteration: 17% 836/4796 [01:41&lt;08:00, 8.24it/s] Iteration: 17% 837/4796 [01:42&lt;07:59, 8.26it/s] Iteration: 17% 838/4796 [01:42&lt;08:04, 8.17it/s] Iteration: 17% 839/4796 [01:42&lt;08:04, 8.17it/s] Iteration: 18% 840/4796 [01:42&lt;07:56, 8.31it/s] Iteration: 18% 841/4796 [01:42&lt;07:58, 8.27it/s] Iteration: 18% 842/4796 [01:42&lt;08:05, 8.14it/s] Iteration: 18% 843/4796 [01:42&lt;08:04, 8.16it/s] Iteration: 18% 844/4796 [01:42&lt;08:03, 8.18it/s] Iteration: 18% 845/4796 [01:43&lt;08:03, 8.17it/s] Iteration: 18% 846/4796 [01:43&lt;08:03, 8.18it/s] Iteration: 18% 847/4796 [01:43&lt;08:09, 8.07it/s] Iteration: 18% 848/4796 [01:43&lt;08:06, 8.11it/s] Iteration: 18% 849/4796 [01:43&lt;08:08, 8.08it/s] Iteration: 18% 850/4796 [01:43&lt;08:06, 8.11it/s] Iteration: 18% 851/4796 [01:43&lt;08:15, 7.97it/s] Iteration: 18% 852/4796 [01:43&lt;08:05, 8.12it/s] Iteration: 18% 853/4796 [01:44&lt;07:58, 8.25it/s] Iteration: 18% 854/4796 [01:44&lt;07:58, 8.23it/s] Iteration: 18% 855/4796 [01:44&lt;08:00, 8.20it/s] Iteration: 18% 856/4796 [01:44&lt;08:02, 8.16it/s] Iteration: 18% 857/4796 [01:44&lt;08:01, 8.19it/s] Iteration: 18% 858/4796 [01:44&lt;08:01, 8.18it/s] Iteration: 18% 859/4796 [01:44&lt;08:01, 8.18it/s] Iteration: 18% 860/4796 [01:44&lt;08:00, 8.19it/s] Iteration: 18% 861/4796 [01:45&lt;07:54, 8.30it/s] Iteration: 18% 862/4796 [01:45&lt;07:57, 8.23it/s] Iteration: 18% 863/4796 [01:45&lt;08:00, 8.19it/s] Iteration: 18% 864/4796 [01:45&lt;08:05, 8.09it/s] Iteration: 18% 865/4796 [01:45&lt;08:03, 8.13it/s] Iteration: 18% 866/4796 [01:45&lt;08:03, 8.14it/s] Iteration: 18% 867/4796 [01:45&lt;08:00, 8.18it/s] Iteration: 18% 868/4796 [01:45&lt;08:01, 8.15it/s] Iteration: 18% 869/4796 [01:46&lt;07:58, 8.21it/s] Iteration: 18% 870/4796 [01:46&lt;07:58, 8.21it/s] Iteration: 18% 871/4796 [01:46&lt;07:58, 8.21it/s] Iteration: 18% 872/4796 [01:46&lt;07:59, 8.18it/s] Iteration: 18% 873/4796 [01:46&lt;07:57, 8.22it/s] Iteration: 18% 874/4796 [01:46&lt;07:58, 8.20it/s] Iteration: 18% 875/4796 [01:46&lt;08:03, 8.12it/s] Iteration: 18% 876/4796 [01:46&lt;08:00, 8.16it/s] Iteration: 18% 877/4796 [01:46&lt;08:00, 8.15it/s] Iteration: 18% 878/4796 [01:47&lt;08:00, 8.15it/s] Iteration: 18% 879/4796 [01:47&lt;08:00, 8.15it/s] Iteration: 18% 880/4796 [01:47&lt;08:02, 8.12it/s] Iteration: 18% 881/4796 [01:47&lt;07:59, 8.16it/s] Iteration: 18% 882/4796 [01:47&lt;07:58, 8.18it/s] Iteration: 18% 883/4796 [01:47&lt;07:56, 8.21it/s] Iteration: 18% 884/4796 [01:47&lt;07:56, 8.22it/s] Iteration: 18% 885/4796 [01:47&lt;07:52, 8.28it/s] Iteration: 18% 886/4796 [01:48&lt;07:54, 8.24it/s] Iteration: 18% 887/4796 [01:48&lt;07:56, 8.20it/s] Iteration: 19% 888/4796 [01:48&lt;07:51, 8.29it/s] Iteration: 19% 889/4796 [01:48&lt;07:52, 8.27it/s] Iteration: 19% 890/4796 [01:48&lt;07:54, 8.23it/s] Iteration: 19% 891/4796 [01:48&lt;07:54, 8.23it/s] Iteration: 19% 892/4796 [01:48&lt;07:54, 8.23it/s] Iteration: 19% 893/4796 [01:48&lt;07:47, 8.35it/s] Iteration: 19% 894/4796 [01:49&lt;07:57, 8.18it/s] Iteration: 19% 895/4796 [01:49&lt;07:57, 8.17it/s] Iteration: 19% 896/4796 [01:49&lt;07:48, 8.32it/s] Iteration: 19% 897/4796 [01:49&lt;07:50, 8.29it/s] Iteration: 19% 898/4796 [01:49&lt;08:01, 8.09it/s] Iteration: 19% 899/4796 [01:49&lt;07:55, 8.20it/s] Iteration: 19% 900/4796 [01:49&lt;07:56, 8.18it/s] Iteration: 19% 901/4796 [01:49&lt;07:51, 8.26it/s] Iteration: 19% 902/4796 [01:50&lt;07:55, 8.20it/s] Iteration: 19% 903/4796 [01:50&lt;08:01, 8.08it/s] Iteration: 19% 904/4796 [01:50&lt;07:58, 8.13it/s] Iteration: 19% 905/4796 [01:50&lt;07:57, 8.14it/s] Iteration: 19% 906/4796 [01:50&lt;07:50, 8.26it/s] Iteration: 19% 907/4796 [01:50&lt;07:51, 8.25it/s]{&#39;loss&#39;: 0.06205419921875, &#39;learning_rate&#39;: 1.3511259382819017e-05, &#39;epoch&#39;: 2.189324437030859, &#39;step&#39;: 10500} Iteration: 19% 908/4796 [01:50&lt;07:55, 8.17it/s] Iteration: 19% 909/4796 [01:50&lt;07:46, 8.34it/s] Iteration: 19% 910/4796 [01:50&lt;07:42, 8.40it/s] Iteration: 19% 911/4796 [01:51&lt;07:43, 8.38it/s] Iteration: 19% 912/4796 [01:51&lt;07:40, 8.44it/s] Iteration: 19% 913/4796 [01:51&lt;07:45, 8.35it/s] Iteration: 19% 914/4796 [01:51&lt;07:47, 8.31it/s] Iteration: 19% 915/4796 [01:51&lt;07:44, 8.35it/s] Iteration: 19% 916/4796 [01:51&lt;07:47, 8.29it/s] Iteration: 19% 917/4796 [01:51&lt;07:48, 8.28it/s] Iteration: 19% 918/4796 [01:51&lt;07:50, 8.25it/s] Iteration: 19% 919/4796 [01:52&lt;07:49, 8.26it/s] Iteration: 19% 920/4796 [01:52&lt;07:51, 8.23it/s] Iteration: 19% 921/4796 [01:52&lt;07:52, 8.21it/s] Iteration: 19% 922/4796 [01:52&lt;07:51, 8.21it/s] Iteration: 19% 923/4796 [01:52&lt;07:57, 8.11it/s] Iteration: 19% 924/4796 [01:52&lt;07:56, 8.13it/s] Iteration: 19% 925/4796 [01:52&lt;07:54, 8.16it/s] Iteration: 19% 926/4796 [01:52&lt;07:53, 8.17it/s] Iteration: 19% 927/4796 [01:53&lt;08:00, 8.06it/s] Iteration: 19% 928/4796 [01:53&lt;07:57, 8.11it/s] Iteration: 19% 929/4796 [01:53&lt;07:55, 8.12it/s] Iteration: 19% 930/4796 [01:53&lt;07:48, 8.25it/s] Iteration: 19% 931/4796 [01:53&lt;07:43, 8.33it/s] Iteration: 19% 932/4796 [01:53&lt;07:48, 8.25it/s] Iteration: 19% 933/4796 [01:53&lt;07:43, 8.33it/s] Iteration: 19% 934/4796 [01:53&lt;07:45, 8.29it/s] Iteration: 19% 935/4796 [01:54&lt;07:48, 8.24it/s] Iteration: 20% 936/4796 [01:54&lt;07:42, 8.35it/s] Iteration: 20% 937/4796 [01:54&lt;07:44, 8.30it/s] Iteration: 20% 938/4796 [01:54&lt;07:44, 8.31it/s] Iteration: 20% 939/4796 [01:54&lt;07:47, 8.25it/s] Iteration: 20% 940/4796 [01:54&lt;07:50, 8.20it/s] Iteration: 20% 941/4796 [01:54&lt;07:48, 8.24it/s] Iteration: 20% 942/4796 [01:54&lt;07:46, 8.26it/s] Iteration: 20% 943/4796 [01:54&lt;07:46, 8.25it/s] Iteration: 20% 944/4796 [01:55&lt;07:41, 8.35it/s] Iteration: 20% 945/4796 [01:55&lt;07:43, 8.31it/s] Iteration: 20% 946/4796 [01:55&lt;07:55, 8.10it/s] Iteration: 20% 947/4796 [01:55&lt;07:52, 8.14it/s] Iteration: 20% 948/4796 [01:55&lt;07:51, 8.16it/s] Iteration: 20% 949/4796 [01:55&lt;07:44, 8.28it/s] Iteration: 20% 950/4796 [01:55&lt;07:44, 8.28it/s] Iteration: 20% 951/4796 [01:55&lt;07:51, 8.15it/s] Iteration: 20% 952/4796 [01:56&lt;07:49, 8.20it/s] Iteration: 20% 953/4796 [01:56&lt;07:50, 8.17it/s] Iteration: 20% 954/4796 [01:56&lt;07:50, 8.17it/s] Iteration: 20% 955/4796 [01:56&lt;07:43, 8.29it/s] Iteration: 20% 956/4796 [01:56&lt;07:49, 8.18it/s] Iteration: 20% 957/4796 [01:56&lt;07:48, 8.19it/s] Iteration: 20% 958/4796 [01:56&lt;07:48, 8.19it/s] Iteration: 20% 959/4796 [01:56&lt;07:42, 8.29it/s] Iteration: 20% 960/4796 [01:57&lt;07:55, 8.07it/s] Iteration: 20% 961/4796 [01:57&lt;07:57, 8.03it/s] Iteration: 20% 962/4796 [01:57&lt;07:50, 8.15it/s] Iteration: 20% 963/4796 [01:57&lt;07:50, 8.15it/s] Iteration: 20% 964/4796 [01:57&lt;07:43, 8.26it/s] Iteration: 20% 965/4796 [01:57&lt;07:50, 8.14it/s] Iteration: 20% 966/4796 [01:57&lt;07:49, 8.15it/s] Iteration: 20% 967/4796 [01:57&lt;07:48, 8.17it/s] Iteration: 20% 968/4796 [01:58&lt;07:46, 8.20it/s] Iteration: 20% 969/4796 [01:58&lt;07:53, 8.09it/s] Iteration: 20% 970/4796 [01:58&lt;07:45, 8.23it/s] Iteration: 20% 971/4796 [01:58&lt;07:47, 8.19it/s] Iteration: 20% 972/4796 [01:58&lt;07:48, 8.16it/s] Iteration: 20% 973/4796 [01:58&lt;07:48, 8.17it/s] Iteration: 20% 974/4796 [01:58&lt;07:45, 8.21it/s] Iteration: 20% 975/4796 [01:58&lt;07:47, 8.18it/s] Iteration: 20% 976/4796 [01:59&lt;07:49, 8.14it/s] Iteration: 20% 977/4796 [01:59&lt;07:41, 8.28it/s] Iteration: 20% 978/4796 [01:59&lt;07:41, 8.27it/s] Iteration: 20% 979/4796 [01:59&lt;07:54, 8.04it/s] Iteration: 20% 980/4796 [01:59&lt;07:56, 8.01it/s] Iteration: 20% 981/4796 [01:59&lt;07:53, 8.05it/s] Iteration: 20% 982/4796 [01:59&lt;07:53, 8.05it/s] Iteration: 20% 983/4796 [01:59&lt;07:57, 7.98it/s] Iteration: 21% 984/4796 [02:00&lt;07:49, 8.12it/s] Iteration: 21% 985/4796 [02:00&lt;07:41, 8.25it/s] Iteration: 21% 986/4796 [02:00&lt;07:43, 8.22it/s] Iteration: 21% 987/4796 [02:00&lt;07:53, 8.04it/s] Iteration: 21% 988/4796 [02:00&lt;07:51, 8.07it/s] Iteration: 21% 989/4796 [02:00&lt;07:45, 8.18it/s] Iteration: 21% 990/4796 [02:00&lt;07:38, 8.29it/s] Iteration: 21% 991/4796 [02:00&lt;07:39, 8.28it/s] Iteration: 21% 992/4796 [02:00&lt;07:42, 8.22it/s] Iteration: 21% 993/4796 [02:01&lt;07:40, 8.25it/s] Iteration: 21% 994/4796 [02:01&lt;07:37, 8.32it/s] Iteration: 21% 995/4796 [02:01&lt;07:34, 8.36it/s] Iteration: 21% 996/4796 [02:01&lt;07:33, 8.37it/s] Iteration: 21% 997/4796 [02:01&lt;07:38, 8.29it/s] Iteration: 21% 998/4796 [02:01&lt;07:45, 8.15it/s] Iteration: 21% 999/4796 [02:01&lt;07:45, 8.16it/s] Iteration: 21% 1000/4796 [02:01&lt;07:38, 8.29it/s] Iteration: 21% 1001/4796 [02:02&lt;07:34, 8.36it/s] Iteration: 21% 1002/4796 [02:02&lt;07:46, 8.13it/s] Iteration: 21% 1003/4796 [02:02&lt;07:42, 8.21it/s] Iteration: 21% 1004/4796 [02:02&lt;07:43, 8.18it/s] Iteration: 21% 1005/4796 [02:02&lt;07:43, 8.19it/s] Iteration: 21% 1006/4796 [02:02&lt;07:45, 8.15it/s] Iteration: 21% 1007/4796 [02:02&lt;07:43, 8.18it/s] Iteration: 21% 1008/4796 [02:02&lt;07:42, 8.19it/s] Iteration: 21% 1009/4796 [02:03&lt;07:42, 8.19it/s] Iteration: 21% 1010/4796 [02:03&lt;07:41, 8.20it/s] Iteration: 21% 1011/4796 [02:03&lt;07:41, 8.21it/s] Iteration: 21% 1012/4796 [02:03&lt;07:47, 8.09it/s] Iteration: 21% 1013/4796 [02:03&lt;07:46, 8.11it/s] Iteration: 21% 1014/4796 [02:03&lt;07:45, 8.12it/s] Iteration: 21% 1015/4796 [02:03&lt;07:43, 8.16it/s] Iteration: 21% 1016/4796 [02:03&lt;07:49, 8.05it/s] Iteration: 21% 1017/4796 [02:04&lt;07:41, 8.18it/s] Iteration: 21% 1018/4796 [02:04&lt;07:41, 8.19it/s] Iteration: 21% 1019/4796 [02:04&lt;07:47, 8.07it/s] Iteration: 21% 1020/4796 [02:04&lt;07:45, 8.11it/s] Iteration: 21% 1021/4796 [02:04&lt;07:43, 8.14it/s] Iteration: 21% 1022/4796 [02:04&lt;07:41, 8.18it/s] Iteration: 21% 1023/4796 [02:04&lt;07:40, 8.19it/s] Iteration: 21% 1024/4796 [02:04&lt;07:39, 8.20it/s] Iteration: 21% 1025/4796 [02:05&lt;07:46, 8.08it/s] Iteration: 21% 1026/4796 [02:05&lt;07:43, 8.13it/s] Iteration: 21% 1027/4796 [02:05&lt;07:43, 8.14it/s] Iteration: 21% 1028/4796 [02:05&lt;07:43, 8.13it/s] Iteration: 21% 1029/4796 [02:05&lt;07:41, 8.16it/s] Iteration: 21% 1030/4796 [02:05&lt;07:45, 8.09it/s] Iteration: 21% 1031/4796 [02:05&lt;07:45, 8.09it/s] Iteration: 22% 1032/4796 [02:05&lt;07:36, 8.25it/s] Iteration: 22% 1033/4796 [02:06&lt;07:36, 8.25it/s] Iteration: 22% 1034/4796 [02:06&lt;07:43, 8.12it/s] Iteration: 22% 1035/4796 [02:06&lt;07:40, 8.17it/s] Iteration: 22% 1036/4796 [02:06&lt;07:38, 8.19it/s] Iteration: 22% 1037/4796 [02:06&lt;07:39, 8.18it/s] Iteration: 22% 1038/4796 [02:06&lt;07:39, 8.18it/s] Iteration: 22% 1039/4796 [02:06&lt;07:37, 8.21it/s] Iteration: 22% 1040/4796 [02:06&lt;07:37, 8.22it/s] Iteration: 22% 1041/4796 [02:06&lt;07:36, 8.22it/s] Iteration: 22% 1042/4796 [02:07&lt;07:31, 8.32it/s] Iteration: 22% 1043/4796 [02:07&lt;07:37, 8.20it/s] Iteration: 22% 1044/4796 [02:07&lt;07:41, 8.13it/s] Iteration: 22% 1045/4796 [02:07&lt;07:39, 8.16it/s] Iteration: 22% 1046/4796 [02:07&lt;07:40, 8.15it/s] Iteration: 22% 1047/4796 [02:07&lt;07:33, 8.27it/s] Iteration: 22% 1048/4796 [02:07&lt;07:33, 8.26it/s] Iteration: 22% 1049/4796 [02:07&lt;07:37, 8.18it/s] Iteration: 22% 1050/4796 [02:08&lt;07:36, 8.21it/s] Iteration: 22% 1051/4796 [02:08&lt;07:31, 8.30it/s] Iteration: 22% 1052/4796 [02:08&lt;07:34, 8.24it/s] Iteration: 22% 1053/4796 [02:08&lt;07:33, 8.26it/s] Iteration: 22% 1054/4796 [02:08&lt;07:38, 8.15it/s] Iteration: 22% 1055/4796 [02:08&lt;07:37, 8.18it/s] Iteration: 22% 1056/4796 [02:08&lt;07:36, 8.20it/s] Iteration: 22% 1057/4796 [02:08&lt;07:30, 8.30it/s] Iteration: 22% 1058/4796 [02:09&lt;07:32, 8.26it/s] Iteration: 22% 1059/4796 [02:09&lt;07:32, 8.25it/s] Iteration: 22% 1060/4796 [02:09&lt;07:28, 8.33it/s] Iteration: 22% 1061/4796 [02:09&lt;07:25, 8.38it/s] Iteration: 22% 1062/4796 [02:09&lt;07:30, 8.29it/s] Iteration: 22% 1063/4796 [02:09&lt;07:42, 8.06it/s] Iteration: 22% 1064/4796 [02:09&lt;07:40, 8.11it/s] Iteration: 22% 1065/4796 [02:09&lt;07:38, 8.13it/s] Iteration: 22% 1066/4796 [02:10&lt;07:35, 8.18it/s] Iteration: 22% 1067/4796 [02:10&lt;07:28, 8.31it/s] Iteration: 22% 1068/4796 [02:10&lt;07:35, 8.18it/s] Iteration: 22% 1069/4796 [02:10&lt;07:43, 8.04it/s] Iteration: 22% 1070/4796 [02:10&lt;07:41, 8.08it/s] Iteration: 22% 1071/4796 [02:10&lt;07:33, 8.21it/s] Iteration: 22% 1072/4796 [02:10&lt;07:40, 8.09it/s] Iteration: 22% 1073/4796 [02:10&lt;07:37, 8.14it/s] Iteration: 22% 1074/4796 [02:11&lt;07:36, 8.14it/s] Iteration: 22% 1075/4796 [02:11&lt;07:35, 8.18it/s] Iteration: 22% 1076/4796 [02:11&lt;07:29, 8.28it/s] Iteration: 22% 1077/4796 [02:11&lt;07:36, 8.15it/s] Iteration: 22% 1078/4796 [02:11&lt;07:34, 8.18it/s] Iteration: 22% 1079/4796 [02:11&lt;07:29, 8.28it/s] Iteration: 23% 1080/4796 [02:11&lt;07:29, 8.26it/s] Iteration: 23% 1081/4796 [02:11&lt;07:31, 8.22it/s] Iteration: 23% 1082/4796 [02:11&lt;07:31, 8.22it/s] Iteration: 23% 1083/4796 [02:12&lt;07:31, 8.23it/s] Iteration: 23% 1084/4796 [02:12&lt;07:30, 8.24it/s] Iteration: 23% 1085/4796 [02:12&lt;07:31, 8.23it/s] Iteration: 23% 1086/4796 [02:12&lt;07:31, 8.22it/s] Iteration: 23% 1087/4796 [02:12&lt;07:33, 8.18it/s] Iteration: 23% 1088/4796 [02:12&lt;07:27, 8.28it/s] Iteration: 23% 1089/4796 [02:12&lt;07:22, 8.38it/s] Iteration: 23% 1090/4796 [02:12&lt;07:20, 8.42it/s] Iteration: 23% 1091/4796 [02:13&lt;07:31, 8.20it/s] Iteration: 23% 1092/4796 [02:13&lt;07:30, 8.23it/s] Iteration: 23% 1093/4796 [02:13&lt;07:30, 8.23it/s] Iteration: 23% 1094/4796 [02:13&lt;07:34, 8.15it/s] Iteration: 23% 1095/4796 [02:13&lt;07:32, 8.18it/s] Iteration: 23% 1096/4796 [02:13&lt;07:32, 8.18it/s] Iteration: 23% 1097/4796 [02:13&lt;07:32, 8.18it/s] Iteration: 23% 1098/4796 [02:13&lt;07:31, 8.19it/s] Iteration: 23% 1099/4796 [02:14&lt;07:29, 8.22it/s] Iteration: 23% 1100/4796 [02:14&lt;07:23, 8.33it/s] Iteration: 23% 1101/4796 [02:14&lt;07:32, 8.16it/s] Iteration: 23% 1102/4796 [02:14&lt;07:33, 8.15it/s] Iteration: 23% 1103/4796 [02:14&lt;07:25, 8.28it/s] Iteration: 23% 1104/4796 [02:14&lt;07:25, 8.28it/s] Iteration: 23% 1105/4796 [02:14&lt;07:27, 8.25it/s] Iteration: 23% 1106/4796 [02:14&lt;07:26, 8.27it/s] Iteration: 23% 1107/4796 [02:15&lt;07:28, 8.23it/s] Iteration: 23% 1108/4796 [02:15&lt;07:29, 8.21it/s] Iteration: 23% 1109/4796 [02:15&lt;07:27, 8.23it/s] Iteration: 23% 1110/4796 [02:15&lt;07:27, 8.24it/s] Iteration: 23% 1111/4796 [02:15&lt;07:31, 8.16it/s] Iteration: 23% 1112/4796 [02:15&lt;07:30, 8.17it/s] Iteration: 23% 1113/4796 [02:15&lt;07:30, 8.18it/s] Iteration: 23% 1114/4796 [02:15&lt;07:29, 8.19it/s] Iteration: 23% 1115/4796 [02:15&lt;07:24, 8.28it/s] Iteration: 23% 1116/4796 [02:16&lt;07:26, 8.24it/s] Iteration: 23% 1117/4796 [02:16&lt;07:26, 8.23it/s] Iteration: 23% 1118/4796 [02:16&lt;07:28, 8.21it/s] Iteration: 23% 1119/4796 [02:16&lt;07:30, 8.17it/s] Iteration: 23% 1120/4796 [02:16&lt;07:37, 8.03it/s] Iteration: 23% 1121/4796 [02:16&lt;07:34, 8.08it/s] Iteration: 23% 1122/4796 [02:16&lt;07:33, 8.11it/s] Iteration: 23% 1123/4796 [02:16&lt;07:31, 8.14it/s] Iteration: 23% 1124/4796 [02:17&lt;07:29, 8.17it/s] Iteration: 23% 1125/4796 [02:17&lt;07:33, 8.09it/s] Iteration: 23% 1126/4796 [02:17&lt;07:30, 8.15it/s] Iteration: 23% 1127/4796 [02:17&lt;07:29, 8.17it/s] Iteration: 24% 1128/4796 [02:17&lt;07:31, 8.13it/s] Iteration: 24% 1129/4796 [02:17&lt;07:29, 8.16it/s] Iteration: 24% 1130/4796 [02:17&lt;07:30, 8.13it/s] Iteration: 24% 1131/4796 [02:17&lt;07:29, 8.15it/s] Iteration: 24% 1132/4796 [02:18&lt;07:27, 8.18it/s] Iteration: 24% 1133/4796 [02:18&lt;07:26, 8.20it/s] Iteration: 24% 1134/4796 [02:18&lt;07:27, 8.19it/s] Iteration: 24% 1135/4796 [02:18&lt;07:21, 8.29it/s] Iteration: 24% 1136/4796 [02:18&lt;07:22, 8.27it/s] Iteration: 24% 1137/4796 [02:18&lt;07:21, 8.28it/s] Iteration: 24% 1138/4796 [02:18&lt;07:21, 8.28it/s] Iteration: 24% 1139/4796 [02:18&lt;07:29, 8.14it/s] Iteration: 24% 1140/4796 [02:19&lt;07:27, 8.17it/s] Iteration: 24% 1141/4796 [02:19&lt;07:21, 8.28it/s] Iteration: 24% 1142/4796 [02:19&lt;07:16, 8.36it/s] Iteration: 24% 1143/4796 [02:19&lt;07:12, 8.45it/s] Iteration: 24% 1144/4796 [02:19&lt;07:18, 8.33it/s] Iteration: 24% 1145/4796 [02:19&lt;07:13, 8.42it/s] Iteration: 24% 1146/4796 [02:19&lt;07:17, 8.34it/s] Iteration: 24% 1147/4796 [02:19&lt;07:21, 8.27it/s] Iteration: 24% 1148/4796 [02:20&lt;07:20, 8.27it/s] Iteration: 24% 1149/4796 [02:20&lt;07:26, 8.17it/s] Iteration: 24% 1150/4796 [02:20&lt;07:25, 8.19it/s] Iteration: 24% 1151/4796 [02:20&lt;07:25, 8.18it/s] Iteration: 24% 1152/4796 [02:20&lt;07:24, 8.19it/s] Iteration: 24% 1153/4796 [02:20&lt;07:24, 8.20it/s] Iteration: 24% 1154/4796 [02:20&lt;07:20, 8.27it/s] Iteration: 24% 1155/4796 [02:20&lt;07:21, 8.25it/s] Iteration: 24% 1156/4796 [02:20&lt;07:21, 8.25it/s] Iteration: 24% 1157/4796 [02:21&lt;07:22, 8.23it/s] Iteration: 24% 1158/4796 [02:21&lt;07:30, 8.08it/s] Iteration: 24% 1159/4796 [02:21&lt;07:26, 8.14it/s] Iteration: 24% 1160/4796 [02:21&lt;07:27, 8.13it/s] Iteration: 24% 1161/4796 [02:21&lt;07:26, 8.14it/s] Iteration: 24% 1162/4796 [02:21&lt;07:27, 8.12it/s] Iteration: 24% 1163/4796 [02:21&lt;07:30, 8.07it/s] Iteration: 24% 1164/4796 [02:21&lt;07:26, 8.13it/s] Iteration: 24% 1165/4796 [02:22&lt;07:25, 8.16it/s] Iteration: 24% 1166/4796 [02:22&lt;07:18, 8.28it/s] Iteration: 24% 1167/4796 [02:22&lt;07:19, 8.26it/s] Iteration: 24% 1168/4796 [02:22&lt;07:24, 8.16it/s] Iteration: 24% 1169/4796 [02:22&lt;07:21, 8.22it/s] Iteration: 24% 1170/4796 [02:22&lt;07:22, 8.20it/s] Iteration: 24% 1171/4796 [02:22&lt;07:22, 8.19it/s] Iteration: 24% 1172/4796 [02:22&lt;07:28, 8.08it/s] Iteration: 24% 1173/4796 [02:23&lt;07:30, 8.03it/s] Iteration: 24% 1174/4796 [02:23&lt;07:27, 8.10it/s] Iteration: 24% 1175/4796 [02:23&lt;07:24, 8.15it/s] Iteration: 25% 1176/4796 [02:23&lt;07:29, 8.06it/s] Iteration: 25% 1177/4796 [02:23&lt;07:21, 8.19it/s] Iteration: 25% 1178/4796 [02:23&lt;07:15, 8.30it/s] Iteration: 25% 1179/4796 [02:23&lt;07:17, 8.27it/s] Iteration: 25% 1180/4796 [02:23&lt;07:17, 8.27it/s] Iteration: 25% 1181/4796 [02:24&lt;07:17, 8.26it/s] Iteration: 25% 1182/4796 [02:24&lt;07:20, 8.21it/s] Iteration: 25% 1183/4796 [02:24&lt;07:20, 8.20it/s] Iteration: 25% 1184/4796 [02:24&lt;07:15, 8.30it/s] Iteration: 25% 1185/4796 [02:24&lt;07:16, 8.28it/s] Iteration: 25% 1186/4796 [02:24&lt;07:23, 8.14it/s] Iteration: 25% 1187/4796 [02:24&lt;07:21, 8.17it/s] Iteration: 25% 1188/4796 [02:24&lt;07:15, 8.29it/s] Iteration: 25% 1189/4796 [02:25&lt;07:15, 8.28it/s] Iteration: 25% 1190/4796 [02:25&lt;07:16, 8.27it/s] Iteration: 25% 1191/4796 [02:25&lt;07:20, 8.18it/s] Iteration: 25% 1192/4796 [02:25&lt;07:19, 8.20it/s] Iteration: 25% 1193/4796 [02:25&lt;07:19, 8.20it/s] Iteration: 25% 1194/4796 [02:25&lt;07:20, 8.17it/s] Iteration: 25% 1195/4796 [02:25&lt;07:14, 8.28it/s] Iteration: 25% 1196/4796 [02:25&lt;07:17, 8.24it/s] Iteration: 25% 1197/4796 [02:25&lt;07:17, 8.23it/s] Iteration: 25% 1198/4796 [02:26&lt;07:10, 8.35it/s] Iteration: 25% 1199/4796 [02:26&lt;07:13, 8.30it/s] Iteration: 25% 1200/4796 [02:26&lt;07:21, 8.14it/s] Iteration: 25% 1201/4796 [02:26&lt;07:20, 8.17it/s] Iteration: 25% 1202/4796 [02:26&lt;07:14, 8.27it/s] Iteration: 25% 1203/4796 [02:26&lt;07:09, 8.37it/s] Iteration: 25% 1204/4796 [02:26&lt;07:10, 8.34it/s] Iteration: 25% 1205/4796 [02:26&lt;07:20, 8.16it/s] Iteration: 25% 1206/4796 [02:27&lt;07:15, 8.25it/s] Iteration: 25% 1207/4796 [02:27&lt;07:10, 8.33it/s] Iteration: 25% 1208/4796 [02:27&lt;07:11, 8.32it/s] Iteration: 25% 1209/4796 [02:27&lt;07:10, 8.34it/s] Iteration: 25% 1210/4796 [02:27&lt;07:14, 8.26it/s] Iteration: 25% 1211/4796 [02:27&lt;07:14, 8.25it/s] Iteration: 25% 1212/4796 [02:27&lt;07:17, 8.19it/s] Iteration: 25% 1213/4796 [02:27&lt;07:16, 8.21it/s] Iteration: 25% 1214/4796 [02:28&lt;07:14, 8.24it/s] Iteration: 25% 1215/4796 [02:28&lt;07:23, 8.08it/s] Iteration: 25% 1216/4796 [02:28&lt;07:21, 8.11it/s] Iteration: 25% 1217/4796 [02:28&lt;07:18, 8.17it/s] Iteration: 25% 1218/4796 [02:28&lt;07:16, 8.19it/s] Iteration: 25% 1219/4796 [02:28&lt;07:24, 8.04it/s] Iteration: 25% 1220/4796 [02:28&lt;07:16, 8.19it/s] Iteration: 25% 1221/4796 [02:28&lt;07:16, 8.19it/s] Iteration: 25% 1222/4796 [02:29&lt;07:14, 8.23it/s] Iteration: 26% 1223/4796 [02:29&lt;07:14, 8.23it/s] Iteration: 26% 1224/4796 [02:29&lt;07:21, 8.09it/s] Iteration: 26% 1225/4796 [02:29&lt;07:13, 8.24it/s] Iteration: 26% 1226/4796 [02:29&lt;07:08, 8.33it/s] Iteration: 26% 1227/4796 [02:29&lt;07:11, 8.27it/s] Iteration: 26% 1228/4796 [02:29&lt;07:10, 8.28it/s] Iteration: 26% 1229/4796 [02:29&lt;07:13, 8.22it/s] Iteration: 26% 1230/4796 [02:29&lt;07:14, 8.20it/s] Iteration: 26% 1231/4796 [02:30&lt;07:13, 8.22it/s] Iteration: 26% 1232/4796 [02:30&lt;07:13, 8.22it/s] Iteration: 26% 1233/4796 [02:30&lt;07:13, 8.22it/s] Iteration: 26% 1234/4796 [02:30&lt;07:14, 8.20it/s] Iteration: 26% 1235/4796 [02:30&lt;07:13, 8.22it/s] Iteration: 26% 1236/4796 [02:30&lt;07:13, 8.21it/s] Iteration: 26% 1237/4796 [02:30&lt;07:13, 8.20it/s] Iteration: 26% 1238/4796 [02:30&lt;07:08, 8.31it/s] Iteration: 26% 1239/4796 [02:31&lt;07:12, 8.22it/s] Iteration: 26% 1240/4796 [02:31&lt;07:09, 8.28it/s] Iteration: 26% 1241/4796 [02:31&lt;07:10, 8.26it/s] Iteration: 26% 1242/4796 [02:31&lt;07:12, 8.23it/s] Iteration: 26% 1243/4796 [02:31&lt;07:18, 8.10it/s] Iteration: 26% 1244/4796 [02:31&lt;07:16, 8.14it/s] Iteration: 26% 1245/4796 [02:31&lt;07:15, 8.16it/s] Iteration: 26% 1246/4796 [02:31&lt;07:09, 8.27it/s] Iteration: 26% 1247/4796 [02:32&lt;07:09, 8.27it/s] Iteration: 26% 1248/4796 [02:32&lt;07:16, 8.12it/s] Iteration: 26% 1249/4796 [02:32&lt;07:14, 8.17it/s] Iteration: 26% 1250/4796 [02:32&lt;07:13, 8.18it/s] Iteration: 26% 1251/4796 [02:32&lt;07:12, 8.20it/s] Iteration: 26% 1252/4796 [02:32&lt;07:12, 8.19it/s] Iteration: 26% 1253/4796 [02:32&lt;07:14, 8.16it/s] Iteration: 26% 1254/4796 [02:32&lt;07:07, 8.29it/s] Iteration: 26% 1255/4796 [02:33&lt;07:08, 8.27it/s] Iteration: 26% 1256/4796 [02:33&lt;07:03, 8.37it/s] Iteration: 26% 1257/4796 [02:33&lt;07:05, 8.32it/s] Iteration: 26% 1258/4796 [02:33&lt;07:05, 8.32it/s] Iteration: 26% 1259/4796 [02:33&lt;07:06, 8.28it/s] Iteration: 26% 1260/4796 [02:33&lt;07:07, 8.26it/s] Iteration: 26% 1261/4796 [02:33&lt;07:08, 8.26it/s] Iteration: 26% 1262/4796 [02:33&lt;07:10, 8.22it/s] Iteration: 26% 1263/4796 [02:34&lt;07:10, 8.21it/s] Iteration: 26% 1264/4796 [02:34&lt;07:09, 8.22it/s] Iteration: 26% 1265/4796 [02:34&lt;07:09, 8.22it/s] Iteration: 26% 1266/4796 [02:34&lt;07:09, 8.22it/s] Iteration: 26% 1267/4796 [02:34&lt;07:15, 8.10it/s] Iteration: 26% 1268/4796 [02:34&lt;07:07, 8.25it/s] Iteration: 26% 1269/4796 [02:34&lt;07:15, 8.10it/s] Iteration: 26% 1270/4796 [02:34&lt;07:17, 8.06it/s] Iteration: 27% 1271/4796 [02:34&lt;07:14, 8.11it/s] Iteration: 27% 1272/4796 [02:35&lt;07:12, 8.14it/s] Iteration: 27% 1273/4796 [02:35&lt;07:11, 8.16it/s] Iteration: 27% 1274/4796 [02:35&lt;07:11, 8.16it/s] Iteration: 27% 1275/4796 [02:35&lt;07:14, 8.11it/s] Iteration: 27% 1276/4796 [02:35&lt;07:17, 8.05it/s] Iteration: 27% 1277/4796 [02:35&lt;07:15, 8.09it/s] Iteration: 27% 1278/4796 [02:35&lt;07:12, 8.13it/s] Iteration: 27% 1279/4796 [02:35&lt;07:10, 8.16it/s] Iteration: 27% 1280/4796 [02:36&lt;07:18, 8.03it/s] Iteration: 27% 1281/4796 [02:36&lt;07:16, 8.06it/s] Iteration: 27% 1282/4796 [02:36&lt;07:14, 8.09it/s] Iteration: 27% 1283/4796 [02:36&lt;07:13, 8.10it/s] Iteration: 27% 1284/4796 [02:36&lt;07:13, 8.11it/s] Iteration: 27% 1285/4796 [02:36&lt;07:10, 8.15it/s] Iteration: 27% 1286/4796 [02:36&lt;07:13, 8.10it/s] Iteration: 27% 1287/4796 [02:36&lt;07:05, 8.24it/s] Iteration: 27% 1288/4796 [02:37&lt;07:05, 8.25it/s] Iteration: 27% 1289/4796 [02:37&lt;07:12, 8.11it/s] Iteration: 27% 1290/4796 [02:37&lt;07:10, 8.14it/s] Iteration: 27% 1291/4796 [02:37&lt;07:09, 8.16it/s] Iteration: 27% 1292/4796 [02:37&lt;07:08, 8.17it/s] Iteration: 27% 1293/4796 [02:37&lt;07:10, 8.13it/s] Iteration: 27% 1294/4796 [02:37&lt;07:15, 8.05it/s] Iteration: 27% 1295/4796 [02:37&lt;07:10, 8.13it/s] Iteration: 27% 1296/4796 [02:38&lt;07:09, 8.16it/s] Iteration: 27% 1297/4796 [02:38&lt;07:07, 8.19it/s] Iteration: 27% 1298/4796 [02:38&lt;07:01, 8.30it/s] Iteration: 27% 1299/4796 [02:38&lt;07:05, 8.23it/s] Iteration: 27% 1300/4796 [02:38&lt;07:04, 8.23it/s] Iteration: 27% 1301/4796 [02:38&lt;07:06, 8.20it/s] Iteration: 27% 1302/4796 [02:38&lt;07:02, 8.28it/s] Iteration: 27% 1303/4796 [02:38&lt;07:03, 8.25it/s] Iteration: 27% 1304/4796 [02:39&lt;07:03, 8.24it/s] Iteration: 27% 1305/4796 [02:39&lt;07:03, 8.24it/s] Iteration: 27% 1306/4796 [02:39&lt;07:06, 8.18it/s] Iteration: 27% 1307/4796 [02:39&lt;07:06, 8.19it/s] Iteration: 27% 1308/4796 [02:39&lt;07:00, 8.30it/s] Iteration: 27% 1309/4796 [02:39&lt;06:56, 8.37it/s] Iteration: 27% 1310/4796 [02:39&lt;06:52, 8.46it/s] Iteration: 27% 1311/4796 [02:39&lt;06:56, 8.37it/s] Iteration: 27% 1312/4796 [02:39&lt;06:53, 8.43it/s] Iteration: 27% 1313/4796 [02:40&lt;07:03, 8.23it/s] Iteration: 27% 1314/4796 [02:40&lt;07:03, 8.21it/s] Iteration: 27% 1315/4796 [02:40&lt;07:01, 8.26it/s] Iteration: 27% 1316/4796 [02:40&lt;07:06, 8.16it/s] Iteration: 27% 1317/4796 [02:40&lt;07:05, 8.18it/s] Iteration: 27% 1318/4796 [02:40&lt;07:05, 8.18it/s] Iteration: 28% 1319/4796 [02:40&lt;07:03, 8.21it/s] Iteration: 28% 1320/4796 [02:40&lt;07:02, 8.22it/s] Iteration: 28% 1321/4796 [02:41&lt;07:02, 8.22it/s] Iteration: 28% 1322/4796 [02:41&lt;07:10, 8.08it/s] Iteration: 28% 1323/4796 [02:41&lt;07:06, 8.14it/s] Iteration: 28% 1324/4796 [02:41&lt;07:00, 8.26it/s] Iteration: 28% 1325/4796 [02:41&lt;06:59, 8.27it/s] Iteration: 28% 1326/4796 [02:41&lt;07:02, 8.22it/s] Iteration: 28% 1327/4796 [02:41&lt;07:08, 8.09it/s] Iteration: 28% 1328/4796 [02:41&lt;07:05, 8.15it/s] Iteration: 28% 1329/4796 [02:42&lt;07:03, 8.18it/s] Iteration: 28% 1330/4796 [02:42&lt;07:13, 7.99it/s] Iteration: 28% 1331/4796 [02:42&lt;07:09, 8.06it/s] Iteration: 28% 1332/4796 [02:42&lt;07:02, 8.19it/s] Iteration: 28% 1333/4796 [02:42&lt;07:01, 8.21it/s] Iteration: 28% 1334/4796 [02:42&lt;07:02, 8.19it/s] Iteration: 28% 1335/4796 [02:42&lt;07:02, 8.20it/s] Iteration: 28% 1336/4796 [02:42&lt;07:09, 8.05it/s] Iteration: 28% 1337/4796 [02:43&lt;07:05, 8.13it/s] Iteration: 28% 1338/4796 [02:43&lt;07:05, 8.13it/s] Iteration: 28% 1339/4796 [02:43&lt;06:58, 8.27it/s] Iteration: 28% 1340/4796 [02:43&lt;06:57, 8.27it/s] Iteration: 28% 1341/4796 [02:43&lt;07:04, 8.14it/s] Iteration: 28% 1342/4796 [02:43&lt;07:03, 8.16it/s] Iteration: 28% 1343/4796 [02:43&lt;06:57, 8.27it/s] Iteration: 28% 1344/4796 [02:43&lt;06:52, 8.37it/s] Iteration: 28% 1345/4796 [02:44&lt;07:03, 8.15it/s] Iteration: 28% 1346/4796 [02:44&lt;07:01, 8.19it/s] Iteration: 28% 1347/4796 [02:44&lt;06:56, 8.27it/s] Iteration: 28% 1348/4796 [02:44&lt;06:55, 8.29it/s] Iteration: 28% 1349/4796 [02:44&lt;06:57, 8.25it/s] Iteration: 28% 1350/4796 [02:44&lt;07:07, 8.07it/s] Iteration: 28% 1351/4796 [02:44&lt;06:59, 8.21it/s] Iteration: 28% 1352/4796 [02:44&lt;06:59, 8.21it/s] Iteration: 28% 1353/4796 [02:45&lt;06:58, 8.23it/s] Iteration: 28% 1354/4796 [02:45&lt;06:58, 8.23it/s] Iteration: 28% 1355/4796 [02:45&lt;07:00, 8.18it/s] Iteration: 28% 1356/4796 [02:45&lt;06:58, 8.22it/s] Iteration: 28% 1357/4796 [02:45&lt;06:58, 8.22it/s] Iteration: 28% 1358/4796 [02:45&lt;06:58, 8.22it/s] Iteration: 28% 1359/4796 [02:45&lt;06:57, 8.24it/s] Iteration: 28% 1360/4796 [02:45&lt;07:02, 8.13it/s] Iteration: 28% 1361/4796 [02:45&lt;06:57, 8.23it/s] Iteration: 28% 1362/4796 [02:46&lt;06:52, 8.32it/s] Iteration: 28% 1363/4796 [02:46&lt;06:54, 8.28it/s] Iteration: 28% 1364/4796 [02:46&lt;07:02, 8.13it/s] Iteration: 28% 1365/4796 [02:46&lt;06:54, 8.27it/s] Iteration: 28% 1366/4796 [02:46&lt;06:55, 8.25it/s] Iteration: 29% 1367/4796 [02:46&lt;06:57, 8.22it/s] Iteration: 29% 1368/4796 [02:46&lt;07:00, 8.14it/s] Iteration: 29% 1369/4796 [02:46&lt;06:54, 8.26it/s] Iteration: 29% 1370/4796 [02:47&lt;06:49, 8.36it/s] Iteration: 29% 1371/4796 [02:47&lt;06:52, 8.31it/s] Iteration: 29% 1372/4796 [02:47&lt;06:54, 8.26it/s] Iteration: 29% 1373/4796 [02:47&lt;06:54, 8.27it/s] Iteration: 29% 1374/4796 [02:47&lt;06:49, 8.35it/s] Iteration: 29% 1375/4796 [02:47&lt;06:57, 8.19it/s] Iteration: 29% 1376/4796 [02:47&lt;06:51, 8.31it/s] Iteration: 29% 1377/4796 [02:47&lt;06:53, 8.27it/s] Iteration: 29% 1378/4796 [02:48&lt;06:52, 8.28it/s] Iteration: 29% 1379/4796 [02:48&lt;07:00, 8.13it/s] Iteration: 29% 1380/4796 [02:48&lt;06:57, 8.18it/s] Iteration: 29% 1381/4796 [02:48&lt;06:56, 8.19it/s] Iteration: 29% 1382/4796 [02:48&lt;06:57, 8.19it/s] Iteration: 29% 1383/4796 [02:48&lt;06:57, 8.18it/s] Iteration: 29% 1384/4796 [02:48&lt;06:56, 8.19it/s] Iteration: 29% 1385/4796 [02:48&lt;07:02, 8.08it/s] Iteration: 29% 1386/4796 [02:49&lt;07:01, 8.08it/s] Iteration: 29% 1387/4796 [02:49&lt;06:59, 8.13it/s] Iteration: 29% 1388/4796 [02:49&lt;06:52, 8.26it/s] Iteration: 29% 1389/4796 [02:49&lt;07:00, 8.10it/s] Iteration: 29% 1390/4796 [02:49&lt;06:57, 8.15it/s] Iteration: 29% 1391/4796 [02:49&lt;06:58, 8.13it/s] Iteration: 29% 1392/4796 [02:49&lt;06:59, 8.12it/s] Iteration: 29% 1393/4796 [02:49&lt;06:59, 8.11it/s] Iteration: 29% 1394/4796 [02:50&lt;07:06, 7.97it/s] Iteration: 29% 1395/4796 [02:50&lt;07:01, 8.07it/s] Iteration: 29% 1396/4796 [02:50&lt;06:58, 8.12it/s] Iteration: 29% 1397/4796 [02:50&lt;06:59, 8.10it/s] Iteration: 29% 1398/4796 [02:50&lt;07:06, 7.97it/s] Iteration: 29% 1399/4796 [02:50&lt;07:02, 8.04it/s] Iteration: 29% 1400/4796 [02:50&lt;06:59, 8.09it/s] Iteration: 29% 1401/4796 [02:50&lt;06:56, 8.16it/s] Iteration: 29% 1402/4796 [02:50&lt;06:58, 8.11it/s] Iteration: 29% 1403/4796 [02:51&lt;07:02, 8.03it/s] Iteration: 29% 1404/4796 [02:51&lt;06:55, 8.17it/s] Iteration: 29% 1405/4796 [02:51&lt;06:49, 8.28it/s] Iteration: 29% 1406/4796 [02:51&lt;06:50, 8.25it/s] Iteration: 29% 1407/4796 [02:51&lt;06:57, 8.11it/s]{&#39;loss&#39;: 0.0613193359375, &#39;learning_rate&#39;: 1.1773700305810397e-05, &#39;epoch&#39;: 2.293577981651376, &#39;step&#39;: 11000} Iteration: 29% 1408/4796 [02:51&lt;06:59, 8.08it/s] Iteration: 29% 1409/4796 [02:51&lt;06:49, 8.27it/s] Iteration: 29% 1410/4796 [02:51&lt;06:49, 8.27it/s] Iteration: 29% 1411/4796 [02:52&lt;06:50, 8.25it/s] Iteration: 29% 1412/4796 [02:52&lt;06:49, 8.26it/s] Iteration: 29% 1413/4796 [02:52&lt;06:55, 8.14it/s] Iteration: 29% 1414/4796 [02:52&lt;06:48, 8.29it/s] Iteration: 30% 1415/4796 [02:52&lt;06:44, 8.35it/s] Iteration: 30% 1416/4796 [02:52&lt;06:47, 8.29it/s] Iteration: 30% 1417/4796 [02:52&lt;06:49, 8.26it/s] Iteration: 30% 1418/4796 [02:52&lt;06:55, 8.12it/s] Iteration: 30% 1419/4796 [02:53&lt;06:54, 8.16it/s] Iteration: 30% 1420/4796 [02:53&lt;06:53, 8.17it/s] Iteration: 30% 1421/4796 [02:53&lt;06:53, 8.16it/s] Iteration: 30% 1422/4796 [02:53&lt;06:51, 8.19it/s] Iteration: 30% 1423/4796 [02:53&lt;06:58, 8.06it/s] Iteration: 30% 1424/4796 [02:53&lt;06:55, 8.12it/s] Iteration: 30% 1425/4796 [02:53&lt;06:55, 8.12it/s] Iteration: 30% 1426/4796 [02:53&lt;06:53, 8.16it/s] Iteration: 30% 1427/4796 [02:54&lt;06:47, 8.28it/s] Iteration: 30% 1428/4796 [02:54&lt;06:52, 8.17it/s] Iteration: 30% 1429/4796 [02:54&lt;06:51, 8.18it/s] Iteration: 30% 1430/4796 [02:54&lt;06:51, 8.19it/s] Iteration: 30% 1431/4796 [02:54&lt;06:50, 8.19it/s] Iteration: 30% 1432/4796 [02:54&lt;06:53, 8.14it/s] Iteration: 30% 1433/4796 [02:54&lt;06:52, 8.15it/s] Iteration: 30% 1434/4796 [02:54&lt;06:47, 8.25it/s] Iteration: 30% 1435/4796 [02:55&lt;06:46, 8.26it/s] Iteration: 30% 1436/4796 [02:55&lt;06:46, 8.26it/s] Iteration: 30% 1437/4796 [02:55&lt;06:51, 8.16it/s] Iteration: 30% 1438/4796 [02:55&lt;06:49, 8.21it/s] Iteration: 30% 1439/4796 [02:55&lt;06:51, 8.17it/s] Iteration: 30% 1440/4796 [02:55&lt;06:49, 8.19it/s] Iteration: 30% 1441/4796 [02:55&lt;06:47, 8.23it/s] Iteration: 30% 1442/4796 [02:55&lt;06:44, 8.30it/s] Iteration: 30% 1443/4796 [02:55&lt;06:42, 8.33it/s] Iteration: 30% 1444/4796 [02:56&lt;06:44, 8.28it/s] Iteration: 30% 1445/4796 [02:56&lt;06:47, 8.21it/s] Iteration: 30% 1446/4796 [02:56&lt;06:48, 8.21it/s] Iteration: 30% 1447/4796 [02:56&lt;06:49, 8.18it/s] Iteration: 30% 1448/4796 [02:56&lt;06:50, 8.16it/s] Iteration: 30% 1449/4796 [02:56&lt;06:48, 8.20it/s] Iteration: 30% 1450/4796 [02:56&lt;06:47, 8.22it/s] Iteration: 30% 1451/4796 [02:56&lt;06:54, 8.06it/s] Iteration: 30% 1452/4796 [02:57&lt;06:53, 8.09it/s] Iteration: 30% 1453/4796 [02:57&lt;06:51, 8.13it/s] Iteration: 30% 1454/4796 [02:57&lt;06:48, 8.17it/s] Iteration: 30% 1455/4796 [02:57&lt;06:52, 8.09it/s] Iteration: 30% 1456/4796 [02:57&lt;06:50, 8.14it/s] Iteration: 30% 1457/4796 [02:57&lt;06:48, 8.17it/s] Iteration: 30% 1458/4796 [02:57&lt;06:47, 8.20it/s] Iteration: 30% 1459/4796 [02:57&lt;06:47, 8.20it/s] Iteration: 30% 1460/4796 [02:58&lt;06:54, 8.06it/s] Iteration: 30% 1461/4796 [02:58&lt;06:46, 8.21it/s] Iteration: 30% 1462/4796 [02:58&lt;06:46, 8.21it/s] Iteration: 31% 1463/4796 [02:58&lt;06:45, 8.22it/s] Iteration: 31% 1464/4796 [02:58&lt;06:40, 8.32it/s] Iteration: 31% 1465/4796 [02:58&lt;06:42, 8.27it/s] Iteration: 31% 1466/4796 [02:58&lt;06:42, 8.27it/s] Iteration: 31% 1467/4796 [02:58&lt;06:38, 8.36it/s] Iteration: 31% 1468/4796 [02:59&lt;06:40, 8.31it/s] Iteration: 31% 1469/4796 [02:59&lt;06:40, 8.30it/s] Iteration: 31% 1470/4796 [02:59&lt;06:41, 8.29it/s] Iteration: 31% 1471/4796 [02:59&lt;06:48, 8.14it/s] Iteration: 31% 1472/4796 [02:59&lt;06:47, 8.16it/s] Iteration: 31% 1473/4796 [02:59&lt;06:45, 8.19it/s] Iteration: 31% 1474/4796 [02:59&lt;06:48, 8.14it/s] Iteration: 31% 1475/4796 [02:59&lt;06:53, 8.03it/s] Iteration: 31% 1476/4796 [03:00&lt;06:49, 8.10it/s] Iteration: 31% 1477/4796 [03:00&lt;06:48, 8.13it/s] Iteration: 31% 1478/4796 [03:00&lt;06:47, 8.13it/s] Iteration: 31% 1479/4796 [03:00&lt;06:46, 8.15it/s] Iteration: 31% 1480/4796 [03:00&lt;06:49, 8.09it/s] Iteration: 31% 1481/4796 [03:00&lt;06:48, 8.12it/s] Iteration: 31% 1482/4796 [03:00&lt;06:47, 8.13it/s] Iteration: 31% 1483/4796 [03:00&lt;06:46, 8.15it/s] Iteration: 31% 1484/4796 [03:01&lt;06:50, 8.06it/s] Iteration: 31% 1485/4796 [03:01&lt;06:56, 7.95it/s] Iteration: 31% 1486/4796 [03:01&lt;06:50, 8.06it/s] Iteration: 31% 1487/4796 [03:01&lt;06:43, 8.21it/s] Iteration: 31% 1488/4796 [03:01&lt;06:53, 8.01it/s] Iteration: 31% 1489/4796 [03:01&lt;06:43, 8.19it/s] Iteration: 31% 1490/4796 [03:01&lt;06:39, 8.28it/s] Iteration: 31% 1491/4796 [03:01&lt;06:41, 8.24it/s] Iteration: 31% 1492/4796 [03:01&lt;06:41, 8.23it/s] Iteration: 31% 1493/4796 [03:02&lt;06:48, 8.08it/s] Iteration: 31% 1494/4796 [03:02&lt;06:45, 8.14it/s] Iteration: 31% 1495/4796 [03:02&lt;06:44, 8.16it/s] Iteration: 31% 1496/4796 [03:02&lt;06:44, 8.16it/s] Iteration: 31% 1497/4796 [03:02&lt;06:43, 8.17it/s] Iteration: 31% 1498/4796 [03:02&lt;06:46, 8.11it/s] Iteration: 31% 1499/4796 [03:02&lt;06:44, 8.16it/s] Iteration: 31% 1500/4796 [03:02&lt;06:43, 8.18it/s] Iteration: 31% 1501/4796 [03:03&lt;06:42, 8.19it/s] Iteration: 31% 1502/4796 [03:03&lt;06:41, 8.21it/s] Iteration: 31% 1503/4796 [03:03&lt;06:43, 8.16it/s] Iteration: 31% 1504/4796 [03:03&lt;06:42, 8.18it/s] Iteration: 31% 1505/4796 [03:03&lt;06:40, 8.22it/s] Iteration: 31% 1506/4796 [03:03&lt;06:35, 8.33it/s] Iteration: 31% 1507/4796 [03:03&lt;06:42, 8.18it/s] Iteration: 31% 1508/4796 [03:03&lt;06:40, 8.21it/s] Iteration: 31% 1509/4796 [03:04&lt;06:40, 8.21it/s] Iteration: 31% 1510/4796 [03:04&lt;06:41, 8.18it/s] Iteration: 32% 1511/4796 [03:04&lt;06:48, 8.05it/s] Iteration: 32% 1512/4796 [03:04&lt;06:45, 8.09it/s] Iteration: 32% 1513/4796 [03:04&lt;06:38, 8.23it/s] Iteration: 32% 1514/4796 [03:04&lt;06:37, 8.26it/s] Iteration: 32% 1515/4796 [03:04&lt;06:37, 8.25it/s] Iteration: 32% 1516/4796 [03:04&lt;06:44, 8.12it/s] Iteration: 32% 1517/4796 [03:05&lt;06:41, 8.17it/s] Iteration: 32% 1518/4796 [03:05&lt;06:40, 8.18it/s] Iteration: 32% 1519/4796 [03:05&lt;06:41, 8.17it/s] Iteration: 32% 1520/4796 [03:05&lt;06:35, 8.29it/s] Iteration: 32% 1521/4796 [03:05&lt;06:36, 8.27it/s] Iteration: 32% 1522/4796 [03:05&lt;06:35, 8.27it/s] Iteration: 32% 1523/4796 [03:05&lt;06:37, 8.23it/s] Iteration: 32% 1524/4796 [03:05&lt;06:38, 8.21it/s] Iteration: 32% 1525/4796 [03:06&lt;06:38, 8.22it/s] Iteration: 32% 1526/4796 [03:06&lt;06:40, 8.16it/s] Iteration: 32% 1527/4796 [03:06&lt;06:41, 8.15it/s] Iteration: 32% 1528/4796 [03:06&lt;06:41, 8.13it/s] Iteration: 32% 1529/4796 [03:06&lt;06:39, 8.18it/s] Iteration: 32% 1530/4796 [03:06&lt;06:43, 8.09it/s] Iteration: 32% 1531/4796 [03:06&lt;06:36, 8.23it/s] Iteration: 32% 1532/4796 [03:06&lt;06:37, 8.20it/s] Iteration: 32% 1533/4796 [03:06&lt;06:37, 8.21it/s] Iteration: 32% 1534/4796 [03:07&lt;06:37, 8.21it/s] Iteration: 32% 1535/4796 [03:07&lt;06:43, 8.09it/s] Iteration: 32% 1536/4796 [03:07&lt;06:40, 8.14it/s] Iteration: 32% 1537/4796 [03:07&lt;06:33, 8.27it/s] Iteration: 32% 1538/4796 [03:07&lt;06:35, 8.25it/s] Iteration: 32% 1539/4796 [03:07&lt;06:38, 8.17it/s] Iteration: 32% 1540/4796 [03:07&lt;06:36, 8.21it/s] Iteration: 32% 1541/4796 [03:07&lt;06:32, 8.30it/s] Iteration: 32% 1542/4796 [03:08&lt;06:35, 8.23it/s] Iteration: 32% 1543/4796 [03:08&lt;06:35, 8.22it/s] Iteration: 32% 1544/4796 [03:08&lt;06:41, 8.09it/s] Iteration: 32% 1545/4796 [03:08&lt;06:39, 8.14it/s] Iteration: 32% 1546/4796 [03:08&lt;06:33, 8.27it/s] Iteration: 32% 1547/4796 [03:08&lt;06:34, 8.23it/s] Iteration: 32% 1548/4796 [03:08&lt;06:36, 8.20it/s] Iteration: 32% 1549/4796 [03:08&lt;06:34, 8.23it/s] Iteration: 32% 1550/4796 [03:09&lt;06:34, 8.23it/s] Iteration: 32% 1551/4796 [03:09&lt;06:35, 8.21it/s] Iteration: 32% 1552/4796 [03:09&lt;06:36, 8.18it/s] Iteration: 32% 1553/4796 [03:09&lt;06:41, 8.08it/s] Iteration: 32% 1554/4796 [03:09&lt;06:38, 8.14it/s] Iteration: 32% 1555/4796 [03:09&lt;06:37, 8.15it/s] Iteration: 32% 1556/4796 [03:09&lt;06:36, 8.17it/s] Iteration: 32% 1557/4796 [03:09&lt;06:36, 8.16it/s] Iteration: 32% 1558/4796 [03:10&lt;06:34, 8.20it/s] Iteration: 33% 1559/4796 [03:10&lt;06:38, 8.13it/s] Iteration: 33% 1560/4796 [03:10&lt;06:33, 8.22it/s] Iteration: 33% 1561/4796 [03:10&lt;06:32, 8.24it/s] Iteration: 33% 1562/4796 [03:10&lt;06:32, 8.24it/s] Iteration: 33% 1563/4796 [03:10&lt;06:38, 8.12it/s] Iteration: 33% 1564/4796 [03:10&lt;06:31, 8.26it/s] Iteration: 33% 1565/4796 [03:10&lt;06:33, 8.22it/s] Iteration: 33% 1566/4796 [03:11&lt;06:28, 8.31it/s] Iteration: 33% 1567/4796 [03:11&lt;06:31, 8.26it/s] Iteration: 33% 1568/4796 [03:11&lt;06:39, 8.07it/s] Iteration: 33% 1569/4796 [03:11&lt;06:36, 8.13it/s] Iteration: 33% 1570/4796 [03:11&lt;06:34, 8.19it/s] Iteration: 33% 1571/4796 [03:11&lt;06:32, 8.21it/s] Iteration: 33% 1572/4796 [03:11&lt;06:38, 8.09it/s] Iteration: 33% 1573/4796 [03:11&lt;06:31, 8.23it/s] Iteration: 33% 1574/4796 [03:12&lt;06:31, 8.24it/s] Iteration: 33% 1575/4796 [03:12&lt;06:31, 8.23it/s] Iteration: 33% 1576/4796 [03:12&lt;06:31, 8.22it/s] Iteration: 33% 1577/4796 [03:12&lt;06:39, 8.05it/s] Iteration: 33% 1578/4796 [03:12&lt;06:35, 8.14it/s] Iteration: 33% 1579/4796 [03:12&lt;06:34, 8.15it/s] Iteration: 33% 1580/4796 [03:12&lt;06:33, 8.17it/s] Iteration: 33% 1581/4796 [03:12&lt;06:28, 8.28it/s] Iteration: 33% 1582/4796 [03:12&lt;06:29, 8.25it/s] Iteration: 33% 1583/4796 [03:13&lt;06:24, 8.37it/s] Iteration: 33% 1584/4796 [03:13&lt;06:26, 8.31it/s] Iteration: 33% 1585/4796 [03:13&lt;06:29, 8.24it/s] Iteration: 33% 1586/4796 [03:13&lt;06:30, 8.22it/s] Iteration: 33% 1587/4796 [03:13&lt;06:35, 8.12it/s] Iteration: 33% 1588/4796 [03:13&lt;06:32, 8.16it/s] Iteration: 33% 1589/4796 [03:13&lt;06:32, 8.18it/s] Iteration: 33% 1590/4796 [03:13&lt;06:26, 8.30it/s] Iteration: 33% 1591/4796 [03:14&lt;06:26, 8.29it/s] Iteration: 33% 1592/4796 [03:14&lt;06:30, 8.20it/s] Iteration: 33% 1593/4796 [03:14&lt;06:33, 8.14it/s] Iteration: 33% 1594/4796 [03:14&lt;06:30, 8.19it/s] Iteration: 33% 1595/4796 [03:14&lt;06:30, 8.20it/s] Iteration: 33% 1596/4796 [03:14&lt;06:30, 8.19it/s] Iteration: 33% 1597/4796 [03:14&lt;06:29, 8.21it/s] Iteration: 33% 1598/4796 [03:14&lt;06:30, 8.19it/s] Iteration: 33% 1599/4796 [03:15&lt;06:30, 8.18it/s] Iteration: 33% 1600/4796 [03:15&lt;06:29, 8.20it/s] Iteration: 33% 1601/4796 [03:15&lt;06:31, 8.16it/s] Iteration: 33% 1602/4796 [03:15&lt;06:31, 8.17it/s] Iteration: 33% 1603/4796 [03:15&lt;06:33, 8.11it/s] Iteration: 33% 1604/4796 [03:15&lt;06:33, 8.11it/s] Iteration: 33% 1605/4796 [03:15&lt;06:37, 8.04it/s] Iteration: 33% 1606/4796 [03:15&lt;06:35, 8.07it/s] Iteration: 34% 1607/4796 [03:16&lt;06:32, 8.13it/s] Iteration: 34% 1608/4796 [03:16&lt;06:31, 8.14it/s] Iteration: 34% 1609/4796 [03:16&lt;06:35, 8.05it/s] Iteration: 34% 1610/4796 [03:16&lt;06:32, 8.12it/s] Iteration: 34% 1611/4796 [03:16&lt;06:32, 8.12it/s] Iteration: 34% 1612/4796 [03:16&lt;06:30, 8.16it/s] Iteration: 34% 1613/4796 [03:16&lt;06:25, 8.26it/s] Iteration: 34% 1614/4796 [03:16&lt;06:33, 8.09it/s] Iteration: 34% 1615/4796 [03:17&lt;06:31, 8.13it/s] Iteration: 34% 1616/4796 [03:17&lt;06:29, 8.15it/s] Iteration: 34% 1617/4796 [03:17&lt;06:28, 8.17it/s] Iteration: 34% 1618/4796 [03:17&lt;06:27, 8.21it/s] Iteration: 34% 1619/4796 [03:17&lt;06:26, 8.23it/s] Iteration: 34% 1620/4796 [03:17&lt;06:26, 8.22it/s] Iteration: 34% 1621/4796 [03:17&lt;06:22, 8.29it/s] Iteration: 34% 1622/4796 [03:17&lt;06:18, 8.38it/s] Iteration: 34% 1623/4796 [03:17&lt;06:22, 8.30it/s] Iteration: 34% 1624/4796 [03:18&lt;06:22, 8.30it/s] Iteration: 34% 1625/4796 [03:18&lt;06:18, 8.38it/s] Iteration: 34% 1626/4796 [03:18&lt;06:15, 8.44it/s] Iteration: 34% 1627/4796 [03:18&lt;06:18, 8.38it/s] Iteration: 34% 1628/4796 [03:18&lt;06:21, 8.30it/s] Iteration: 34% 1629/4796 [03:18&lt;06:22, 8.27it/s] Iteration: 34% 1630/4796 [03:18&lt;06:24, 8.24it/s] Iteration: 34% 1631/4796 [03:18&lt;06:19, 8.33it/s] Iteration: 34% 1632/4796 [03:19&lt;06:21, 8.29it/s] Iteration: 34% 1633/4796 [03:19&lt;06:24, 8.23it/s] Iteration: 34% 1634/4796 [03:19&lt;06:24, 8.23it/s] Iteration: 34% 1635/4796 [03:19&lt;06:25, 8.21it/s] Iteration: 34% 1636/4796 [03:19&lt;06:23, 8.24it/s] Iteration: 34% 1637/4796 [03:19&lt;06:24, 8.22it/s] Iteration: 34% 1638/4796 [03:19&lt;06:31, 8.06it/s] Iteration: 34% 1639/4796 [03:19&lt;06:25, 8.19it/s] Iteration: 34% 1640/4796 [03:20&lt;06:20, 8.30it/s] Iteration: 34% 1641/4796 [03:20&lt;06:23, 8.23it/s] Iteration: 34% 1642/4796 [03:20&lt;06:22, 8.24it/s] Iteration: 34% 1643/4796 [03:20&lt;06:23, 8.23it/s] Iteration: 34% 1644/4796 [03:20&lt;06:25, 8.18it/s] Iteration: 34% 1645/4796 [03:20&lt;06:20, 8.29it/s] Iteration: 34% 1646/4796 [03:20&lt;06:15, 8.38it/s] Iteration: 34% 1647/4796 [03:20&lt;06:17, 8.34it/s] Iteration: 34% 1648/4796 [03:21&lt;06:24, 8.18it/s] Iteration: 34% 1649/4796 [03:21&lt;06:19, 8.30it/s] Iteration: 34% 1650/4796 [03:21&lt;06:21, 8.25it/s] Iteration: 34% 1651/4796 [03:21&lt;06:21, 8.25it/s] Iteration: 34% 1652/4796 [03:21&lt;06:17, 8.32it/s] Iteration: 34% 1653/4796 [03:21&lt;06:21, 8.24it/s] Iteration: 34% 1654/4796 [03:21&lt;06:19, 8.29it/s] Iteration: 35% 1655/4796 [03:21&lt;06:17, 8.32it/s] Iteration: 35% 1656/4796 [03:21&lt;06:16, 8.34it/s] Iteration: 35% 1657/4796 [03:22&lt;06:17, 8.31it/s] Iteration: 35% 1658/4796 [03:22&lt;06:14, 8.39it/s] Iteration: 35% 1659/4796 [03:22&lt;06:27, 8.10it/s] Iteration: 35% 1660/4796 [03:22&lt;06:25, 8.14it/s] Iteration: 35% 1661/4796 [03:22&lt;06:29, 8.05it/s] Iteration: 35% 1662/4796 [03:22&lt;06:26, 8.11it/s] Iteration: 35% 1663/4796 [03:22&lt;06:24, 8.14it/s] Iteration: 35% 1664/4796 [03:22&lt;06:26, 8.11it/s] Iteration: 35% 1665/4796 [03:23&lt;06:25, 8.12it/s] Iteration: 35% 1666/4796 [03:23&lt;06:23, 8.16it/s] Iteration: 35% 1667/4796 [03:23&lt;06:22, 8.18it/s] Iteration: 35% 1668/4796 [03:23&lt;06:29, 8.04it/s] Iteration: 35% 1669/4796 [03:23&lt;06:21, 8.19it/s] Iteration: 35% 1670/4796 [03:23&lt;06:21, 8.20it/s] Iteration: 35% 1671/4796 [03:23&lt;06:16, 8.30it/s] Iteration: 35% 1672/4796 [03:23&lt;06:24, 8.12it/s] Iteration: 35% 1673/4796 [03:24&lt;06:22, 8.16it/s] Iteration: 35% 1674/4796 [03:24&lt;06:23, 8.15it/s] Iteration: 35% 1675/4796 [03:24&lt;06:22, 8.17it/s] Iteration: 35% 1676/4796 [03:24&lt;06:21, 8.18it/s] Iteration: 35% 1677/4796 [03:24&lt;06:21, 8.18it/s] Iteration: 35% 1678/4796 [03:24&lt;06:19, 8.21it/s] Iteration: 35% 1679/4796 [03:24&lt;06:16, 8.29it/s] Iteration: 35% 1680/4796 [03:24&lt;06:17, 8.26it/s] Iteration: 35% 1681/4796 [03:25&lt;06:17, 8.24it/s] Iteration: 35% 1682/4796 [03:25&lt;06:23, 8.11it/s] Iteration: 35% 1683/4796 [03:25&lt;06:18, 8.23it/s] Iteration: 35% 1684/4796 [03:25&lt;06:18, 8.22it/s] Iteration: 35% 1685/4796 [03:25&lt;06:18, 8.21it/s] Iteration: 35% 1686/4796 [03:25&lt;06:20, 8.18it/s] Iteration: 35% 1687/4796 [03:25&lt;06:22, 8.13it/s] Iteration: 35% 1688/4796 [03:25&lt;06:21, 8.15it/s] Iteration: 35% 1689/4796 [03:26&lt;06:19, 8.18it/s] Iteration: 35% 1690/4796 [03:26&lt;06:18, 8.20it/s] Iteration: 35% 1691/4796 [03:26&lt;06:28, 8.00it/s] Iteration: 35% 1692/4796 [03:26&lt;06:25, 8.06it/s] Iteration: 35% 1693/4796 [03:26&lt;06:22, 8.11it/s] Iteration: 35% 1694/4796 [03:26&lt;06:20, 8.16it/s] Iteration: 35% 1695/4796 [03:26&lt;06:18, 8.19it/s] Iteration: 35% 1696/4796 [03:26&lt;06:13, 8.30it/s] Iteration: 35% 1697/4796 [03:26&lt;06:09, 8.39it/s] Iteration: 35% 1698/4796 [03:27&lt;06:10, 8.36it/s] Iteration: 35% 1699/4796 [03:27&lt;06:12, 8.31it/s] Iteration: 35% 1700/4796 [03:27&lt;06:13, 8.29it/s] Iteration: 35% 1701/4796 [03:27&lt;06:25, 8.02it/s] Iteration: 35% 1702/4796 [03:27&lt;06:22, 8.09it/s] Iteration: 36% 1703/4796 [03:27&lt;06:15, 8.23it/s] Iteration: 36% 1704/4796 [03:27&lt;06:16, 8.21it/s] Iteration: 36% 1705/4796 [03:27&lt;06:19, 8.15it/s] Iteration: 36% 1706/4796 [03:28&lt;06:17, 8.18it/s] Iteration: 36% 1707/4796 [03:28&lt;06:16, 8.20it/s] Iteration: 36% 1708/4796 [03:28&lt;06:16, 8.21it/s] Iteration: 36% 1709/4796 [03:28&lt;06:17, 8.18it/s] Iteration: 36% 1710/4796 [03:28&lt;06:17, 8.17it/s] Iteration: 36% 1711/4796 [03:28&lt;06:18, 8.14it/s] Iteration: 36% 1712/4796 [03:28&lt;06:17, 8.18it/s] Iteration: 36% 1713/4796 [03:28&lt;06:11, 8.31it/s] Iteration: 36% 1714/4796 [03:29&lt;06:11, 8.29it/s] Iteration: 36% 1715/4796 [03:29&lt;06:21, 8.08it/s] Iteration: 36% 1716/4796 [03:29&lt;06:19, 8.11it/s] Iteration: 36% 1717/4796 [03:29&lt;06:18, 8.14it/s] Iteration: 36% 1718/4796 [03:29&lt;06:18, 8.14it/s] Iteration: 36% 1719/4796 [03:29&lt;06:17, 8.16it/s] Iteration: 36% 1720/4796 [03:29&lt;06:16, 8.16it/s] Iteration: 36% 1721/4796 [03:29&lt;06:10, 8.29it/s] Iteration: 36% 1722/4796 [03:30&lt;06:11, 8.27it/s] Iteration: 36% 1723/4796 [03:30&lt;06:15, 8.18it/s] Iteration: 36% 1724/4796 [03:30&lt;06:13, 8.23it/s] Iteration: 36% 1725/4796 [03:30&lt;06:12, 8.24it/s] Iteration: 36% 1726/4796 [03:30&lt;06:19, 8.10it/s] Iteration: 36% 1727/4796 [03:30&lt;06:17, 8.14it/s] Iteration: 36% 1728/4796 [03:30&lt;06:16, 8.15it/s] Iteration: 36% 1729/4796 [03:30&lt;06:14, 8.18it/s] Iteration: 36% 1730/4796 [03:31&lt;06:15, 8.16it/s] Iteration: 36% 1731/4796 [03:31&lt;06:10, 8.28it/s] Iteration: 36% 1732/4796 [03:31&lt;06:10, 8.28it/s] Iteration: 36% 1733/4796 [03:31&lt;06:07, 8.34it/s] Iteration: 36% 1734/4796 [03:31&lt;06:16, 8.13it/s] Iteration: 36% 1735/4796 [03:31&lt;06:09, 8.27it/s] Iteration: 36% 1736/4796 [03:31&lt;06:11, 8.24it/s] Iteration: 36% 1737/4796 [03:31&lt;06:11, 8.23it/s] Iteration: 36% 1738/4796 [03:31&lt;06:11, 8.23it/s] Iteration: 36% 1739/4796 [03:32&lt;06:16, 8.11it/s] Iteration: 36% 1740/4796 [03:32&lt;06:14, 8.17it/s] Iteration: 36% 1741/4796 [03:32&lt;06:13, 8.19it/s] Iteration: 36% 1742/4796 [03:32&lt;06:13, 8.18it/s] Iteration: 36% 1743/4796 [03:32&lt;06:18, 8.06it/s] Iteration: 36% 1744/4796 [03:32&lt;06:16, 8.11it/s] Iteration: 36% 1745/4796 [03:32&lt;06:11, 8.21it/s] Iteration: 36% 1746/4796 [03:32&lt;06:11, 8.21it/s] Iteration: 36% 1747/4796 [03:33&lt;06:07, 8.30it/s] Iteration: 36% 1748/4796 [03:33&lt;06:14, 8.14it/s] Iteration: 36% 1749/4796 [03:33&lt;06:13, 8.17it/s] Iteration: 36% 1750/4796 [03:33&lt;06:08, 8.27it/s] Iteration: 37% 1751/4796 [03:33&lt;06:08, 8.27it/s] Iteration: 37% 1752/4796 [03:33&lt;06:03, 8.36it/s] Iteration: 37% 1753/4796 [03:33&lt;06:11, 8.19it/s] Iteration: 37% 1754/4796 [03:33&lt;06:10, 8.21it/s] Iteration: 37% 1755/4796 [03:34&lt;06:11, 8.19it/s] Iteration: 37% 1756/4796 [03:34&lt;06:09, 8.22it/s] Iteration: 37% 1757/4796 [03:34&lt;06:09, 8.23it/s] Iteration: 37% 1758/4796 [03:34&lt;06:15, 8.09it/s] Iteration: 37% 1759/4796 [03:34&lt;06:09, 8.21it/s] Iteration: 37% 1760/4796 [03:34&lt;06:05, 8.32it/s] Iteration: 37% 1761/4796 [03:34&lt;06:06, 8.28it/s] Iteration: 37% 1762/4796 [03:34&lt;06:12, 8.14it/s] Iteration: 37% 1763/4796 [03:35&lt;06:06, 8.27it/s] Iteration: 37% 1764/4796 [03:35&lt;06:07, 8.25it/s] Iteration: 37% 1765/4796 [03:35&lt;06:04, 8.31it/s] Iteration: 37% 1766/4796 [03:35&lt;06:01, 8.38it/s] Iteration: 37% 1767/4796 [03:35&lt;06:03, 8.34it/s] Iteration: 37% 1768/4796 [03:35&lt;06:09, 8.19it/s] Iteration: 37% 1769/4796 [03:35&lt;06:03, 8.33it/s] Iteration: 37% 1770/4796 [03:35&lt;06:05, 8.29it/s] Iteration: 37% 1771/4796 [03:35&lt;06:01, 8.37it/s] Iteration: 37% 1772/4796 [03:36&lt;06:02, 8.33it/s] Iteration: 37% 1773/4796 [03:36&lt;06:05, 8.27it/s] Iteration: 37% 1774/4796 [03:36&lt;06:05, 8.27it/s] Iteration: 37% 1775/4796 [03:36&lt;06:02, 8.33it/s] Iteration: 37% 1776/4796 [03:36&lt;06:08, 8.20it/s] Iteration: 37% 1777/4796 [03:36&lt;06:04, 8.29it/s] Iteration: 37% 1778/4796 [03:36&lt;06:13, 8.07it/s] Iteration: 37% 1779/4796 [03:36&lt;06:12, 8.09it/s] Iteration: 37% 1780/4796 [03:37&lt;06:11, 8.12it/s] Iteration: 37% 1781/4796 [03:37&lt;06:05, 8.25it/s] Iteration: 37% 1782/4796 [03:37&lt;06:12, 8.09it/s] Iteration: 37% 1783/4796 [03:37&lt;06:10, 8.14it/s] Iteration: 37% 1784/4796 [03:37&lt;06:11, 8.11it/s] Iteration: 37% 1785/4796 [03:37&lt;06:10, 8.14it/s] Iteration: 37% 1786/4796 [03:37&lt;06:04, 8.25it/s] Iteration: 37% 1787/4796 [03:37&lt;06:10, 8.12it/s] Iteration: 37% 1788/4796 [03:38&lt;06:03, 8.28it/s] Iteration: 37% 1789/4796 [03:38&lt;06:04, 8.25it/s] Iteration: 37% 1790/4796 [03:38&lt;06:04, 8.25it/s] Iteration: 37% 1791/4796 [03:38&lt;06:01, 8.32it/s] Iteration: 37% 1792/4796 [03:38&lt;06:03, 8.27it/s] Iteration: 37% 1793/4796 [03:38&lt;06:03, 8.25it/s] Iteration: 37% 1794/4796 [03:38&lt;06:04, 8.24it/s] Iteration: 37% 1795/4796 [03:38&lt;06:05, 8.22it/s] Iteration: 37% 1796/4796 [03:39&lt;05:59, 8.34it/s] Iteration: 37% 1797/4796 [03:39&lt;06:07, 8.17it/s] Iteration: 37% 1798/4796 [03:39&lt;06:00, 8.31it/s] Iteration: 38% 1799/4796 [03:39&lt;05:58, 8.36it/s] Iteration: 38% 1800/4796 [03:39&lt;06:01, 8.29it/s] Iteration: 38% 1801/4796 [03:39&lt;06:09, 8.11it/s] Iteration: 38% 1802/4796 [03:39&lt;06:03, 8.24it/s] Iteration: 38% 1803/4796 [03:39&lt;06:02, 8.25it/s] Iteration: 38% 1804/4796 [03:40&lt;06:03, 8.24it/s] Iteration: 38% 1805/4796 [03:40&lt;06:02, 8.24it/s] Iteration: 38% 1806/4796 [03:40&lt;06:02, 8.24it/s] Iteration: 38% 1807/4796 [03:40&lt;06:03, 8.22it/s] Iteration: 38% 1808/4796 [03:40&lt;06:03, 8.22it/s] Iteration: 38% 1809/4796 [03:40&lt;06:10, 8.07it/s] Iteration: 38% 1810/4796 [03:40&lt;06:05, 8.17it/s] Iteration: 38% 1811/4796 [03:40&lt;06:04, 8.19it/s] Iteration: 38% 1812/4796 [03:40&lt;06:03, 8.21it/s] Iteration: 38% 1813/4796 [03:41&lt;06:02, 8.22it/s] Iteration: 38% 1814/4796 [03:41&lt;06:03, 8.20it/s] Iteration: 38% 1815/4796 [03:41&lt;06:02, 8.22it/s] Iteration: 38% 1816/4796 [03:41&lt;06:07, 8.12it/s] Iteration: 38% 1817/4796 [03:41&lt;06:01, 8.25it/s] Iteration: 38% 1818/4796 [03:41&lt;06:02, 8.21it/s] Iteration: 38% 1819/4796 [03:41&lt;06:02, 8.22it/s] Iteration: 38% 1820/4796 [03:41&lt;05:57, 8.33it/s] Iteration: 38% 1821/4796 [03:42&lt;06:03, 8.19it/s] Iteration: 38% 1822/4796 [03:42&lt;06:02, 8.21it/s] Iteration: 38% 1823/4796 [03:42&lt;05:58, 8.29it/s] Iteration: 38% 1824/4796 [03:42&lt;05:53, 8.40it/s] Iteration: 38% 1825/4796 [03:42&lt;05:56, 8.34it/s] Iteration: 38% 1826/4796 [03:42&lt;06:05, 8.13it/s] Iteration: 38% 1827/4796 [03:42&lt;05:58, 8.27it/s] Iteration: 38% 1828/4796 [03:42&lt;05:59, 8.25it/s] Iteration: 38% 1829/4796 [03:43&lt;05:59, 8.26it/s] Iteration: 38% 1830/4796 [03:43&lt;05:58, 8.28it/s] Iteration: 38% 1831/4796 [03:43&lt;06:00, 8.22it/s] Iteration: 38% 1832/4796 [03:43&lt;05:59, 8.24it/s] Iteration: 38% 1833/4796 [03:43&lt;05:59, 8.23it/s] Iteration: 38% 1834/4796 [03:43&lt;06:01, 8.20it/s] Iteration: 38% 1835/4796 [03:43&lt;06:05, 8.09it/s] Iteration: 38% 1836/4796 [03:43&lt;06:03, 8.13it/s] Iteration: 38% 1837/4796 [03:44&lt;06:01, 8.19it/s] Iteration: 38% 1838/4796 [03:44&lt;06:01, 8.19it/s] Iteration: 38% 1839/4796 [03:44&lt;06:06, 8.08it/s] Iteration: 38% 1840/4796 [03:44&lt;06:04, 8.11it/s] Iteration: 38% 1841/4796 [03:44&lt;06:04, 8.10it/s] Iteration: 38% 1842/4796 [03:44&lt;05:58, 8.24it/s] Iteration: 38% 1843/4796 [03:44&lt;05:58, 8.25it/s] Iteration: 38% 1844/4796 [03:44&lt;06:03, 8.12it/s] Iteration: 38% 1845/4796 [03:45&lt;06:04, 8.09it/s] Iteration: 38% 1846/4796 [03:45&lt;06:00, 8.17it/s] Iteration: 39% 1847/4796 [03:45&lt;05:59, 8.19it/s] Iteration: 39% 1848/4796 [03:45&lt;06:04, 8.08it/s] Iteration: 39% 1849/4796 [03:45&lt;06:02, 8.12it/s] Iteration: 39% 1850/4796 [03:45&lt;05:56, 8.25it/s] Iteration: 39% 1851/4796 [03:45&lt;05:57, 8.23it/s] Iteration: 39% 1852/4796 [03:45&lt;05:58, 8.22it/s] Iteration: 39% 1853/4796 [03:45&lt;06:04, 8.08it/s] Iteration: 39% 1854/4796 [03:46&lt;06:01, 8.15it/s] Iteration: 39% 1855/4796 [03:46&lt;06:00, 8.16it/s] Iteration: 39% 1856/4796 [03:46&lt;05:59, 8.17it/s] Iteration: 39% 1857/4796 [03:46&lt;05:54, 8.28it/s] Iteration: 39% 1858/4796 [03:46&lt;05:51, 8.36it/s] Iteration: 39% 1859/4796 [03:46&lt;05:57, 8.22it/s] Iteration: 39% 1860/4796 [03:46&lt;05:56, 8.24it/s] Iteration: 39% 1861/4796 [03:46&lt;05:57, 8.22it/s] Iteration: 39% 1862/4796 [03:47&lt;05:55, 8.25it/s] Iteration: 39% 1863/4796 [03:47&lt;05:58, 8.18it/s] Iteration: 39% 1864/4796 [03:47&lt;05:53, 8.30it/s] Iteration: 39% 1865/4796 [03:47&lt;05:57, 8.21it/s] Iteration: 39% 1866/4796 [03:47&lt;05:55, 8.24it/s] Iteration: 39% 1867/4796 [03:47&lt;05:54, 8.26it/s] Iteration: 39% 1868/4796 [03:47&lt;05:56, 8.21it/s] Iteration: 39% 1869/4796 [03:47&lt;05:56, 8.21it/s] Iteration: 39% 1870/4796 [03:48&lt;05:53, 8.28it/s] Iteration: 39% 1871/4796 [03:48&lt;05:49, 8.36it/s] Iteration: 39% 1872/4796 [03:48&lt;05:52, 8.29it/s] Iteration: 39% 1873/4796 [03:48&lt;05:52, 8.28it/s] Iteration: 39% 1874/4796 [03:48&lt;05:53, 8.26it/s] Iteration: 39% 1875/4796 [03:48&lt;05:53, 8.26it/s] Iteration: 39% 1876/4796 [03:48&lt;05:59, 8.11it/s] Iteration: 39% 1877/4796 [03:48&lt;06:03, 8.02it/s] Iteration: 39% 1878/4796 [03:49&lt;06:01, 8.07it/s] Iteration: 39% 1879/4796 [03:49&lt;05:55, 8.19it/s] Iteration: 39% 1880/4796 [03:49&lt;05:55, 8.21it/s] Iteration: 39% 1881/4796 [03:49&lt;05:54, 8.23it/s] Iteration: 39% 1882/4796 [03:49&lt;05:59, 8.10it/s] Iteration: 39% 1883/4796 [03:49&lt;05:57, 8.14it/s] Iteration: 39% 1884/4796 [03:49&lt;05:57, 8.14it/s] Iteration: 39% 1885/4796 [03:49&lt;05:56, 8.16it/s] Iteration: 39% 1886/4796 [03:50&lt;06:02, 8.03it/s] Iteration: 39% 1887/4796 [03:50&lt;05:59, 8.09it/s] Iteration: 39% 1888/4796 [03:50&lt;05:58, 8.11it/s] Iteration: 39% 1889/4796 [03:50&lt;05:56, 8.16it/s] Iteration: 39% 1890/4796 [03:50&lt;05:55, 8.16it/s] Iteration: 39% 1891/4796 [03:50&lt;05:58, 8.11it/s] Iteration: 39% 1892/4796 [03:50&lt;05:55, 8.17it/s] Iteration: 39% 1893/4796 [03:50&lt;05:52, 8.23it/s] Iteration: 39% 1894/4796 [03:50&lt;05:53, 8.22it/s] Iteration: 40% 1895/4796 [03:51&lt;05:59, 8.08it/s] Iteration: 40% 1896/4796 [03:51&lt;05:55, 8.15it/s] Iteration: 40% 1897/4796 [03:51&lt;05:56, 8.14it/s] Iteration: 40% 1898/4796 [03:51&lt;05:53, 8.19it/s] Iteration: 40% 1899/4796 [03:51&lt;05:55, 8.16it/s] Iteration: 40% 1900/4796 [03:51&lt;06:00, 8.03it/s] Iteration: 40% 1901/4796 [03:51&lt;05:57, 8.09it/s] Iteration: 40% 1902/4796 [03:51&lt;05:55, 8.14it/s] Iteration: 40% 1903/4796 [03:52&lt;05:54, 8.17it/s] Iteration: 40% 1904/4796 [03:52&lt;05:54, 8.17it/s] Iteration: 40% 1905/4796 [03:52&lt;05:53, 8.18it/s] Iteration: 40% 1906/4796 [03:52&lt;05:52, 8.20it/s] Iteration: 40% 1907/4796 [03:52&lt;05:47, 8.31it/s]{&#39;loss&#39;: 0.06125, &#39;learning_rate&#39;: 1.0036141228801779e-05, &#39;epoch&#39;: 2.397831526271893, &#39;step&#39;: 11500} Iteration: 40% 1908/4796 [03:52&lt;05:52, 8.19it/s] Iteration: 40% 1909/4796 [03:52&lt;05:53, 8.17it/s] Iteration: 40% 1910/4796 [03:52&lt;05:51, 8.20it/s] Iteration: 40% 1911/4796 [03:53&lt;05:47, 8.31it/s] Iteration: 40% 1912/4796 [03:53&lt;05:44, 8.38it/s] Iteration: 40% 1913/4796 [03:53&lt;05:46, 8.32it/s] Iteration: 40% 1914/4796 [03:53&lt;05:52, 8.17it/s] Iteration: 40% 1915/4796 [03:53&lt;05:46, 8.30it/s] Iteration: 40% 1917/4796 [03:53&lt;05:33, 8.63it/s] Iteration: 40% 1918/4796 [03:53&lt;05:39, 8.49it/s] Iteration: 40% 1919/4796 [03:54&lt;05:42, 8.40it/s] Iteration: 40% 1920/4796 [03:54&lt;05:44, 8.36it/s] Iteration: 40% 1921/4796 [03:54&lt;05:45, 8.31it/s] Iteration: 40% 1922/4796 [03:54&lt;05:47, 8.27it/s] Iteration: 40% 1923/4796 [03:54&lt;05:49, 8.23it/s] Iteration: 40% 1924/4796 [03:54&lt;05:49, 8.22it/s] Iteration: 40% 1925/4796 [03:54&lt;05:49, 8.20it/s] Iteration: 40% 1926/4796 [03:54&lt;05:50, 8.18it/s] Iteration: 40% 1927/4796 [03:54&lt;05:50, 8.19it/s] Iteration: 40% 1928/4796 [03:55&lt;05:45, 8.30it/s] Iteration: 40% 1929/4796 [03:55&lt;05:46, 8.29it/s] Iteration: 40% 1930/4796 [03:55&lt;05:49, 8.21it/s] Iteration: 40% 1931/4796 [03:55&lt;05:44, 8.31it/s] Iteration: 40% 1932/4796 [03:55&lt;05:47, 8.24it/s] Iteration: 40% 1933/4796 [03:55&lt;05:45, 8.29it/s] Iteration: 40% 1934/4796 [03:55&lt;05:46, 8.26it/s] Iteration: 40% 1935/4796 [03:55&lt;05:53, 8.10it/s] Iteration: 40% 1936/4796 [03:56&lt;05:54, 8.06it/s] Iteration: 40% 1937/4796 [03:56&lt;05:55, 8.05it/s] Iteration: 40% 1938/4796 [03:56&lt;05:53, 8.07it/s] Iteration: 40% 1939/4796 [03:56&lt;05:48, 8.19it/s] Iteration: 40% 1940/4796 [03:56&lt;05:55, 8.04it/s] Iteration: 40% 1941/4796 [03:56&lt;05:52, 8.10it/s] Iteration: 40% 1942/4796 [03:56&lt;05:51, 8.13it/s] Iteration: 41% 1943/4796 [03:56&lt;05:46, 8.24it/s] Iteration: 41% 1944/4796 [03:57&lt;05:46, 8.23it/s] Iteration: 41% 1945/4796 [03:57&lt;05:46, 8.23it/s] Iteration: 41% 1946/4796 [03:57&lt;05:46, 8.23it/s] Iteration: 41% 1947/4796 [03:57&lt;05:43, 8.30it/s] Iteration: 41% 1948/4796 [03:57&lt;05:46, 8.23it/s] Iteration: 41% 1949/4796 [03:57&lt;05:51, 8.10it/s] Iteration: 41% 1950/4796 [03:57&lt;05:49, 8.14it/s] Iteration: 41% 1951/4796 [03:57&lt;05:54, 8.03it/s] Iteration: 41% 1952/4796 [03:58&lt;05:52, 8.07it/s] Iteration: 41% 1953/4796 [03:58&lt;05:57, 7.96it/s] Iteration: 41% 1954/4796 [03:58&lt;05:54, 8.01it/s] Iteration: 41% 1955/4796 [03:58&lt;05:50, 8.11it/s] Iteration: 41% 1956/4796 [03:58&lt;05:49, 8.13it/s] Iteration: 41% 1957/4796 [03:58&lt;05:45, 8.23it/s] Iteration: 41% 1958/4796 [03:58&lt;05:53, 8.03it/s] Iteration: 41% 1959/4796 [03:58&lt;05:47, 8.15it/s] Iteration: 41% 1960/4796 [03:59&lt;05:43, 8.26it/s] Iteration: 41% 1961/4796 [03:59&lt;05:45, 8.21it/s] Iteration: 41% 1962/4796 [03:59&lt;05:45, 8.20it/s] Iteration: 41% 1963/4796 [03:59&lt;05:50, 8.09it/s] Iteration: 41% 1964/4796 [03:59&lt;05:47, 8.14it/s] Iteration: 41% 1965/4796 [03:59&lt;05:47, 8.15it/s] Iteration: 41% 1966/4796 [03:59&lt;05:47, 8.14it/s] Iteration: 41% 1967/4796 [03:59&lt;05:42, 8.27it/s] Iteration: 41% 1968/4796 [04:00&lt;05:43, 8.24it/s] Iteration: 41% 1969/4796 [04:00&lt;05:41, 8.28it/s] Iteration: 41% 1970/4796 [04:00&lt;05:42, 8.26it/s] Iteration: 41% 1971/4796 [04:00&lt;05:42, 8.24it/s] Iteration: 41% 1972/4796 [04:00&lt;05:49, 8.09it/s] Iteration: 41% 1973/4796 [04:00&lt;05:46, 8.14it/s] Iteration: 41% 1974/4796 [04:00&lt;05:48, 8.10it/s] Iteration: 41% 1975/4796 [04:00&lt;05:42, 8.24it/s] Iteration: 41% 1976/4796 [04:00&lt;05:38, 8.33it/s] Iteration: 41% 1977/4796 [04:01&lt;05:41, 8.25it/s] Iteration: 41% 1978/4796 [04:01&lt;05:42, 8.24it/s] Iteration: 41% 1979/4796 [04:01&lt;05:40, 8.28it/s] Iteration: 41% 1980/4796 [04:01&lt;05:41, 8.24it/s] Iteration: 41% 1981/4796 [04:01&lt;05:42, 8.23it/s] Iteration: 41% 1982/4796 [04:01&lt;05:38, 8.30it/s] Iteration: 41% 1983/4796 [04:01&lt;05:44, 8.17it/s] Iteration: 41% 1984/4796 [04:01&lt;05:41, 8.22it/s] Iteration: 41% 1985/4796 [04:02&lt;05:43, 8.18it/s] Iteration: 41% 1986/4796 [04:02&lt;05:43, 8.18it/s] Iteration: 41% 1987/4796 [04:02&lt;05:47, 8.08it/s] Iteration: 41% 1988/4796 [04:02&lt;05:46, 8.10it/s] Iteration: 41% 1989/4796 [04:02&lt;05:45, 8.13it/s] Iteration: 41% 1990/4796 [04:02&lt;05:44, 8.14it/s] Iteration: 42% 1991/4796 [04:02&lt;05:50, 8.01it/s] Iteration: 42% 1992/4796 [04:02&lt;05:50, 8.01it/s] Iteration: 42% 1993/4796 [04:03&lt;05:44, 8.13it/s] Iteration: 42% 1994/4796 [04:03&lt;05:39, 8.26it/s] Iteration: 42% 1995/4796 [04:03&lt;05:42, 8.18it/s] Iteration: 42% 1996/4796 [04:03&lt;05:42, 8.18it/s] Iteration: 42% 1997/4796 [04:03&lt;05:42, 8.18it/s] Iteration: 42% 1998/4796 [04:03&lt;05:38, 8.26it/s] Iteration: 42% 1999/4796 [04:03&lt;05:39, 8.24it/s] Iteration: 42% 2000/4796 [04:03&lt;05:39, 8.24it/s] Iteration: 42% 2001/4796 [04:04&lt;05:43, 8.14it/s] Iteration: 42% 2002/4796 [04:04&lt;05:42, 8.16it/s] Iteration: 42% 2003/4796 [04:04&lt;05:42, 8.15it/s] Iteration: 42% 2004/4796 [04:04&lt;05:41, 8.18it/s] Iteration: 42% 2005/4796 [04:04&lt;05:41, 8.17it/s] Iteration: 42% 2006/4796 [04:04&lt;05:40, 8.21it/s] Iteration: 42% 2007/4796 [04:04&lt;05:36, 8.28it/s] Iteration: 42% 2008/4796 [04:04&lt;05:37, 8.26it/s] Iteration: 42% 2009/4796 [04:05&lt;05:38, 8.24it/s] Iteration: 42% 2010/4796 [04:05&lt;05:43, 8.12it/s] Iteration: 42% 2011/4796 [04:05&lt;05:41, 8.14it/s] Iteration: 42% 2012/4796 [04:05&lt;05:42, 8.13it/s] Iteration: 42% 2013/4796 [04:05&lt;05:37, 8.25it/s] Iteration: 42% 2014/4796 [04:05&lt;05:42, 8.12it/s] Iteration: 42% 2015/4796 [04:05&lt;05:40, 8.17it/s] Iteration: 42% 2016/4796 [04:05&lt;05:35, 8.28it/s] Iteration: 42% 2017/4796 [04:05&lt;05:33, 8.34it/s] Iteration: 42% 2018/4796 [04:06&lt;05:33, 8.33it/s] Iteration: 42% 2019/4796 [04:06&lt;05:42, 8.11it/s] Iteration: 42% 2020/4796 [04:06&lt;05:41, 8.14it/s] Iteration: 42% 2021/4796 [04:06&lt;05:41, 8.12it/s] Iteration: 42% 2022/4796 [04:06&lt;05:40, 8.16it/s] Iteration: 42% 2023/4796 [04:06&lt;05:38, 8.19it/s] Iteration: 42% 2024/4796 [04:06&lt;05:42, 8.10it/s] Iteration: 42% 2025/4796 [04:06&lt;05:41, 8.10it/s] Iteration: 42% 2026/4796 [04:07&lt;05:40, 8.13it/s] Iteration: 42% 2027/4796 [04:07&lt;05:40, 8.13it/s] Iteration: 42% 2028/4796 [04:07&lt;05:45, 8.02it/s] Iteration: 42% 2029/4796 [04:07&lt;05:43, 8.06it/s] Iteration: 42% 2030/4796 [04:07&lt;05:41, 8.10it/s] Iteration: 42% 2031/4796 [04:07&lt;05:36, 8.23it/s] Iteration: 42% 2032/4796 [04:07&lt;05:43, 8.05it/s] Iteration: 42% 2033/4796 [04:07&lt;05:41, 8.08it/s] Iteration: 42% 2034/4796 [04:08&lt;05:42, 8.07it/s] Iteration: 42% 2035/4796 [04:08&lt;05:41, 8.09it/s] Iteration: 42% 2036/4796 [04:08&lt;05:38, 8.15it/s] Iteration: 42% 2037/4796 [04:08&lt;05:37, 8.17it/s] Iteration: 42% 2038/4796 [04:08&lt;05:38, 8.14it/s] Iteration: 43% 2039/4796 [04:08&lt;05:33, 8.25it/s] Iteration: 43% 2040/4796 [04:08&lt;05:33, 8.25it/s] Iteration: 43% 2041/4796 [04:08&lt;05:41, 8.08it/s] Iteration: 43% 2042/4796 [04:09&lt;05:38, 8.13it/s] Iteration: 43% 2043/4796 [04:09&lt;05:40, 8.09it/s] Iteration: 43% 2044/4796 [04:09&lt;05:37, 8.15it/s] Iteration: 43% 2045/4796 [04:09&lt;05:36, 8.17it/s] Iteration: 43% 2046/4796 [04:09&lt;05:41, 8.05it/s] Iteration: 43% 2047/4796 [04:09&lt;05:39, 8.09it/s] Iteration: 43% 2048/4796 [04:09&lt;05:34, 8.21it/s] Iteration: 43% 2049/4796 [04:09&lt;05:34, 8.20it/s] Iteration: 43% 2050/4796 [04:10&lt;05:42, 8.02it/s] Iteration: 43% 2051/4796 [04:10&lt;05:40, 8.06it/s] Iteration: 43% 2052/4796 [04:10&lt;05:39, 8.09it/s] Iteration: 43% 2053/4796 [04:10&lt;05:38, 8.11it/s] Iteration: 43% 2054/4796 [04:10&lt;05:36, 8.15it/s] Iteration: 43% 2055/4796 [04:10&lt;05:38, 8.11it/s] Iteration: 43% 2056/4796 [04:10&lt;05:32, 8.25it/s] Iteration: 43% 2057/4796 [04:10&lt;05:34, 8.20it/s] Iteration: 43% 2058/4796 [04:11&lt;05:36, 8.14it/s] Iteration: 43% 2059/4796 [04:11&lt;05:33, 8.20it/s] Iteration: 43% 2060/4796 [04:11&lt;05:34, 8.18it/s] Iteration: 43% 2061/4796 [04:11&lt;05:33, 8.21it/s] Iteration: 43% 2062/4796 [04:11&lt;05:33, 8.21it/s] Iteration: 43% 2063/4796 [04:11&lt;05:33, 8.19it/s] Iteration: 43% 2064/4796 [04:11&lt;05:32, 8.21it/s] Iteration: 43% 2065/4796 [04:11&lt;05:31, 8.23it/s] Iteration: 43% 2066/4796 [04:12&lt;05:32, 8.21it/s] Iteration: 43% 2067/4796 [04:12&lt;05:33, 8.19it/s] Iteration: 43% 2068/4796 [04:12&lt;05:32, 8.21it/s] Iteration: 43% 2069/4796 [04:12&lt;05:39, 8.03it/s] Iteration: 43% 2070/4796 [04:12&lt;05:33, 8.18it/s] Iteration: 43% 2071/4796 [04:12&lt;05:28, 8.29it/s] Iteration: 43% 2072/4796 [04:12&lt;05:28, 8.28it/s] Iteration: 43% 2073/4796 [04:12&lt;05:30, 8.25it/s] Iteration: 43% 2074/4796 [04:12&lt;05:34, 8.13it/s] Iteration: 43% 2075/4796 [04:13&lt;05:35, 8.11it/s] Iteration: 43% 2076/4796 [04:13&lt;05:29, 8.25it/s] Iteration: 43% 2077/4796 [04:13&lt;05:27, 8.30it/s] Iteration: 43% 2078/4796 [04:13&lt;05:34, 8.13it/s] Iteration: 43% 2079/4796 [04:13&lt;05:31, 8.21it/s] Iteration: 43% 2080/4796 [04:13&lt;05:30, 8.23it/s] Iteration: 43% 2081/4796 [04:13&lt;05:30, 8.22it/s] Iteration: 43% 2082/4796 [04:13&lt;05:30, 8.21it/s] Iteration: 43% 2083/4796 [04:14&lt;05:30, 8.22it/s] Iteration: 43% 2084/4796 [04:14&lt;05:35, 8.08it/s] Iteration: 43% 2085/4796 [04:14&lt;05:30, 8.21it/s] Iteration: 43% 2086/4796 [04:14&lt;05:30, 8.20it/s] Iteration: 44% 2087/4796 [04:14&lt;05:30, 8.19it/s] Iteration: 44% 2088/4796 [04:14&lt;05:32, 8.15it/s] Iteration: 44% 2089/4796 [04:14&lt;05:31, 8.16it/s] Iteration: 44% 2090/4796 [04:14&lt;05:32, 8.14it/s] Iteration: 44% 2091/4796 [04:15&lt;05:27, 8.26it/s] Iteration: 44% 2092/4796 [04:15&lt;05:26, 8.28it/s] Iteration: 44% 2093/4796 [04:15&lt;05:29, 8.20it/s] Iteration: 44% 2094/4796 [04:15&lt;05:29, 8.20it/s] Iteration: 44% 2095/4796 [04:15&lt;05:29, 8.20it/s] Iteration: 44% 2096/4796 [04:15&lt;05:29, 8.20it/s] Iteration: 44% 2097/4796 [04:15&lt;05:28, 8.21it/s] Iteration: 44% 2098/4796 [04:15&lt;05:31, 8.14it/s] Iteration: 44% 2099/4796 [04:16&lt;05:30, 8.17it/s] Iteration: 44% 2100/4796 [04:16&lt;05:26, 8.25it/s] Iteration: 44% 2101/4796 [04:16&lt;05:27, 8.23it/s] Iteration: 44% 2102/4796 [04:16&lt;05:32, 8.09it/s] Iteration: 44% 2103/4796 [04:16&lt;05:31, 8.13it/s] Iteration: 44% 2104/4796 [04:16&lt;05:31, 8.13it/s] Iteration: 44% 2105/4796 [04:16&lt;05:29, 8.17it/s] Iteration: 44% 2106/4796 [04:16&lt;05:26, 8.23it/s] Iteration: 44% 2107/4796 [04:17&lt;05:31, 8.12it/s] Iteration: 44% 2108/4796 [04:17&lt;05:30, 8.14it/s] Iteration: 44% 2109/4796 [04:17&lt;05:28, 8.17it/s] Iteration: 44% 2110/4796 [04:17&lt;05:24, 8.28it/s] Iteration: 44% 2111/4796 [04:17&lt;05:31, 8.11it/s] Iteration: 44% 2112/4796 [04:17&lt;05:28, 8.17it/s] Iteration: 44% 2113/4796 [04:17&lt;05:28, 8.16it/s] Iteration: 44% 2114/4796 [04:17&lt;05:28, 8.17it/s] Iteration: 44% 2115/4796 [04:17&lt;05:25, 8.23it/s] Iteration: 44% 2116/4796 [04:18&lt;05:30, 8.10it/s] Iteration: 44% 2117/4796 [04:18&lt;05:33, 8.02it/s] Iteration: 44% 2118/4796 [04:18&lt;05:26, 8.20it/s] Iteration: 44% 2119/4796 [04:18&lt;05:27, 8.19it/s] Iteration: 44% 2120/4796 [04:18&lt;05:31, 8.06it/s] Iteration: 44% 2121/4796 [04:18&lt;05:29, 8.13it/s] Iteration: 44% 2122/4796 [04:18&lt;05:24, 8.25it/s] Iteration: 44% 2123/4796 [04:18&lt;05:22, 8.29it/s] Iteration: 44% 2124/4796 [04:19&lt;05:23, 8.27it/s] Iteration: 44% 2125/4796 [04:19&lt;05:29, 8.10it/s] Iteration: 44% 2126/4796 [04:19&lt;05:27, 8.16it/s] Iteration: 44% 2127/4796 [04:19&lt;05:27, 8.16it/s] Iteration: 44% 2128/4796 [04:19&lt;05:22, 8.27it/s] Iteration: 44% 2129/4796 [04:19&lt;05:22, 8.27it/s] Iteration: 44% 2130/4796 [04:19&lt;05:27, 8.15it/s] Iteration: 44% 2131/4796 [04:19&lt;05:26, 8.16it/s] Iteration: 44% 2132/4796 [04:20&lt;05:22, 8.27it/s] Iteration: 44% 2133/4796 [04:20&lt;05:22, 8.26it/s] Iteration: 44% 2134/4796 [04:20&lt;05:23, 8.23it/s] Iteration: 45% 2135/4796 [04:20&lt;05:24, 8.21it/s] Iteration: 45% 2136/4796 [04:20&lt;05:24, 8.19it/s] Iteration: 45% 2137/4796 [04:20&lt;05:24, 8.19it/s] Iteration: 45% 2138/4796 [04:20&lt;05:21, 8.27it/s] Iteration: 45% 2139/4796 [04:20&lt;05:21, 8.26it/s] Iteration: 45% 2140/4796 [04:21&lt;05:25, 8.17it/s] Iteration: 45% 2141/4796 [04:21&lt;05:21, 8.26it/s] Iteration: 45% 2142/4796 [04:21&lt;05:24, 8.18it/s] Iteration: 45% 2143/4796 [04:21&lt;05:26, 8.13it/s] Iteration: 45% 2144/4796 [04:21&lt;05:26, 8.13it/s] Iteration: 45% 2145/4796 [04:21&lt;05:24, 8.16it/s] Iteration: 45% 2146/4796 [04:21&lt;05:24, 8.17it/s] Iteration: 45% 2147/4796 [04:21&lt;05:25, 8.15it/s] Iteration: 45% 2148/4796 [04:22&lt;05:19, 8.28it/s] Iteration: 45% 2149/4796 [04:22&lt;05:20, 8.25it/s] Iteration: 45% 2150/4796 [04:22&lt;05:22, 8.22it/s] Iteration: 45% 2151/4796 [04:22&lt;05:22, 8.20it/s] Iteration: 45% 2152/4796 [04:22&lt;05:18, 8.31it/s] Iteration: 45% 2153/4796 [04:22&lt;05:25, 8.13it/s] Iteration: 45% 2154/4796 [04:22&lt;05:24, 8.14it/s] Iteration: 45% 2155/4796 [04:22&lt;05:23, 8.18it/s] Iteration: 45% 2156/4796 [04:22&lt;05:18, 8.28it/s] Iteration: 45% 2157/4796 [04:23&lt;05:19, 8.27it/s] Iteration: 45% 2158/4796 [04:23&lt;05:16, 8.33it/s] Iteration: 45% 2159/4796 [04:23&lt;05:24, 8.12it/s] Iteration: 45% 2160/4796 [04:23&lt;05:24, 8.14it/s] Iteration: 45% 2161/4796 [04:23&lt;05:23, 8.15it/s] Iteration: 45% 2162/4796 [04:23&lt;05:22, 8.16it/s] Iteration: 45% 2163/4796 [04:23&lt;05:27, 8.04it/s] Iteration: 45% 2164/4796 [04:23&lt;05:25, 8.09it/s] Iteration: 45% 2165/4796 [04:24&lt;05:25, 8.08it/s] Iteration: 45% 2166/4796 [04:24&lt;05:24, 8.11it/s] Iteration: 45% 2167/4796 [04:24&lt;05:23, 8.13it/s] Iteration: 45% 2168/4796 [04:24&lt;05:24, 8.09it/s] Iteration: 45% 2169/4796 [04:24&lt;05:24, 8.09it/s] Iteration: 45% 2170/4796 [04:24&lt;05:23, 8.12it/s] Iteration: 45% 2171/4796 [04:24&lt;05:22, 8.15it/s] Iteration: 45% 2172/4796 [04:24&lt;05:17, 8.26it/s] Iteration: 45% 2173/4796 [04:25&lt;05:15, 8.32it/s] Iteration: 45% 2174/4796 [04:25&lt;05:17, 8.25it/s] Iteration: 45% 2175/4796 [04:25&lt;05:21, 8.15it/s] Iteration: 45% 2176/4796 [04:25&lt;05:21, 8.15it/s] Iteration: 45% 2177/4796 [04:25&lt;05:25, 8.03it/s] Iteration: 45% 2178/4796 [04:25&lt;05:22, 8.11it/s] Iteration: 45% 2179/4796 [04:25&lt;05:17, 8.23it/s] Iteration: 45% 2180/4796 [04:25&lt;05:15, 8.30it/s] Iteration: 45% 2181/4796 [04:26&lt;05:21, 8.13it/s] Iteration: 45% 2182/4796 [04:26&lt;05:16, 8.26it/s] Iteration: 46% 2183/4796 [04:26&lt;05:17, 8.23it/s] Iteration: 46% 2184/4796 [04:26&lt;05:16, 8.26it/s] Iteration: 46% 2185/4796 [04:26&lt;05:13, 8.33it/s] Iteration: 46% 2186/4796 [04:26&lt;05:14, 8.29it/s] Iteration: 46% 2187/4796 [04:26&lt;05:16, 8.23it/s] Iteration: 46% 2188/4796 [04:26&lt;05:17, 8.20it/s] Iteration: 46% 2189/4796 [04:27&lt;05:15, 8.26it/s] Iteration: 46% 2190/4796 [04:27&lt;05:16, 8.23it/s] Iteration: 46% 2191/4796 [04:27&lt;05:16, 8.22it/s] Iteration: 46% 2192/4796 [04:27&lt;05:24, 8.02it/s] Iteration: 46% 2193/4796 [04:27&lt;05:21, 8.09it/s] Iteration: 46% 2194/4796 [04:27&lt;05:20, 8.13it/s] Iteration: 46% 2195/4796 [04:27&lt;05:19, 8.13it/s] Iteration: 46% 2196/4796 [04:27&lt;05:25, 7.98it/s] Iteration: 46% 2197/4796 [04:28&lt;05:21, 8.08it/s] Iteration: 46% 2198/4796 [04:28&lt;05:22, 8.07it/s] Iteration: 46% 2199/4796 [04:28&lt;05:22, 8.04it/s] Iteration: 46% 2200/4796 [04:28&lt;05:27, 7.92it/s] Iteration: 46% 2201/4796 [04:28&lt;05:24, 8.00it/s] Iteration: 46% 2202/4796 [04:28&lt;05:20, 8.10it/s] Iteration: 46% 2203/4796 [04:28&lt;05:19, 8.12it/s] Iteration: 46% 2204/4796 [04:28&lt;05:18, 8.15it/s] Iteration: 46% 2205/4796 [04:29&lt;05:20, 8.09it/s] Iteration: 46% 2206/4796 [04:29&lt;05:19, 8.11it/s] Iteration: 46% 2207/4796 [04:29&lt;05:18, 8.13it/s] Iteration: 46% 2208/4796 [04:29&lt;05:17, 8.16it/s] Iteration: 46% 2209/4796 [04:29&lt;05:22, 8.01it/s] Iteration: 46% 2210/4796 [04:29&lt;05:19, 8.08it/s] Iteration: 46% 2211/4796 [04:29&lt;05:22, 8.02it/s] Iteration: 46% 2212/4796 [04:29&lt;05:19, 8.08it/s] Iteration: 46% 2213/4796 [04:29&lt;05:18, 8.11it/s] Iteration: 46% 2214/4796 [04:30&lt;05:18, 8.12it/s] Iteration: 46% 2215/4796 [04:30&lt;05:15, 8.17it/s] Iteration: 46% 2216/4796 [04:30&lt;05:17, 8.12it/s] Iteration: 46% 2217/4796 [04:30&lt;05:17, 8.12it/s] Iteration: 46% 2218/4796 [04:30&lt;05:16, 8.15it/s] Iteration: 46% 2219/4796 [04:30&lt;05:15, 8.18it/s] Iteration: 46% 2220/4796 [04:30&lt;05:14, 8.19it/s] Iteration: 46% 2221/4796 [04:30&lt;05:14, 8.18it/s] Iteration: 46% 2222/4796 [04:31&lt;05:16, 8.15it/s] Iteration: 46% 2223/4796 [04:31&lt;05:12, 8.24it/s] Iteration: 46% 2224/4796 [04:31&lt;05:12, 8.23it/s] Iteration: 46% 2225/4796 [04:31&lt;05:12, 8.22it/s] Iteration: 46% 2226/4796 [04:31&lt;05:12, 8.21it/s] Iteration: 46% 2227/4796 [04:31&lt;05:09, 8.29it/s] Iteration: 46% 2228/4796 [04:31&lt;05:12, 8.21it/s] Iteration: 46% 2229/4796 [04:31&lt;05:11, 8.23it/s] Iteration: 46% 2230/4796 [04:32&lt;05:12, 8.22it/s] Iteration: 47% 2231/4796 [04:32&lt;05:11, 8.23it/s] Iteration: 47% 2232/4796 [04:32&lt;05:12, 8.22it/s] Iteration: 47% 2233/4796 [04:32&lt;05:23, 7.93it/s] Iteration: 47% 2234/4796 [04:32&lt;05:19, 8.02it/s] Iteration: 47% 2235/4796 [04:32&lt;05:16, 8.08it/s] Iteration: 47% 2236/4796 [04:32&lt;05:15, 8.12it/s] Iteration: 47% 2237/4796 [04:32&lt;05:19, 8.02it/s] Iteration: 47% 2238/4796 [04:33&lt;05:17, 8.06it/s] Iteration: 47% 2239/4796 [04:33&lt;05:14, 8.12it/s] Iteration: 47% 2240/4796 [04:33&lt;05:10, 8.24it/s] Iteration: 47% 2241/4796 [04:33&lt;05:15, 8.10it/s] Iteration: 47% 2242/4796 [04:33&lt;05:14, 8.13it/s] Iteration: 47% 2243/4796 [04:33&lt;05:14, 8.12it/s] Iteration: 47% 2244/4796 [04:33&lt;05:14, 8.11it/s] Iteration: 47% 2245/4796 [04:33&lt;05:12, 8.16it/s] Iteration: 47% 2246/4796 [04:34&lt;05:17, 8.04it/s] Iteration: 47% 2247/4796 [04:34&lt;05:11, 8.18it/s] Iteration: 47% 2248/4796 [04:34&lt;05:10, 8.20it/s] Iteration: 47% 2249/4796 [04:34&lt;05:11, 8.19it/s] Iteration: 47% 2250/4796 [04:34&lt;05:12, 8.15it/s] Iteration: 47% 2251/4796 [04:34&lt;05:08, 8.25it/s] Iteration: 47% 2252/4796 [04:34&lt;05:13, 8.11it/s] Iteration: 47% 2253/4796 [04:34&lt;05:09, 8.23it/s] Iteration: 47% 2254/4796 [04:35&lt;05:11, 8.16it/s] Iteration: 47% 2255/4796 [04:35&lt;05:11, 8.15it/s] Iteration: 47% 2256/4796 [04:35&lt;05:12, 8.13it/s] Iteration: 47% 2257/4796 [04:35&lt;05:12, 8.14it/s] Iteration: 47% 2258/4796 [04:35&lt;05:10, 8.18it/s] Iteration: 47% 2259/4796 [04:35&lt;05:10, 8.16it/s] Iteration: 47% 2260/4796 [04:35&lt;05:15, 8.03it/s] Iteration: 47% 2261/4796 [04:35&lt;05:13, 8.08it/s] Iteration: 47% 2262/4796 [04:36&lt;05:08, 8.20it/s] Iteration: 47% 2263/4796 [04:36&lt;05:09, 8.18it/s] Iteration: 47% 2264/4796 [04:36&lt;05:09, 8.18it/s] Iteration: 47% 2265/4796 [04:36&lt;05:11, 8.12it/s] Iteration: 47% 2266/4796 [04:36&lt;05:14, 8.03it/s] Iteration: 47% 2267/4796 [04:36&lt;05:12, 8.09it/s] Iteration: 47% 2268/4796 [04:36&lt;05:07, 8.21it/s] Iteration: 47% 2269/4796 [04:36&lt;05:13, 8.07it/s] Iteration: 47% 2270/4796 [04:36&lt;05:11, 8.11it/s] Iteration: 47% 2271/4796 [04:37&lt;05:10, 8.13it/s] Iteration: 47% 2272/4796 [04:37&lt;05:09, 8.15it/s] Iteration: 47% 2273/4796 [04:37&lt;05:05, 8.25it/s] Iteration: 47% 2274/4796 [04:37&lt;05:10, 8.12it/s] Iteration: 47% 2275/4796 [04:37&lt;05:09, 8.15it/s] Iteration: 47% 2276/4796 [04:37&lt;05:08, 8.16it/s] Iteration: 47% 2277/4796 [04:37&lt;05:08, 8.16it/s] Iteration: 47% 2278/4796 [04:37&lt;05:08, 8.16it/s] Iteration: 48% 2279/4796 [04:38&lt;05:08, 8.16it/s] Iteration: 48% 2280/4796 [04:38&lt;05:09, 8.13it/s] Iteration: 48% 2281/4796 [04:38&lt;05:08, 8.14it/s] Iteration: 48% 2282/4796 [04:38&lt;05:13, 8.01it/s] Iteration: 48% 2283/4796 [04:38&lt;05:09, 8.11it/s] Iteration: 48% 2284/4796 [04:38&lt;05:10, 8.10it/s] Iteration: 48% 2285/4796 [04:38&lt;05:08, 8.14it/s] Iteration: 48% 2286/4796 [04:38&lt;05:08, 8.14it/s] Iteration: 48% 2287/4796 [04:39&lt;05:12, 8.02it/s] Iteration: 48% 2288/4796 [04:39&lt;05:11, 8.06it/s] Iteration: 48% 2289/4796 [04:39&lt;05:06, 8.17it/s] Iteration: 48% 2290/4796 [04:39&lt;05:07, 8.15it/s] Iteration: 48% 2291/4796 [04:39&lt;05:12, 8.03it/s] Iteration: 48% 2292/4796 [04:39&lt;05:10, 8.06it/s] Iteration: 48% 2293/4796 [04:39&lt;05:07, 8.13it/s] Iteration: 48% 2294/4796 [04:39&lt;05:06, 8.16it/s] Iteration: 48% 2295/4796 [04:40&lt;05:12, 8.01it/s] Iteration: 48% 2296/4796 [04:40&lt;05:10, 8.06it/s] Iteration: 48% 2297/4796 [04:40&lt;05:05, 8.19it/s] Iteration: 48% 2298/4796 [04:40&lt;05:02, 8.26it/s] Iteration: 48% 2299/4796 [04:40&lt;05:07, 8.11it/s] Iteration: 48% 2300/4796 [04:40&lt;05:03, 8.22it/s] Iteration: 48% 2301/4796 [04:40&lt;05:05, 8.16it/s] Iteration: 48% 2302/4796 [04:40&lt;05:04, 8.18it/s] Iteration: 48% 2303/4796 [04:41&lt;05:04, 8.20it/s] Iteration: 48% 2304/4796 [04:41&lt;05:03, 8.21it/s] Iteration: 48% 2305/4796 [04:41&lt;05:07, 8.09it/s] Iteration: 48% 2306/4796 [04:41&lt;05:03, 8.22it/s] Iteration: 48% 2307/4796 [04:41&lt;05:03, 8.19it/s] Iteration: 48% 2308/4796 [04:41&lt;05:03, 8.20it/s] Iteration: 48% 2309/4796 [04:41&lt;05:08, 8.07it/s] Iteration: 48% 2310/4796 [04:41&lt;05:03, 8.20it/s] Iteration: 48% 2311/4796 [04:42&lt;04:59, 8.31it/s] Iteration: 48% 2312/4796 [04:42&lt;05:01, 8.24it/s] Iteration: 48% 2313/4796 [04:42&lt;04:59, 8.29it/s] Iteration: 48% 2314/4796 [04:42&lt;04:57, 8.35it/s] Iteration: 48% 2315/4796 [04:42&lt;05:01, 8.22it/s] Iteration: 48% 2316/4796 [04:42&lt;05:03, 8.18it/s] Iteration: 48% 2317/4796 [04:42&lt;05:02, 8.19it/s] Iteration: 48% 2318/4796 [04:42&lt;04:58, 8.31it/s] Iteration: 48% 2319/4796 [04:42&lt;05:03, 8.16it/s] Iteration: 48% 2320/4796 [04:43&lt;05:02, 8.18it/s] Iteration: 48% 2321/4796 [04:43&lt;05:02, 8.17it/s] Iteration: 48% 2322/4796 [04:43&lt;04:59, 8.27it/s] Iteration: 48% 2323/4796 [04:43&lt;04:58, 8.27it/s] Iteration: 48% 2324/4796 [04:43&lt;05:00, 8.23it/s] Iteration: 48% 2325/4796 [04:43&lt;05:01, 8.21it/s] Iteration: 48% 2326/4796 [04:43&lt;05:00, 8.21it/s] Iteration: 49% 2327/4796 [04:43&lt;05:00, 8.23it/s] Iteration: 49% 2328/4796 [04:44&lt;04:57, 8.29it/s] Iteration: 49% 2329/4796 [04:44&lt;05:05, 8.07it/s] Iteration: 49% 2330/4796 [04:44&lt;05:04, 8.10it/s] Iteration: 49% 2331/4796 [04:44&lt;05:00, 8.20it/s] Iteration: 49% 2332/4796 [04:44&lt;04:59, 8.22it/s] Iteration: 49% 2333/4796 [04:44&lt;04:56, 8.30it/s] Iteration: 49% 2334/4796 [04:44&lt;05:01, 8.15it/s] Iteration: 49% 2335/4796 [04:44&lt;05:03, 8.11it/s] Iteration: 49% 2336/4796 [04:45&lt;04:57, 8.26it/s] Iteration: 49% 2337/4796 [04:45&lt;04:59, 8.21it/s] Iteration: 49% 2338/4796 [04:45&lt;05:00, 8.18it/s] Iteration: 49% 2339/4796 [04:45&lt;04:56, 8.30it/s] Iteration: 49% 2340/4796 [04:45&lt;04:57, 8.26it/s] Iteration: 49% 2341/4796 [04:45&lt;04:57, 8.25it/s] Iteration: 49% 2342/4796 [04:45&lt;04:57, 8.24it/s] Iteration: 49% 2343/4796 [04:45&lt;05:00, 8.16it/s] Iteration: 49% 2344/4796 [04:46&lt;04:59, 8.19it/s] Iteration: 49% 2345/4796 [04:46&lt;04:55, 8.29it/s] Iteration: 49% 2346/4796 [04:46&lt;04:53, 8.34it/s] Iteration: 49% 2347/4796 [04:46&lt;04:51, 8.39it/s] Iteration: 49% 2348/4796 [04:46&lt;04:50, 8.44it/s] Iteration: 49% 2349/4796 [04:46&lt;04:59, 8.17it/s] Iteration: 49% 2350/4796 [04:46&lt;04:59, 8.17it/s] Iteration: 49% 2351/4796 [04:46&lt;04:58, 8.18it/s] Iteration: 49% 2352/4796 [04:47&lt;04:58, 8.20it/s] Iteration: 49% 2353/4796 [04:47&lt;04:59, 8.14it/s] Iteration: 49% 2354/4796 [04:47&lt;04:59, 8.16it/s] Iteration: 49% 2355/4796 [04:47&lt;04:55, 8.25it/s] Iteration: 49% 2356/4796 [04:47&lt;04:53, 8.32it/s] Iteration: 49% 2357/4796 [04:47&lt;04:56, 8.24it/s] Iteration: 49% 2358/4796 [04:47&lt;04:56, 8.21it/s] Iteration: 49% 2359/4796 [04:47&lt;04:56, 8.22it/s] Iteration: 49% 2360/4796 [04:47&lt;04:57, 8.18it/s] Iteration: 49% 2361/4796 [04:48&lt;04:58, 8.16it/s] Iteration: 49% 2362/4796 [04:48&lt;04:57, 8.19it/s] Iteration: 49% 2363/4796 [04:48&lt;04:54, 8.27it/s] Iteration: 49% 2364/4796 [04:48&lt;04:55, 8.24it/s] Iteration: 49% 2365/4796 [04:48&lt;04:51, 8.34it/s] Iteration: 49% 2366/4796 [04:48&lt;04:53, 8.29it/s] Iteration: 49% 2367/4796 [04:48&lt;04:59, 8.11it/s] Iteration: 49% 2368/4796 [04:48&lt;04:54, 8.25it/s] Iteration: 49% 2369/4796 [04:49&lt;04:54, 8.24it/s] Iteration: 49% 2370/4796 [04:49&lt;04:54, 8.25it/s] Iteration: 49% 2371/4796 [04:49&lt;04:55, 8.22it/s] Iteration: 49% 2372/4796 [04:49&lt;04:59, 8.09it/s] Iteration: 49% 2373/4796 [04:49&lt;04:54, 8.22it/s] Iteration: 49% 2374/4796 [04:49&lt;04:56, 8.16it/s] Iteration: 50% 2375/4796 [04:49&lt;04:55, 8.20it/s] Iteration: 50% 2376/4796 [04:49&lt;04:54, 8.20it/s] Iteration: 50% 2377/4796 [04:50&lt;04:59, 8.08it/s] Iteration: 50% 2378/4796 [04:50&lt;04:57, 8.12it/s] Iteration: 50% 2379/4796 [04:50&lt;04:57, 8.13it/s] Iteration: 50% 2380/4796 [04:50&lt;04:52, 8.27it/s] Iteration: 50% 2381/4796 [04:50&lt;04:53, 8.23it/s] Iteration: 50% 2382/4796 [04:50&lt;04:53, 8.23it/s] Iteration: 50% 2383/4796 [04:50&lt;04:50, 8.32it/s] Iteration: 50% 2384/4796 [04:50&lt;04:48, 8.35it/s] Iteration: 50% 2385/4796 [04:51&lt;04:51, 8.28it/s] Iteration: 50% 2386/4796 [04:51&lt;04:51, 8.26it/s] Iteration: 50% 2387/4796 [04:51&lt;04:53, 8.20it/s] Iteration: 50% 2388/4796 [04:51&lt;04:53, 8.20it/s] Iteration: 50% 2389/4796 [04:51&lt;04:50, 8.28it/s] Iteration: 50% 2390/4796 [04:51&lt;04:49, 8.31it/s] Iteration: 50% 2391/4796 [04:51&lt;04:52, 8.23it/s] Iteration: 50% 2392/4796 [04:51&lt;04:48, 8.33it/s] Iteration: 50% 2393/4796 [04:51&lt;04:46, 8.38it/s] Iteration: 50% 2394/4796 [04:52&lt;04:48, 8.32it/s] Iteration: 50% 2395/4796 [04:52&lt;04:46, 8.37it/s] Iteration: 50% 2396/4796 [04:52&lt;04:48, 8.32it/s] Iteration: 50% 2397/4796 [04:52&lt;04:54, 8.13it/s] Iteration: 50% 2398/4796 [04:52&lt;04:50, 8.27it/s] Iteration: 50% 2399/4796 [04:52&lt;04:56, 8.08it/s] Iteration: 50% 2400/4796 [04:52&lt;04:56, 8.07it/s] Iteration: 50% 2401/4796 [04:52&lt;04:54, 8.12it/s] Iteration: 50% 2402/4796 [04:53&lt;04:53, 8.16it/s] Iteration: 50% 2403/4796 [04:53&lt;04:53, 8.16it/s] Iteration: 50% 2404/4796 [04:53&lt;04:52, 8.16it/s] Iteration: 50% 2405/4796 [04:53&lt;04:49, 8.26it/s] Iteration: 50% 2406/4796 [04:53&lt;04:54, 8.11it/s] Iteration: 50% 2407/4796 [04:53&lt;04:49, 8.25it/s]{&#39;loss&#39;: 0.057132568359375, &#39;learning_rate&#39;: 8.298582151793162e-06, &#39;epoch&#39;: 2.5020850708924103, &#39;step&#39;: 12000} Iteration: 50% 2408/4796 [04:53&lt;04:52, 8.17it/s] Iteration: 50% 2409/4796 [04:53&lt;04:50, 8.23it/s] Iteration: 50% 2410/4796 [04:54&lt;04:49, 8.24it/s] Iteration: 50% 2411/4796 [04:54&lt;04:53, 8.13it/s] Iteration: 50% 2412/4796 [04:54&lt;04:50, 8.22it/s] Iteration: 50% 2413/4796 [04:54&lt;04:49, 8.23it/s] Iteration: 50% 2414/4796 [04:54&lt;04:50, 8.21it/s] Iteration: 50% 2415/4796 [04:54&lt;04:55, 8.04it/s] Iteration: 50% 2416/4796 [04:54&lt;04:54, 8.08it/s] Iteration: 50% 2417/4796 [04:54&lt;04:53, 8.12it/s] Iteration: 50% 2418/4796 [04:55&lt;04:51, 8.16it/s] Iteration: 50% 2419/4796 [04:55&lt;04:51, 8.15it/s] Iteration: 50% 2420/4796 [04:55&lt;04:49, 8.20it/s] Iteration: 50% 2421/4796 [04:55&lt;04:48, 8.23it/s] Iteration: 51% 2422/4796 [04:55&lt;04:49, 8.21it/s] Iteration: 51% 2423/4796 [04:55&lt;04:49, 8.20it/s] Iteration: 51% 2424/4796 [04:55&lt;04:51, 8.15it/s] Iteration: 51% 2425/4796 [04:55&lt;04:53, 8.09it/s] Iteration: 51% 2426/4796 [04:56&lt;04:48, 8.23it/s] Iteration: 51% 2427/4796 [04:56&lt;04:50, 8.15it/s] Iteration: 51% 2428/4796 [04:56&lt;04:51, 8.11it/s] Iteration: 51% 2429/4796 [04:56&lt;04:51, 8.12it/s] Iteration: 51% 2430/4796 [04:56&lt;04:51, 8.12it/s] Iteration: 51% 2431/4796 [04:56&lt;04:47, 8.22it/s] Iteration: 51% 2432/4796 [04:56&lt;04:49, 8.17it/s] Iteration: 51% 2433/4796 [04:56&lt;04:48, 8.18it/s] Iteration: 51% 2434/4796 [04:57&lt;04:52, 8.07it/s] Iteration: 51% 2435/4796 [04:57&lt;04:47, 8.21it/s] Iteration: 51% 2436/4796 [04:57&lt;04:47, 8.21it/s] Iteration: 51% 2437/4796 [04:57&lt;04:47, 8.21it/s] Iteration: 51% 2438/4796 [04:57&lt;04:48, 8.18it/s] Iteration: 51% 2439/4796 [04:57&lt;04:50, 8.11it/s] Iteration: 51% 2440/4796 [04:57&lt;04:47, 8.19it/s] Iteration: 51% 2441/4796 [04:57&lt;04:44, 8.28it/s] Iteration: 51% 2442/4796 [04:57&lt;04:46, 8.22it/s] Iteration: 51% 2443/4796 [04:58&lt;04:46, 8.21it/s] Iteration: 51% 2444/4796 [04:58&lt;04:48, 8.14it/s] Iteration: 51% 2445/4796 [04:58&lt;04:53, 8.02it/s] Iteration: 51% 2446/4796 [04:58&lt;04:50, 8.10it/s] Iteration: 51% 2447/4796 [04:58&lt;04:48, 8.15it/s] Iteration: 51% 2448/4796 [04:58&lt;04:49, 8.12it/s] Iteration: 51% 2449/4796 [04:58&lt;04:48, 8.14it/s] Iteration: 51% 2450/4796 [04:58&lt;04:44, 8.26it/s] Iteration: 51% 2451/4796 [04:59&lt;04:44, 8.24it/s] Iteration: 51% 2452/4796 [04:59&lt;04:49, 8.08it/s] Iteration: 51% 2453/4796 [04:59&lt;04:46, 8.19it/s] Iteration: 51% 2454/4796 [04:59&lt;04:46, 8.17it/s] Iteration: 51% 2455/4796 [04:59&lt;04:44, 8.23it/s] Iteration: 51% 2456/4796 [04:59&lt;04:43, 8.24it/s] Iteration: 51% 2457/4796 [04:59&lt;04:48, 8.12it/s] Iteration: 51% 2458/4796 [04:59&lt;04:44, 8.23it/s] Iteration: 51% 2459/4796 [05:00&lt;04:45, 8.20it/s] Iteration: 51% 2460/4796 [05:00&lt;04:44, 8.21it/s] Iteration: 51% 2461/4796 [05:00&lt;04:45, 8.19it/s] Iteration: 51% 2462/4796 [05:00&lt;04:44, 8.21it/s] Iteration: 51% 2463/4796 [05:00&lt;04:44, 8.20it/s] Iteration: 51% 2464/4796 [05:00&lt;04:40, 8.31it/s] Iteration: 51% 2465/4796 [05:00&lt;04:42, 8.24it/s] Iteration: 51% 2466/4796 [05:00&lt;04:41, 8.26it/s] Iteration: 51% 2467/4796 [05:01&lt;04:42, 8.25it/s] Iteration: 51% 2468/4796 [05:01&lt;04:43, 8.22it/s] Iteration: 51% 2469/4796 [05:01&lt;04:41, 8.26it/s] Iteration: 52% 2470/4796 [05:01&lt;04:41, 8.25it/s] Iteration: 52% 2471/4796 [05:01&lt;04:44, 8.16it/s] Iteration: 52% 2472/4796 [05:01&lt;04:41, 8.26it/s] Iteration: 52% 2473/4796 [05:01&lt;04:42, 8.22it/s] Iteration: 52% 2474/4796 [05:01&lt;04:39, 8.31it/s] Iteration: 52% 2475/4796 [05:02&lt;04:41, 8.24it/s] Iteration: 52% 2476/4796 [05:02&lt;04:47, 8.07it/s] Iteration: 52% 2477/4796 [05:02&lt;04:45, 8.12it/s] Iteration: 52% 2478/4796 [05:02&lt;04:45, 8.12it/s] Iteration: 52% 2479/4796 [05:02&lt;04:50, 7.97it/s] Iteration: 52% 2480/4796 [05:02&lt;04:47, 8.06it/s] Iteration: 52% 2481/4796 [05:02&lt;04:45, 8.10it/s] Iteration: 52% 2482/4796 [05:02&lt;04:42, 8.20it/s] Iteration: 52% 2483/4796 [05:02&lt;04:42, 8.20it/s] Iteration: 52% 2484/4796 [05:03&lt;04:42, 8.19it/s] Iteration: 52% 2485/4796 [05:03&lt;04:45, 8.09it/s] Iteration: 52% 2486/4796 [05:03&lt;04:44, 8.13it/s] Iteration: 52% 2487/4796 [05:03&lt;04:44, 8.11it/s] Iteration: 52% 2488/4796 [05:03&lt;04:41, 8.20it/s] Iteration: 52% 2489/4796 [05:03&lt;04:46, 8.06it/s] Iteration: 52% 2490/4796 [05:03&lt;04:43, 8.13it/s] Iteration: 52% 2491/4796 [05:03&lt;04:43, 8.13it/s] Iteration: 52% 2492/4796 [05:04&lt;04:39, 8.26it/s] Iteration: 52% 2493/4796 [05:04&lt;04:42, 8.16it/s] Iteration: 52% 2494/4796 [05:04&lt;04:46, 8.04it/s] Iteration: 52% 2495/4796 [05:04&lt;04:43, 8.12it/s] Iteration: 52% 2496/4796 [05:04&lt;04:42, 8.13it/s] Iteration: 52% 2497/4796 [05:04&lt;04:42, 8.15it/s] Iteration: 52% 2498/4796 [05:04&lt;04:42, 8.14it/s] Iteration: 52% 2499/4796 [05:04&lt;04:44, 8.06it/s] Iteration: 52% 2500/4796 [05:05&lt;04:42, 8.11it/s] Iteration: 52% 2501/4796 [05:05&lt;04:39, 8.22it/s] Iteration: 52% 2502/4796 [05:05&lt;04:40, 8.18it/s] Iteration: 52% 2503/4796 [05:05&lt;04:40, 8.17it/s] Iteration: 52% 2504/4796 [05:05&lt;04:39, 8.19it/s] Iteration: 52% 2505/4796 [05:05&lt;04:40, 8.16it/s] Iteration: 52% 2506/4796 [05:05&lt;04:36, 8.28it/s] Iteration: 52% 2507/4796 [05:05&lt;04:34, 8.35it/s] Iteration: 52% 2508/4796 [05:06&lt;04:35, 8.31it/s] Iteration: 52% 2509/4796 [05:06&lt;04:38, 8.22it/s] Iteration: 52% 2510/4796 [05:06&lt;04:39, 8.19it/s] Iteration: 52% 2511/4796 [05:06&lt;04:38, 8.20it/s] Iteration: 52% 2512/4796 [05:06&lt;04:38, 8.21it/s] Iteration: 52% 2513/4796 [05:06&lt;04:39, 8.18it/s] Iteration: 52% 2514/4796 [05:06&lt;04:38, 8.21it/s] Iteration: 52% 2515/4796 [05:06&lt;04:41, 8.09it/s] Iteration: 52% 2516/4796 [05:07&lt;04:41, 8.10it/s] Iteration: 52% 2517/4796 [05:07&lt;04:39, 8.15it/s] Iteration: 53% 2518/4796 [05:07&lt;04:40, 8.13it/s] Iteration: 53% 2519/4796 [05:07&lt;04:39, 8.15it/s] Iteration: 53% 2520/4796 [05:07&lt;04:38, 8.17it/s] Iteration: 53% 2521/4796 [05:07&lt;04:38, 8.17it/s] Iteration: 53% 2522/4796 [05:07&lt;04:42, 8.04it/s] Iteration: 53% 2523/4796 [05:07&lt;04:41, 8.07it/s] Iteration: 53% 2524/4796 [05:08&lt;04:39, 8.12it/s] Iteration: 53% 2525/4796 [05:08&lt;04:39, 8.13it/s] Iteration: 53% 2526/4796 [05:08&lt;04:43, 8.00it/s] Iteration: 53% 2527/4796 [05:08&lt;04:41, 8.05it/s] Iteration: 53% 2528/4796 [05:08&lt;04:37, 8.18it/s] Iteration: 53% 2529/4796 [05:08&lt;04:33, 8.29it/s] Iteration: 53% 2530/4796 [05:08&lt;04:33, 8.27it/s] Iteration: 53% 2531/4796 [05:08&lt;04:34, 8.26it/s] Iteration: 53% 2532/4796 [05:08&lt;04:33, 8.28it/s] Iteration: 53% 2533/4796 [05:09&lt;04:33, 8.27it/s] Iteration: 53% 2534/4796 [05:09&lt;04:33, 8.26it/s] Iteration: 53% 2535/4796 [05:09&lt;04:33, 8.27it/s] Iteration: 53% 2536/4796 [05:09&lt;04:38, 8.11it/s] Iteration: 53% 2537/4796 [05:09&lt;04:37, 8.15it/s] Iteration: 53% 2538/4796 [05:09&lt;04:33, 8.26it/s] Iteration: 53% 2539/4796 [05:09&lt;04:33, 8.26it/s] Iteration: 53% 2540/4796 [05:09&lt;04:39, 8.07it/s] Iteration: 53% 2541/4796 [05:10&lt;04:34, 8.22it/s] Iteration: 53% 2542/4796 [05:10&lt;04:33, 8.25it/s] Iteration: 53% 2543/4796 [05:10&lt;04:33, 8.23it/s] Iteration: 53% 2544/4796 [05:10&lt;04:33, 8.23it/s] Iteration: 53% 2545/4796 [05:10&lt;04:38, 8.09it/s] Iteration: 53% 2546/4796 [05:10&lt;04:33, 8.24it/s] Iteration: 53% 2547/4796 [05:10&lt;04:29, 8.33it/s] Iteration: 53% 2548/4796 [05:10&lt;04:30, 8.31it/s] Iteration: 53% 2549/4796 [05:11&lt;04:27, 8.38it/s] Iteration: 53% 2550/4796 [05:11&lt;04:34, 8.17it/s] Iteration: 53% 2551/4796 [05:11&lt;04:33, 8.20it/s] Iteration: 53% 2552/4796 [05:11&lt;04:34, 8.18it/s] Iteration: 53% 2553/4796 [05:11&lt;04:34, 8.16it/s] Iteration: 53% 2554/4796 [05:11&lt;04:34, 8.17it/s] Iteration: 53% 2555/4796 [05:11&lt;04:37, 8.07it/s] Iteration: 53% 2556/4796 [05:11&lt;04:36, 8.09it/s] Iteration: 53% 2557/4796 [05:12&lt;04:33, 8.19it/s] Iteration: 53% 2558/4796 [05:12&lt;04:32, 8.21it/s] Iteration: 53% 2559/4796 [05:12&lt;04:32, 8.22it/s] Iteration: 53% 2560/4796 [05:12&lt;04:34, 8.14it/s] Iteration: 53% 2561/4796 [05:12&lt;04:35, 8.13it/s] Iteration: 53% 2562/4796 [05:12&lt;04:33, 8.16it/s] Iteration: 53% 2563/4796 [05:12&lt;04:30, 8.25it/s] Iteration: 53% 2564/4796 [05:12&lt;04:34, 8.12it/s] Iteration: 53% 2565/4796 [05:13&lt;04:30, 8.25it/s] Iteration: 54% 2566/4796 [05:13&lt;04:31, 8.22it/s] Iteration: 54% 2567/4796 [05:13&lt;04:31, 8.21it/s] Iteration: 54% 2568/4796 [05:13&lt;04:28, 8.31it/s] Iteration: 54% 2569/4796 [05:13&lt;04:24, 8.40it/s] Iteration: 54% 2570/4796 [05:13&lt;04:28, 8.30it/s] Iteration: 54% 2571/4796 [05:13&lt;04:29, 8.25it/s] Iteration: 54% 2572/4796 [05:13&lt;04:29, 8.24it/s] Iteration: 54% 2573/4796 [05:13&lt;04:30, 8.21it/s] Iteration: 54% 2574/4796 [05:14&lt;04:26, 8.32it/s] Iteration: 54% 2575/4796 [05:14&lt;04:28, 8.26it/s] Iteration: 54% 2576/4796 [05:14&lt;04:26, 8.33it/s] Iteration: 54% 2577/4796 [05:14&lt;04:27, 8.31it/s] Iteration: 54% 2578/4796 [05:14&lt;04:28, 8.27it/s] Iteration: 54% 2579/4796 [05:14&lt;04:32, 8.13it/s] Iteration: 54% 2580/4796 [05:14&lt;04:30, 8.18it/s] Iteration: 54% 2581/4796 [05:14&lt;04:30, 8.18it/s] Iteration: 54% 2582/4796 [05:15&lt;04:28, 8.25it/s] Iteration: 54% 2583/4796 [05:15&lt;04:29, 8.22it/s] Iteration: 54% 2584/4796 [05:15&lt;04:33, 8.08it/s] Iteration: 54% 2585/4796 [05:15&lt;04:32, 8.13it/s] Iteration: 54% 2586/4796 [05:15&lt;04:31, 8.13it/s] Iteration: 54% 2587/4796 [05:15&lt;04:29, 8.18it/s] Iteration: 54% 2588/4796 [05:15&lt;04:30, 8.16it/s] Iteration: 54% 2589/4796 [05:15&lt;04:30, 8.17it/s] Iteration: 54% 2590/4796 [05:16&lt;04:30, 8.14it/s] Iteration: 54% 2591/4796 [05:16&lt;04:26, 8.27it/s] Iteration: 54% 2592/4796 [05:16&lt;04:32, 8.08it/s] Iteration: 54% 2593/4796 [05:16&lt;04:31, 8.13it/s] Iteration: 54% 2594/4796 [05:16&lt;04:30, 8.14it/s] Iteration: 54% 2595/4796 [05:16&lt;04:29, 8.15it/s] Iteration: 54% 2596/4796 [05:16&lt;04:28, 8.19it/s] Iteration: 54% 2597/4796 [05:16&lt;04:27, 8.22it/s] Iteration: 54% 2598/4796 [05:17&lt;04:35, 7.97it/s] Iteration: 54% 2599/4796 [05:17&lt;04:33, 8.04it/s] Iteration: 54% 2600/4796 [05:17&lt;04:34, 8.01it/s] Iteration: 54% 2601/4796 [05:17&lt;04:31, 8.07it/s] Iteration: 54% 2602/4796 [05:17&lt;04:32, 8.05it/s] Iteration: 54% 2603/4796 [05:17&lt;04:30, 8.10it/s] Iteration: 54% 2604/4796 [05:17&lt;04:29, 8.14it/s] Iteration: 54% 2605/4796 [05:17&lt;04:26, 8.23it/s] Iteration: 54% 2606/4796 [05:18&lt;04:31, 8.06it/s] Iteration: 54% 2607/4796 [05:18&lt;04:29, 8.13it/s] Iteration: 54% 2608/4796 [05:18&lt;04:29, 8.13it/s] Iteration: 54% 2609/4796 [05:18&lt;04:28, 8.13it/s] Iteration: 54% 2610/4796 [05:18&lt;04:24, 8.26it/s] Iteration: 54% 2611/4796 [05:18&lt;04:21, 8.36it/s] Iteration: 54% 2612/4796 [05:18&lt;04:23, 8.28it/s] Iteration: 54% 2613/4796 [05:18&lt;04:24, 8.26it/s] Iteration: 55% 2614/4796 [05:19&lt;04:24, 8.23it/s] Iteration: 55% 2615/4796 [05:19&lt;04:25, 8.21it/s] Iteration: 55% 2616/4796 [05:19&lt;04:29, 8.08it/s] Iteration: 55% 2617/4796 [05:19&lt;04:28, 8.12it/s] Iteration: 55% 2618/4796 [05:19&lt;04:27, 8.13it/s] Iteration: 55% 2619/4796 [05:19&lt;04:26, 8.17it/s] Iteration: 55% 2620/4796 [05:19&lt;04:22, 8.29it/s] Iteration: 55% 2621/4796 [05:19&lt;04:25, 8.19it/s] Iteration: 55% 2622/4796 [05:19&lt;04:22, 8.28it/s] Iteration: 55% 2623/4796 [05:20&lt;04:23, 8.25it/s] Iteration: 55% 2624/4796 [05:20&lt;04:26, 8.16it/s] Iteration: 55% 2625/4796 [05:20&lt;04:31, 8.00it/s] Iteration: 55% 2626/4796 [05:20&lt;04:28, 8.08it/s] Iteration: 55% 2627/4796 [05:20&lt;04:23, 8.22it/s] Iteration: 55% 2628/4796 [05:20&lt;04:24, 8.20it/s] Iteration: 55% 2629/4796 [05:20&lt;04:28, 8.06it/s] Iteration: 55% 2630/4796 [05:20&lt;04:27, 8.09it/s] Iteration: 55% 2631/4796 [05:21&lt;04:31, 7.97it/s] Iteration: 55% 2632/4796 [05:21&lt;04:28, 8.06it/s] Iteration: 55% 2633/4796 [05:21&lt;04:28, 8.06it/s] Iteration: 55% 2634/4796 [05:21&lt;04:28, 8.04it/s] Iteration: 55% 2635/4796 [05:21&lt;04:27, 8.09it/s] Iteration: 55% 2636/4796 [05:21&lt;04:25, 8.13it/s] Iteration: 55% 2637/4796 [05:21&lt;04:24, 8.16it/s] Iteration: 55% 2638/4796 [05:21&lt;04:29, 7.99it/s] Iteration: 55% 2639/4796 [05:22&lt;04:27, 8.05it/s] Iteration: 55% 2640/4796 [05:22&lt;04:23, 8.17it/s] Iteration: 55% 2641/4796 [05:22&lt;04:20, 8.27it/s] Iteration: 55% 2642/4796 [05:22&lt;04:25, 8.11it/s] Iteration: 55% 2643/4796 [05:22&lt;04:25, 8.10it/s] Iteration: 55% 2644/4796 [05:22&lt;04:25, 8.11it/s] Iteration: 55% 2645/4796 [05:22&lt;04:24, 8.14it/s] Iteration: 55% 2646/4796 [05:22&lt;04:23, 8.16it/s] Iteration: 55% 2647/4796 [05:23&lt;04:26, 8.07it/s] Iteration: 55% 2648/4796 [05:23&lt;04:26, 8.06it/s] Iteration: 55% 2649/4796 [05:23&lt;04:22, 8.19it/s] Iteration: 55% 2650/4796 [05:23&lt;04:21, 8.19it/s] Iteration: 55% 2651/4796 [05:23&lt;04:22, 8.17it/s] Iteration: 55% 2652/4796 [05:23&lt;04:18, 8.28it/s] Iteration: 55% 2653/4796 [05:23&lt;04:20, 8.22it/s] Iteration: 55% 2654/4796 [05:23&lt;04:20, 8.21it/s] Iteration: 55% 2655/4796 [05:24&lt;04:21, 8.19it/s] Iteration: 55% 2656/4796 [05:24&lt;04:24, 8.08it/s] Iteration: 55% 2657/4796 [05:24&lt;04:23, 8.11it/s] Iteration: 55% 2658/4796 [05:24&lt;04:22, 8.14it/s] Iteration: 55% 2659/4796 [05:24&lt;04:21, 8.16it/s] Iteration: 55% 2660/4796 [05:24&lt;04:18, 8.28it/s] Iteration: 55% 2661/4796 [05:24&lt;04:22, 8.14it/s] Iteration: 56% 2662/4796 [05:24&lt;04:21, 8.16it/s] Iteration: 56% 2663/4796 [05:25&lt;04:20, 8.17it/s] Iteration: 56% 2664/4796 [05:25&lt;04:25, 8.03it/s] Iteration: 56% 2665/4796 [05:25&lt;04:20, 8.20it/s] Iteration: 56% 2666/4796 [05:25&lt;04:20, 8.17it/s] Iteration: 56% 2667/4796 [05:25&lt;04:21, 8.14it/s] Iteration: 56% 2668/4796 [05:25&lt;04:22, 8.11it/s] Iteration: 56% 2669/4796 [05:25&lt;04:21, 8.14it/s] Iteration: 56% 2670/4796 [05:25&lt;04:23, 8.07it/s] Iteration: 56% 2671/4796 [05:26&lt;04:20, 8.16it/s] Iteration: 56% 2672/4796 [05:26&lt;04:19, 8.17it/s] Iteration: 56% 2673/4796 [05:26&lt;04:19, 8.18it/s] Iteration: 56% 2674/4796 [05:26&lt;04:24, 8.02it/s] Iteration: 56% 2675/4796 [05:26&lt;04:19, 8.17it/s] Iteration: 56% 2676/4796 [05:26&lt;04:19, 8.16it/s] Iteration: 56% 2677/4796 [05:26&lt;04:18, 8.18it/s] Iteration: 56% 2678/4796 [05:26&lt;04:18, 8.21it/s] Iteration: 56% 2679/4796 [05:26&lt;04:22, 8.07it/s] Iteration: 56% 2680/4796 [05:27&lt;04:21, 8.09it/s] Iteration: 56% 2681/4796 [05:27&lt;04:18, 8.18it/s] Iteration: 56% 2682/4796 [05:27&lt;04:19, 8.15it/s] Iteration: 56% 2683/4796 [05:27&lt;04:22, 8.04it/s] Iteration: 56% 2684/4796 [05:27&lt;04:20, 8.12it/s] Iteration: 56% 2685/4796 [05:27&lt;04:20, 8.11it/s] Iteration: 56% 2686/4796 [05:27&lt;04:19, 8.14it/s] Iteration: 56% 2687/4796 [05:27&lt;04:19, 8.14it/s] Iteration: 56% 2688/4796 [05:28&lt;04:18, 8.17it/s] Iteration: 56% 2689/4796 [05:28&lt;04:21, 8.07it/s] Iteration: 56% 2690/4796 [05:28&lt;04:20, 8.09it/s] Iteration: 56% 2691/4796 [05:28&lt;04:19, 8.13it/s] Iteration: 56% 2692/4796 [05:28&lt;04:17, 8.18it/s] Iteration: 56% 2693/4796 [05:28&lt;04:19, 8.10it/s] Iteration: 56% 2694/4796 [05:28&lt;04:18, 8.14it/s] Iteration: 56% 2695/4796 [05:28&lt;04:16, 8.19it/s] Iteration: 56% 2696/4796 [05:29&lt;04:16, 8.18it/s] Iteration: 56% 2697/4796 [05:29&lt;04:30, 7.77it/s] Iteration: 56% 2698/4796 [05:29&lt;04:25, 7.91it/s] Iteration: 56% 2699/4796 [05:29&lt;04:22, 7.99it/s] Iteration: 56% 2700/4796 [05:29&lt;04:20, 8.06it/s] Iteration: 56% 2701/4796 [05:29&lt;04:16, 8.15it/s] Iteration: 56% 2702/4796 [05:29&lt;04:16, 8.16it/s] Iteration: 56% 2703/4796 [05:29&lt;04:13, 8.25it/s] Iteration: 56% 2704/4796 [05:30&lt;04:13, 8.26it/s] Iteration: 56% 2705/4796 [05:30&lt;04:12, 8.27it/s] Iteration: 56% 2706/4796 [05:30&lt;04:18, 8.09it/s] Iteration: 56% 2707/4796 [05:30&lt;04:16, 8.13it/s] Iteration: 56% 2708/4796 [05:30&lt;04:13, 8.23it/s] Iteration: 56% 2709/4796 [05:30&lt;04:13, 8.23it/s] Iteration: 57% 2710/4796 [05:30&lt;04:13, 8.24it/s] Iteration: 57% 2711/4796 [05:30&lt;04:17, 8.10it/s] Iteration: 57% 2712/4796 [05:31&lt;04:17, 8.11it/s] Iteration: 57% 2713/4796 [05:31&lt;04:15, 8.14it/s] Iteration: 57% 2714/4796 [05:31&lt;04:15, 8.14it/s] Iteration: 57% 2715/4796 [05:31&lt;04:20, 8.00it/s] Iteration: 57% 2716/4796 [05:31&lt;04:15, 8.13it/s] Iteration: 57% 2717/4796 [05:31&lt;04:16, 8.10it/s] Iteration: 57% 2718/4796 [05:31&lt;04:15, 8.15it/s] Iteration: 57% 2719/4796 [05:31&lt;04:14, 8.17it/s] Iteration: 57% 2720/4796 [05:32&lt;04:15, 8.14it/s] Iteration: 57% 2721/4796 [05:32&lt;04:11, 8.27it/s] Iteration: 57% 2722/4796 [05:32&lt;04:11, 8.24it/s] Iteration: 57% 2723/4796 [05:32&lt;04:11, 8.23it/s] Iteration: 57% 2724/4796 [05:32&lt;04:11, 8.24it/s] Iteration: 57% 2725/4796 [05:32&lt;04:14, 8.13it/s] Iteration: 57% 2726/4796 [05:32&lt;04:10, 8.27it/s] Iteration: 57% 2727/4796 [05:32&lt;04:10, 8.25it/s] Iteration: 57% 2728/4796 [05:33&lt;04:12, 8.20it/s] Iteration: 57% 2729/4796 [05:33&lt;04:11, 8.21it/s] Iteration: 57% 2730/4796 [05:33&lt;04:12, 8.18it/s] Iteration: 57% 2731/4796 [05:33&lt;04:12, 8.18it/s] Iteration: 57% 2732/4796 [05:33&lt;04:12, 8.18it/s] Iteration: 57% 2733/4796 [05:33&lt;04:11, 8.21it/s] Iteration: 57% 2734/4796 [05:33&lt;04:13, 8.12it/s] Iteration: 57% 2735/4796 [05:33&lt;04:12, 8.15it/s] Iteration: 57% 2736/4796 [05:33&lt;04:10, 8.23it/s] Iteration: 57% 2737/4796 [05:34&lt;04:07, 8.32it/s] Iteration: 57% 2738/4796 [05:34&lt;04:17, 8.01it/s] Iteration: 57% 2739/4796 [05:34&lt;04:15, 8.05it/s] Iteration: 57% 2740/4796 [05:34&lt;04:14, 8.08it/s] Iteration: 57% 2741/4796 [05:34&lt;04:10, 8.22it/s] Iteration: 57% 2742/4796 [05:34&lt;04:10, 8.21it/s] Iteration: 57% 2743/4796 [05:34&lt;04:10, 8.18it/s] Iteration: 57% 2744/4796 [05:34&lt;04:10, 8.19it/s] Iteration: 57% 2745/4796 [05:35&lt;04:10, 8.20it/s] Iteration: 57% 2746/4796 [05:35&lt;04:09, 8.20it/s] Iteration: 57% 2747/4796 [05:35&lt;04:14, 8.06it/s] Iteration: 57% 2748/4796 [05:35&lt;04:09, 8.22it/s] Iteration: 57% 2749/4796 [05:35&lt;04:10, 8.18it/s] Iteration: 57% 2750/4796 [05:35&lt;04:09, 8.20it/s] Iteration: 57% 2751/4796 [05:35&lt;04:08, 8.22it/s] Iteration: 57% 2752/4796 [05:35&lt;04:11, 8.12it/s] Iteration: 57% 2753/4796 [05:36&lt;04:09, 8.18it/s] Iteration: 57% 2754/4796 [05:36&lt;04:09, 8.18it/s] Iteration: 57% 2755/4796 [05:36&lt;04:13, 8.06it/s] Iteration: 57% 2756/4796 [05:36&lt;04:11, 8.12it/s] Iteration: 57% 2757/4796 [05:36&lt;04:11, 8.10it/s] Iteration: 58% 2758/4796 [05:36&lt;04:09, 8.16it/s] Iteration: 58% 2759/4796 [05:36&lt;04:08, 8.21it/s] Iteration: 58% 2760/4796 [05:36&lt;04:07, 8.22it/s] Iteration: 58% 2761/4796 [05:37&lt;04:13, 8.04it/s] Iteration: 58% 2762/4796 [05:37&lt;04:10, 8.11it/s] Iteration: 58% 2763/4796 [05:37&lt;04:13, 8.02it/s] Iteration: 58% 2764/4796 [05:37&lt;04:08, 8.17it/s] Iteration: 58% 2765/4796 [05:37&lt;04:08, 8.16it/s] Iteration: 58% 2766/4796 [05:37&lt;04:08, 8.18it/s] Iteration: 58% 2767/4796 [05:37&lt;04:05, 8.28it/s] Iteration: 58% 2768/4796 [05:37&lt;04:05, 8.25it/s] Iteration: 58% 2769/4796 [05:38&lt;04:02, 8.37it/s] Iteration: 58% 2770/4796 [05:38&lt;04:07, 8.19it/s] Iteration: 58% 2771/4796 [05:38&lt;04:07, 8.17it/s] Iteration: 58% 2772/4796 [05:38&lt;04:07, 8.19it/s] Iteration: 58% 2773/4796 [05:38&lt;04:03, 8.31it/s] Iteration: 58% 2774/4796 [05:38&lt;04:04, 8.28it/s] Iteration: 58% 2775/4796 [05:38&lt;04:08, 8.14it/s] Iteration: 58% 2776/4796 [05:38&lt;04:06, 8.19it/s] Iteration: 58% 2777/4796 [05:39&lt;04:06, 8.21it/s] Iteration: 58% 2778/4796 [05:39&lt;04:02, 8.32it/s] Iteration: 58% 2779/4796 [05:39&lt;04:03, 8.28it/s] Iteration: 58% 2780/4796 [05:39&lt;04:11, 8.02it/s] Iteration: 58% 2781/4796 [05:39&lt;04:09, 8.08it/s] Iteration: 58% 2782/4796 [05:39&lt;04:06, 8.18it/s] Iteration: 58% 2783/4796 [05:39&lt;04:05, 8.19it/s] Iteration: 58% 2784/4796 [05:39&lt;04:08, 8.09it/s] Iteration: 58% 2785/4796 [05:39&lt;04:04, 8.23it/s] Iteration: 58% 2786/4796 [05:40&lt;04:01, 8.33it/s] Iteration: 58% 2787/4796 [05:40&lt;04:02, 8.28it/s] Iteration: 58% 2788/4796 [05:40&lt;04:04, 8.23it/s] Iteration: 58% 2789/4796 [05:40&lt;04:04, 8.22it/s] Iteration: 58% 2790/4796 [05:40&lt;04:04, 8.20it/s] Iteration: 58% 2791/4796 [05:40&lt;04:04, 8.20it/s] Iteration: 58% 2792/4796 [05:40&lt;04:03, 8.22it/s] Iteration: 58% 2793/4796 [05:40&lt;04:00, 8.33it/s] Iteration: 58% 2794/4796 [05:41&lt;04:06, 8.13it/s] Iteration: 58% 2795/4796 [05:41&lt;04:02, 8.25it/s] Iteration: 58% 2796/4796 [05:41&lt;03:59, 8.34it/s] Iteration: 58% 2797/4796 [05:41&lt;04:00, 8.31it/s] Iteration: 58% 2798/4796 [05:41&lt;03:57, 8.40it/s] Iteration: 58% 2799/4796 [05:41&lt;04:05, 8.13it/s] Iteration: 58% 2800/4796 [05:41&lt;04:05, 8.14it/s] Iteration: 58% 2801/4796 [05:41&lt;04:04, 8.15it/s] Iteration: 58% 2802/4796 [05:42&lt;04:03, 8.18it/s] Iteration: 58% 2803/4796 [05:42&lt;04:03, 8.18it/s] Iteration: 58% 2804/4796 [05:42&lt;04:05, 8.11it/s] Iteration: 58% 2805/4796 [05:42&lt;04:04, 8.15it/s] Iteration: 59% 2806/4796 [05:42&lt;04:03, 8.17it/s] Iteration: 59% 2807/4796 [05:42&lt;04:03, 8.16it/s] Iteration: 59% 2808/4796 [05:42&lt;04:02, 8.19it/s] Iteration: 59% 2809/4796 [05:42&lt;04:00, 8.26it/s] Iteration: 59% 2810/4796 [05:43&lt;04:01, 8.23it/s] Iteration: 59% 2811/4796 [05:43&lt;04:01, 8.21it/s] Iteration: 59% 2812/4796 [05:43&lt;03:58, 8.32it/s] Iteration: 59% 2813/4796 [05:43&lt;04:00, 8.26it/s] Iteration: 59% 2814/4796 [05:43&lt;03:59, 8.27it/s] Iteration: 59% 2815/4796 [05:43&lt;04:00, 8.24it/s] Iteration: 59% 2816/4796 [05:43&lt;04:00, 8.23it/s] Iteration: 59% 2817/4796 [05:43&lt;04:00, 8.22it/s] Iteration: 59% 2818/4796 [05:43&lt;04:00, 8.22it/s] Iteration: 59% 2819/4796 [05:44&lt;03:59, 8.24it/s] Iteration: 59% 2820/4796 [05:44&lt;03:59, 8.25it/s] Iteration: 59% 2821/4796 [05:44&lt;03:57, 8.33it/s] Iteration: 59% 2822/4796 [05:44&lt;04:01, 8.17it/s] Iteration: 59% 2823/4796 [05:44&lt;04:00, 8.20it/s] Iteration: 59% 2824/4796 [05:44&lt;04:00, 8.18it/s] Iteration: 59% 2825/4796 [05:44&lt;03:59, 8.22it/s] Iteration: 59% 2826/4796 [05:44&lt;03:56, 8.33it/s] Iteration: 59% 2827/4796 [05:45&lt;04:00, 8.18it/s] Iteration: 59% 2828/4796 [05:45&lt;04:00, 8.20it/s] Iteration: 59% 2829/4796 [05:45&lt;04:00, 8.17it/s] Iteration: 59% 2830/4796 [05:45&lt;04:02, 8.10it/s] Iteration: 59% 2831/4796 [05:45&lt;04:02, 8.11it/s] Iteration: 59% 2832/4796 [05:45&lt;04:01, 8.13it/s] Iteration: 59% 2833/4796 [05:45&lt;04:03, 8.06it/s] Iteration: 59% 2834/4796 [05:45&lt;04:03, 8.07it/s] Iteration: 59% 2835/4796 [05:46&lt;03:57, 8.25it/s] Iteration: 59% 2836/4796 [05:46&lt;03:55, 8.33it/s] Iteration: 59% 2837/4796 [05:46&lt;03:59, 8.17it/s] Iteration: 59% 2838/4796 [05:46&lt;03:58, 8.20it/s] Iteration: 59% 2839/4796 [05:46&lt;03:55, 8.29it/s] Iteration: 59% 2840/4796 [05:46&lt;03:56, 8.25it/s] Iteration: 59% 2841/4796 [05:46&lt;03:57, 8.22it/s] Iteration: 59% 2842/4796 [05:46&lt;03:57, 8.21it/s] Iteration: 59% 2843/4796 [05:47&lt;03:56, 8.24it/s] Iteration: 59% 2844/4796 [05:47&lt;03:57, 8.23it/s] Iteration: 59% 2845/4796 [05:47&lt;03:57, 8.20it/s] Iteration: 59% 2846/4796 [05:47&lt;03:54, 8.32it/s] Iteration: 59% 2847/4796 [05:47&lt;03:58, 8.17it/s] Iteration: 59% 2848/4796 [05:47&lt;03:55, 8.29it/s] Iteration: 59% 2849/4796 [05:47&lt;03:52, 8.36it/s] Iteration: 59% 2850/4796 [05:47&lt;03:54, 8.31it/s] Iteration: 59% 2851/4796 [05:48&lt;03:54, 8.31it/s] Iteration: 59% 2852/4796 [05:48&lt;03:54, 8.28it/s] Iteration: 59% 2853/4796 [05:48&lt;03:58, 8.13it/s] Iteration: 60% 2854/4796 [05:48&lt;03:58, 8.13it/s] Iteration: 60% 2855/4796 [05:48&lt;03:57, 8.17it/s] Iteration: 60% 2856/4796 [05:48&lt;03:56, 8.19it/s] Iteration: 60% 2857/4796 [05:48&lt;04:00, 8.06it/s] Iteration: 60% 2858/4796 [05:48&lt;03:58, 8.13it/s] Iteration: 60% 2859/4796 [05:48&lt;03:57, 8.16it/s] Iteration: 60% 2860/4796 [05:49&lt;03:56, 8.19it/s] Iteration: 60% 2861/4796 [05:49&lt;03:53, 8.29it/s] Iteration: 60% 2862/4796 [05:49&lt;03:58, 8.12it/s] Iteration: 60% 2863/4796 [05:49&lt;04:00, 8.03it/s] Iteration: 60% 2864/4796 [05:49&lt;03:58, 8.11it/s] Iteration: 60% 2865/4796 [05:49&lt;03:58, 8.10it/s] Iteration: 60% 2866/4796 [05:49&lt;04:00, 8.03it/s] Iteration: 60% 2867/4796 [05:49&lt;03:58, 8.10it/s] Iteration: 60% 2868/4796 [05:50&lt;03:56, 8.14it/s] Iteration: 60% 2869/4796 [05:50&lt;03:55, 8.17it/s] Iteration: 60% 2870/4796 [05:50&lt;03:56, 8.13it/s] Iteration: 60% 2871/4796 [05:50&lt;03:55, 8.18it/s] Iteration: 60% 2872/4796 [05:50&lt;03:54, 8.20it/s] Iteration: 60% 2873/4796 [05:50&lt;03:53, 8.22it/s] Iteration: 60% 2874/4796 [05:50&lt;03:54, 8.21it/s] Iteration: 60% 2875/4796 [05:50&lt;03:58, 8.06it/s] Iteration: 60% 2876/4796 [05:51&lt;03:56, 8.10it/s] Iteration: 60% 2877/4796 [05:51&lt;03:53, 8.22it/s] Iteration: 60% 2878/4796 [05:51&lt;03:53, 8.22it/s] Iteration: 60% 2879/4796 [05:51&lt;03:53, 8.23it/s] Iteration: 60% 2880/4796 [05:51&lt;03:56, 8.10it/s] Iteration: 60% 2881/4796 [05:51&lt;03:55, 8.14it/s] Iteration: 60% 2882/4796 [05:51&lt;03:54, 8.16it/s] Iteration: 60% 2883/4796 [05:51&lt;03:53, 8.19it/s] Iteration: 60% 2884/4796 [05:52&lt;03:52, 8.22it/s] Iteration: 60% 2885/4796 [05:52&lt;03:51, 8.25it/s] Iteration: 60% 2886/4796 [05:52&lt;03:52, 8.23it/s] Iteration: 60% 2887/4796 [05:52&lt;03:49, 8.34it/s] Iteration: 60% 2888/4796 [05:52&lt;03:50, 8.27it/s] Iteration: 60% 2889/4796 [05:52&lt;03:55, 8.08it/s] Iteration: 60% 2890/4796 [05:52&lt;03:54, 8.14it/s] Iteration: 60% 2891/4796 [05:52&lt;03:53, 8.15it/s] Iteration: 60% 2892/4796 [05:53&lt;03:54, 8.14it/s] Iteration: 60% 2893/4796 [05:53&lt;03:52, 8.17it/s] Iteration: 60% 2894/4796 [05:53&lt;03:53, 8.14it/s] Iteration: 60% 2895/4796 [05:53&lt;03:51, 8.20it/s] Iteration: 60% 2896/4796 [05:53&lt;03:51, 8.20it/s] Iteration: 60% 2897/4796 [05:53&lt;03:51, 8.20it/s] Iteration: 60% 2898/4796 [05:53&lt;03:48, 8.30it/s] Iteration: 60% 2899/4796 [05:53&lt;03:49, 8.25it/s] Iteration: 60% 2900/4796 [05:54&lt;03:50, 8.21it/s] Iteration: 60% 2901/4796 [05:54&lt;03:50, 8.23it/s] Iteration: 61% 2902/4796 [05:54&lt;03:50, 8.22it/s] Iteration: 61% 2903/4796 [05:54&lt;03:53, 8.09it/s] Iteration: 61% 2904/4796 [05:54&lt;03:52, 8.12it/s] Iteration: 61% 2905/4796 [05:54&lt;03:49, 8.23it/s] Iteration: 61% 2906/4796 [05:54&lt;03:50, 8.21it/s] Iteration: 61% 2907/4796 [05:54&lt;03:54, 8.06it/s]{&#39;loss&#39;: 0.063097412109375, &#39;learning_rate&#39;: 6.561023074784543e-06, &#39;epoch&#39;: 2.6063386155129273, &#39;step&#39;: 12500} Iteration: 61% 2908/4796 [05:54&lt;03:55, 8.00it/s] Iteration: 61% 2909/4796 [05:55&lt;03:52, 8.12it/s] Iteration: 61% 2910/4796 [05:55&lt;03:51, 8.15it/s] Iteration: 61% 2911/4796 [05:55&lt;03:50, 8.17it/s] Iteration: 61% 2912/4796 [05:55&lt;03:53, 8.07it/s] Iteration: 61% 2913/4796 [05:55&lt;03:49, 8.20it/s] Iteration: 61% 2914/4796 [05:55&lt;03:49, 8.21it/s] Iteration: 61% 2915/4796 [05:55&lt;03:51, 8.13it/s] Iteration: 61% 2916/4796 [05:55&lt;03:47, 8.27it/s] Iteration: 61% 2917/4796 [05:56&lt;03:47, 8.27it/s] Iteration: 61% 2918/4796 [05:56&lt;03:45, 8.32it/s] Iteration: 61% 2919/4796 [05:56&lt;03:47, 8.26it/s] Iteration: 61% 2920/4796 [05:56&lt;03:47, 8.25it/s] Iteration: 61% 2921/4796 [05:56&lt;03:44, 8.35it/s] Iteration: 61% 2922/4796 [05:56&lt;03:46, 8.27it/s] Iteration: 61% 2923/4796 [05:56&lt;03:43, 8.37it/s] Iteration: 61% 2924/4796 [05:56&lt;03:42, 8.40it/s] Iteration: 61% 2925/4796 [05:57&lt;03:44, 8.32it/s] Iteration: 61% 2926/4796 [05:57&lt;03:42, 8.40it/s] Iteration: 61% 2927/4796 [05:57&lt;03:43, 8.34it/s] Iteration: 61% 2928/4796 [05:57&lt;03:46, 8.23it/s] Iteration: 61% 2929/4796 [05:57&lt;03:44, 8.31it/s] Iteration: 61% 2930/4796 [05:57&lt;03:45, 8.28it/s] Iteration: 61% 2931/4796 [05:57&lt;03:45, 8.27it/s] Iteration: 61% 2932/4796 [05:57&lt;03:49, 8.12it/s] Iteration: 61% 2933/4796 [05:58&lt;03:47, 8.18it/s] Iteration: 61% 2934/4796 [05:58&lt;03:47, 8.20it/s] Iteration: 61% 2935/4796 [05:58&lt;03:43, 8.31it/s] Iteration: 61% 2936/4796 [05:58&lt;03:41, 8.40it/s] Iteration: 61% 2937/4796 [05:58&lt;03:48, 8.14it/s] Iteration: 61% 2938/4796 [05:58&lt;03:49, 8.09it/s] Iteration: 61% 2939/4796 [05:58&lt;03:45, 8.24it/s] Iteration: 61% 2940/4796 [05:58&lt;03:42, 8.35it/s] Iteration: 61% 2941/4796 [05:58&lt;03:43, 8.29it/s] Iteration: 61% 2942/4796 [05:59&lt;03:40, 8.40it/s] Iteration: 61% 2943/4796 [05:59&lt;03:44, 8.26it/s] Iteration: 61% 2944/4796 [05:59&lt;03:44, 8.25it/s] Iteration: 61% 2945/4796 [05:59&lt;03:44, 8.24it/s] Iteration: 61% 2946/4796 [05:59&lt;03:49, 8.06it/s] Iteration: 61% 2947/4796 [05:59&lt;03:45, 8.21it/s] Iteration: 61% 2948/4796 [05:59&lt;03:44, 8.22it/s] Iteration: 61% 2949/4796 [05:59&lt;03:44, 8.23it/s] Iteration: 62% 2950/4796 [06:00&lt;03:44, 8.22it/s] Iteration: 62% 2951/4796 [06:00&lt;03:47, 8.11it/s] Iteration: 62% 2952/4796 [06:00&lt;03:46, 8.15it/s] Iteration: 62% 2953/4796 [06:00&lt;03:46, 8.14it/s] Iteration: 62% 2954/4796 [06:00&lt;03:45, 8.16it/s] Iteration: 62% 2955/4796 [06:00&lt;03:45, 8.17it/s] Iteration: 62% 2956/4796 [06:00&lt;03:44, 8.18it/s] Iteration: 62% 2957/4796 [06:00&lt;03:44, 8.20it/s] Iteration: 62% 2958/4796 [06:01&lt;03:43, 8.22it/s] Iteration: 62% 2959/4796 [06:01&lt;03:43, 8.22it/s] Iteration: 62% 2960/4796 [06:01&lt;03:46, 8.09it/s] Iteration: 62% 2961/4796 [06:01&lt;03:46, 8.12it/s] Iteration: 62% 2962/4796 [06:01&lt;03:41, 8.26it/s] Iteration: 62% 2963/4796 [06:01&lt;03:42, 8.23it/s] Iteration: 62% 2964/4796 [06:01&lt;03:45, 8.11it/s] Iteration: 62% 2965/4796 [06:01&lt;03:44, 8.15it/s] Iteration: 62% 2966/4796 [06:02&lt;03:43, 8.18it/s] Iteration: 62% 2967/4796 [06:02&lt;03:43, 8.19it/s] Iteration: 62% 2968/4796 [06:02&lt;03:43, 8.18it/s] Iteration: 62% 2969/4796 [06:02&lt;03:44, 8.15it/s] Iteration: 62% 2970/4796 [06:02&lt;03:43, 8.18it/s] Iteration: 62% 2971/4796 [06:02&lt;03:42, 8.19it/s] Iteration: 62% 2972/4796 [06:02&lt;03:38, 8.33it/s] Iteration: 62% 2973/4796 [06:02&lt;03:39, 8.31it/s] Iteration: 62% 2974/4796 [06:03&lt;03:44, 8.11it/s] Iteration: 62% 2975/4796 [06:03&lt;03:40, 8.24it/s] Iteration: 62% 2976/4796 [06:03&lt;03:41, 8.21it/s] Iteration: 62% 2977/4796 [06:03&lt;03:41, 8.21it/s] Iteration: 62% 2978/4796 [06:03&lt;03:41, 8.19it/s] Iteration: 62% 2979/4796 [06:03&lt;03:42, 8.16it/s] Iteration: 62% 2980/4796 [06:03&lt;03:44, 8.07it/s] Iteration: 62% 2981/4796 [06:03&lt;03:43, 8.13it/s] Iteration: 62% 2982/4796 [06:03&lt;03:42, 8.16it/s] Iteration: 62% 2983/4796 [06:04&lt;03:41, 8.18it/s] Iteration: 62% 2984/4796 [06:04&lt;03:44, 8.07it/s] Iteration: 62% 2985/4796 [06:04&lt;03:43, 8.09it/s] Iteration: 62% 2986/4796 [06:04&lt;03:41, 8.16it/s] Iteration: 62% 2987/4796 [06:04&lt;03:38, 8.27it/s] Iteration: 62% 2988/4796 [06:04&lt;03:41, 8.15it/s] Iteration: 62% 2989/4796 [06:04&lt;03:42, 8.13it/s] Iteration: 62% 2990/4796 [06:04&lt;03:41, 8.16it/s] Iteration: 62% 2991/4796 [06:05&lt;03:38, 8.27it/s] Iteration: 62% 2992/4796 [06:05&lt;03:42, 8.09it/s] Iteration: 62% 2993/4796 [06:05&lt;03:41, 8.15it/s] Iteration: 62% 2994/4796 [06:05&lt;03:40, 8.17it/s] Iteration: 62% 2995/4796 [06:05&lt;03:36, 8.31it/s] Iteration: 62% 2996/4796 [06:05&lt;03:39, 8.20it/s] Iteration: 62% 2997/4796 [06:05&lt;03:43, 8.06it/s] Iteration: 63% 2998/4796 [06:05&lt;03:41, 8.12it/s] Iteration: 63% 2999/4796 [06:06&lt;03:40, 8.15it/s] Iteration: 63% 3000/4796 [06:06&lt;03:42, 8.08it/s] Iteration: 63% 3001/4796 [06:06&lt;03:40, 8.13it/s] Iteration: 63% 3002/4796 [06:06&lt;03:42, 8.07it/s] Iteration: 63% 3003/4796 [06:06&lt;03:37, 8.23it/s] Iteration: 63% 3004/4796 [06:06&lt;03:37, 8.24it/s] Iteration: 63% 3005/4796 [06:06&lt;03:37, 8.24it/s] Iteration: 63% 3006/4796 [06:06&lt;03:40, 8.12it/s] Iteration: 63% 3007/4796 [06:07&lt;03:39, 8.16it/s] Iteration: 63% 3008/4796 [06:07&lt;03:38, 8.18it/s] Iteration: 63% 3009/4796 [06:07&lt;03:38, 8.18it/s] Iteration: 63% 3010/4796 [06:07&lt;03:36, 8.26it/s] Iteration: 63% 3011/4796 [06:07&lt;03:36, 8.26it/s] Iteration: 63% 3012/4796 [06:07&lt;03:37, 8.22it/s] Iteration: 63% 3013/4796 [06:07&lt;03:34, 8.32it/s] Iteration: 63% 3014/4796 [06:07&lt;03:35, 8.28it/s] Iteration: 63% 3015/4796 [06:08&lt;03:33, 8.35it/s] Iteration: 63% 3016/4796 [06:08&lt;03:36, 8.23it/s] Iteration: 63% 3017/4796 [06:08&lt;03:36, 8.23it/s] Iteration: 63% 3018/4796 [06:08&lt;03:38, 8.16it/s] Iteration: 63% 3019/4796 [06:08&lt;03:38, 8.14it/s] Iteration: 63% 3020/4796 [06:08&lt;03:37, 8.15it/s] Iteration: 63% 3021/4796 [06:08&lt;03:45, 7.87it/s] Iteration: 63% 3022/4796 [06:08&lt;03:43, 7.95it/s] Iteration: 63% 3023/4796 [06:09&lt;03:41, 8.02it/s] Iteration: 63% 3024/4796 [06:09&lt;03:39, 8.06it/s] Iteration: 63% 3025/4796 [06:09&lt;03:42, 7.96it/s] Iteration: 63% 3026/4796 [06:09&lt;03:37, 8.12it/s] Iteration: 63% 3027/4796 [06:09&lt;03:37, 8.12it/s] Iteration: 63% 3028/4796 [06:09&lt;03:37, 8.11it/s] Iteration: 63% 3029/4796 [06:09&lt;03:43, 7.91it/s] Iteration: 63% 3030/4796 [06:09&lt;03:40, 8.03it/s] Iteration: 63% 3031/4796 [06:10&lt;03:38, 8.08it/s] Iteration: 63% 3032/4796 [06:10&lt;03:34, 8.22it/s] Iteration: 63% 3033/4796 [06:10&lt;03:32, 8.29it/s] Iteration: 63% 3034/4796 [06:10&lt;03:37, 8.12it/s] Iteration: 63% 3035/4796 [06:10&lt;03:36, 8.12it/s] Iteration: 63% 3036/4796 [06:10&lt;03:35, 8.16it/s] Iteration: 63% 3037/4796 [06:10&lt;03:37, 8.09it/s] Iteration: 63% 3038/4796 [06:10&lt;03:37, 8.10it/s] Iteration: 63% 3039/4796 [06:10&lt;03:35, 8.15it/s] Iteration: 63% 3040/4796 [06:11&lt;03:32, 8.26it/s] Iteration: 63% 3041/4796 [06:11&lt;03:34, 8.20it/s] Iteration: 63% 3042/4796 [06:11&lt;03:34, 8.17it/s] Iteration: 63% 3043/4796 [06:11&lt;03:37, 8.06it/s] Iteration: 63% 3044/4796 [06:11&lt;03:36, 8.09it/s] Iteration: 63% 3045/4796 [06:11&lt;03:36, 8.08it/s] Iteration: 64% 3046/4796 [06:11&lt;03:36, 8.08it/s] Iteration: 64% 3047/4796 [06:11&lt;03:33, 8.19it/s] Iteration: 64% 3048/4796 [06:12&lt;03:35, 8.11it/s] Iteration: 64% 3049/4796 [06:12&lt;03:33, 8.19it/s] Iteration: 64% 3050/4796 [06:12&lt;03:33, 8.18it/s] Iteration: 64% 3051/4796 [06:12&lt;03:31, 8.27it/s] Iteration: 64% 3052/4796 [06:12&lt;03:35, 8.10it/s] Iteration: 64% 3053/4796 [06:12&lt;03:34, 8.12it/s] Iteration: 64% 3054/4796 [06:12&lt;03:36, 8.06it/s] Iteration: 64% 3055/4796 [06:12&lt;03:32, 8.18it/s] Iteration: 64% 3056/4796 [06:13&lt;03:32, 8.20it/s] Iteration: 64% 3057/4796 [06:13&lt;03:34, 8.13it/s] Iteration: 64% 3058/4796 [06:13&lt;03:33, 8.15it/s] Iteration: 64% 3059/4796 [06:13&lt;03:33, 8.13it/s] Iteration: 64% 3060/4796 [06:13&lt;03:31, 8.22it/s] Iteration: 64% 3061/4796 [06:13&lt;03:28, 8.31it/s] Iteration: 64% 3062/4796 [06:13&lt;03:32, 8.16it/s] Iteration: 64% 3063/4796 [06:13&lt;03:34, 8.08it/s] Iteration: 64% 3064/4796 [06:14&lt;03:36, 8.01it/s] Iteration: 64% 3065/4796 [06:14&lt;03:34, 8.09it/s] Iteration: 64% 3066/4796 [06:14&lt;03:35, 8.04it/s] Iteration: 64% 3067/4796 [06:14&lt;03:34, 8.08it/s] Iteration: 64% 3068/4796 [06:14&lt;03:32, 8.13it/s] Iteration: 64% 3069/4796 [06:14&lt;03:32, 8.13it/s] Iteration: 64% 3070/4796 [06:14&lt;03:35, 8.02it/s] Iteration: 64% 3071/4796 [06:14&lt;03:34, 8.03it/s] Iteration: 64% 3072/4796 [06:15&lt;03:32, 8.10it/s] Iteration: 64% 3073/4796 [06:15&lt;03:32, 8.11it/s] Iteration: 64% 3074/4796 [06:15&lt;03:35, 7.98it/s] Iteration: 64% 3075/4796 [06:15&lt;03:34, 8.04it/s] Iteration: 64% 3076/4796 [06:15&lt;03:32, 8.09it/s] Iteration: 64% 3077/4796 [06:15&lt;03:29, 8.19it/s] Iteration: 64% 3078/4796 [06:15&lt;03:29, 8.19it/s] Iteration: 64% 3079/4796 [06:15&lt;03:32, 8.10it/s] Iteration: 64% 3080/4796 [06:16&lt;03:31, 8.12it/s] Iteration: 64% 3081/4796 [06:16&lt;03:29, 8.18it/s] Iteration: 64% 3082/4796 [06:16&lt;03:29, 8.18it/s] Iteration: 64% 3083/4796 [06:16&lt;03:34, 7.99it/s] Iteration: 64% 3084/4796 [06:16&lt;03:32, 8.06it/s] Iteration: 64% 3085/4796 [06:16&lt;03:31, 8.09it/s] Iteration: 64% 3086/4796 [06:16&lt;03:27, 8.22it/s] Iteration: 64% 3087/4796 [06:16&lt;03:27, 8.22it/s] Iteration: 64% 3088/4796 [06:17&lt;03:31, 8.08it/s] Iteration: 64% 3089/4796 [06:17&lt;03:30, 8.11it/s] Iteration: 64% 3090/4796 [06:17&lt;03:29, 8.14it/s] Iteration: 64% 3091/4796 [06:17&lt;03:26, 8.27it/s] Iteration: 64% 3092/4796 [06:17&lt;03:24, 8.35it/s] Iteration: 64% 3093/4796 [06:17&lt;03:25, 8.27it/s] Iteration: 65% 3094/4796 [06:17&lt;03:25, 8.28it/s] Iteration: 65% 3095/4796 [06:17&lt;03:23, 8.35it/s] Iteration: 65% 3096/4796 [06:17&lt;03:24, 8.31it/s] Iteration: 65% 3097/4796 [06:18&lt;03:25, 8.27it/s] Iteration: 65% 3098/4796 [06:18&lt;03:24, 8.30it/s] Iteration: 65% 3099/4796 [06:18&lt;03:25, 8.27it/s] Iteration: 65% 3100/4796 [06:18&lt;03:25, 8.26it/s] Iteration: 65% 3101/4796 [06:18&lt;03:25, 8.25it/s] Iteration: 65% 3102/4796 [06:18&lt;03:27, 8.16it/s] Iteration: 65% 3103/4796 [06:18&lt;03:24, 8.28it/s] Iteration: 65% 3104/4796 [06:18&lt;03:26, 8.21it/s] Iteration: 65% 3105/4796 [06:19&lt;03:25, 8.22it/s] Iteration: 65% 3106/4796 [06:19&lt;03:25, 8.22it/s] Iteration: 65% 3107/4796 [06:19&lt;03:26, 8.19it/s] Iteration: 65% 3108/4796 [06:19&lt;03:25, 8.21it/s] Iteration: 65% 3109/4796 [06:19&lt;03:25, 8.20it/s] Iteration: 65% 3110/4796 [06:19&lt;03:23, 8.29it/s] Iteration: 65% 3111/4796 [06:19&lt;03:24, 8.22it/s] Iteration: 65% 3112/4796 [06:19&lt;03:27, 8.12it/s] Iteration: 65% 3113/4796 [06:20&lt;03:26, 8.16it/s] Iteration: 65% 3114/4796 [06:20&lt;03:23, 8.26it/s] Iteration: 65% 3115/4796 [06:20&lt;03:21, 8.36it/s] Iteration: 65% 3116/4796 [06:20&lt;03:21, 8.33it/s] Iteration: 65% 3117/4796 [06:20&lt;03:24, 8.21it/s] Iteration: 65% 3118/4796 [06:20&lt;03:22, 8.27it/s] Iteration: 65% 3119/4796 [06:20&lt;03:22, 8.27it/s] Iteration: 65% 3120/4796 [06:20&lt;03:23, 8.24it/s] Iteration: 65% 3121/4796 [06:21&lt;03:22, 8.26it/s] Iteration: 65% 3122/4796 [06:21&lt;03:26, 8.09it/s] Iteration: 65% 3123/4796 [06:21&lt;03:22, 8.25it/s] Iteration: 65% 3124/4796 [06:21&lt;03:23, 8.20it/s] Iteration: 65% 3125/4796 [06:21&lt;03:20, 8.33it/s] Iteration: 65% 3126/4796 [06:21&lt;03:20, 8.31it/s] Iteration: 65% 3127/4796 [06:21&lt;03:24, 8.18it/s] Iteration: 65% 3128/4796 [06:21&lt;03:23, 8.18it/s] Iteration: 65% 3129/4796 [06:22&lt;03:24, 8.13it/s] Iteration: 65% 3130/4796 [06:22&lt;03:24, 8.16it/s] Iteration: 65% 3131/4796 [06:22&lt;03:21, 8.26it/s] Iteration: 65% 3132/4796 [06:22&lt;03:22, 8.22it/s] Iteration: 65% 3133/4796 [06:22&lt;03:20, 8.30it/s] Iteration: 65% 3134/4796 [06:22&lt;03:21, 8.26it/s] Iteration: 65% 3135/4796 [06:22&lt;03:21, 8.24it/s] Iteration: 65% 3136/4796 [06:22&lt;03:25, 8.09it/s] Iteration: 65% 3137/4796 [06:22&lt;03:25, 8.07it/s] Iteration: 65% 3138/4796 [06:23&lt;03:22, 8.20it/s] Iteration: 65% 3139/4796 [06:23&lt;03:19, 8.30it/s] Iteration: 65% 3140/4796 [06:23&lt;03:21, 8.23it/s] Iteration: 65% 3141/4796 [06:23&lt;03:18, 8.33it/s] Iteration: 66% 3142/4796 [06:23&lt;03:17, 8.39it/s] Iteration: 66% 3143/4796 [06:23&lt;03:16, 8.40it/s] Iteration: 66% 3144/4796 [06:23&lt;03:17, 8.35it/s] Iteration: 66% 3145/4796 [06:23&lt;03:19, 8.29it/s] Iteration: 66% 3146/4796 [06:24&lt;03:22, 8.14it/s] Iteration: 66% 3147/4796 [06:24&lt;03:21, 8.18it/s] Iteration: 66% 3148/4796 [06:24&lt;03:21, 8.19it/s] Iteration: 66% 3149/4796 [06:24&lt;03:19, 8.27it/s] Iteration: 66% 3150/4796 [06:24&lt;03:23, 8.10it/s] Iteration: 66% 3151/4796 [06:24&lt;03:22, 8.12it/s] Iteration: 66% 3152/4796 [06:24&lt;03:21, 8.15it/s] Iteration: 66% 3153/4796 [06:24&lt;03:20, 8.18it/s] Iteration: 66% 3154/4796 [06:25&lt;03:20, 8.19it/s] Iteration: 66% 3155/4796 [06:25&lt;03:22, 8.09it/s] Iteration: 66% 3156/4796 [06:25&lt;03:21, 8.13it/s] Iteration: 66% 3157/4796 [06:25&lt;03:19, 8.22it/s] Iteration: 66% 3158/4796 [06:25&lt;03:19, 8.20it/s] Iteration: 66% 3159/4796 [06:25&lt;03:23, 8.06it/s] Iteration: 66% 3160/4796 [06:25&lt;03:21, 8.10it/s] Iteration: 66% 3161/4796 [06:25&lt;03:20, 8.14it/s] Iteration: 66% 3162/4796 [06:26&lt;03:20, 8.14it/s] Iteration: 66% 3163/4796 [06:26&lt;03:20, 8.13it/s] Iteration: 66% 3164/4796 [06:26&lt;03:20, 8.14it/s] Iteration: 66% 3165/4796 [06:26&lt;03:20, 8.13it/s] Iteration: 66% 3166/4796 [06:26&lt;03:19, 8.16it/s] Iteration: 66% 3167/4796 [06:26&lt;03:19, 8.18it/s] Iteration: 66% 3168/4796 [06:26&lt;03:18, 8.19it/s] Iteration: 66% 3169/4796 [06:26&lt;03:21, 8.08it/s] Iteration: 66% 3170/4796 [06:27&lt;03:20, 8.09it/s] Iteration: 66% 3171/4796 [06:27&lt;03:19, 8.13it/s] Iteration: 66% 3172/4796 [06:27&lt;03:18, 8.16it/s] Iteration: 66% 3173/4796 [06:27&lt;03:18, 8.16it/s] Iteration: 66% 3174/4796 [06:27&lt;03:20, 8.09it/s] Iteration: 66% 3175/4796 [06:27&lt;03:20, 8.09it/s] Iteration: 66% 3176/4796 [06:27&lt;03:19, 8.14it/s] Iteration: 66% 3177/4796 [06:27&lt;03:17, 8.18it/s] Iteration: 66% 3178/4796 [06:27&lt;03:19, 8.13it/s] Iteration: 66% 3179/4796 [06:28&lt;03:17, 8.20it/s] Iteration: 66% 3180/4796 [06:28&lt;03:17, 8.20it/s] Iteration: 66% 3181/4796 [06:28&lt;03:17, 8.19it/s] Iteration: 66% 3182/4796 [06:28&lt;03:20, 8.06it/s] Iteration: 66% 3183/4796 [06:28&lt;03:18, 8.11it/s] Iteration: 66% 3184/4796 [06:28&lt;03:17, 8.15it/s] Iteration: 66% 3185/4796 [06:28&lt;03:14, 8.27it/s] Iteration: 66% 3186/4796 [06:28&lt;03:15, 8.25it/s] Iteration: 66% 3187/4796 [06:29&lt;03:18, 8.10it/s] Iteration: 66% 3188/4796 [06:29&lt;03:18, 8.11it/s] Iteration: 66% 3189/4796 [06:29&lt;03:14, 8.25it/s] Iteration: 67% 3190/4796 [06:29&lt;03:16, 8.16it/s] Iteration: 67% 3191/4796 [06:29&lt;03:16, 8.15it/s] Iteration: 67% 3192/4796 [06:29&lt;03:15, 8.18it/s] Iteration: 67% 3193/4796 [06:29&lt;03:16, 8.16it/s] Iteration: 67% 3194/4796 [06:29&lt;03:13, 8.28it/s] Iteration: 67% 3195/4796 [06:30&lt;03:14, 8.22it/s] Iteration: 67% 3196/4796 [06:30&lt;03:15, 8.20it/s] Iteration: 67% 3197/4796 [06:30&lt;03:16, 8.13it/s] Iteration: 67% 3198/4796 [06:30&lt;03:15, 8.16it/s] Iteration: 67% 3199/4796 [06:30&lt;03:15, 8.15it/s] Iteration: 67% 3200/4796 [06:30&lt;03:15, 8.15it/s] Iteration: 67% 3201/4796 [06:30&lt;03:18, 8.05it/s] Iteration: 67% 3202/4796 [06:30&lt;03:16, 8.12it/s] Iteration: 67% 3203/4796 [06:31&lt;03:16, 8.09it/s] Iteration: 67% 3204/4796 [06:31&lt;03:13, 8.25it/s] Iteration: 67% 3205/4796 [06:31&lt;03:16, 8.09it/s] Iteration: 67% 3206/4796 [06:31&lt;03:13, 8.21it/s] Iteration: 67% 3207/4796 [06:31&lt;03:11, 8.29it/s] Iteration: 67% 3208/4796 [06:31&lt;03:10, 8.33it/s] Iteration: 67% 3209/4796 [06:31&lt;03:11, 8.28it/s] Iteration: 67% 3210/4796 [06:31&lt;03:14, 8.14it/s] Iteration: 67% 3211/4796 [06:32&lt;03:13, 8.18it/s] Iteration: 67% 3212/4796 [06:32&lt;03:18, 8.00it/s] Iteration: 67% 3213/4796 [06:32&lt;03:16, 8.05it/s] Iteration: 67% 3214/4796 [06:32&lt;03:15, 8.09it/s] Iteration: 67% 3215/4796 [06:32&lt;03:15, 8.10it/s] Iteration: 67% 3216/4796 [06:32&lt;03:14, 8.12it/s] Iteration: 67% 3217/4796 [06:32&lt;03:13, 8.16it/s] Iteration: 67% 3218/4796 [06:32&lt;03:12, 8.18it/s] Iteration: 67% 3219/4796 [06:33&lt;03:15, 8.06it/s] Iteration: 67% 3220/4796 [06:33&lt;03:15, 8.05it/s] Iteration: 67% 3221/4796 [06:33&lt;03:15, 8.05it/s] Iteration: 67% 3222/4796 [06:33&lt;03:14, 8.08it/s] Iteration: 67% 3223/4796 [06:33&lt;03:13, 8.11it/s] Iteration: 67% 3224/4796 [06:33&lt;03:10, 8.24it/s] Iteration: 67% 3225/4796 [06:33&lt;03:10, 8.24it/s] Iteration: 67% 3226/4796 [06:33&lt;03:08, 8.31it/s] Iteration: 67% 3227/4796 [06:33&lt;03:10, 8.22it/s] Iteration: 67% 3228/4796 [06:34&lt;03:17, 7.93it/s] Iteration: 67% 3229/4796 [06:34&lt;03:15, 8.02it/s] Iteration: 67% 3230/4796 [06:34&lt;03:16, 7.98it/s] Iteration: 67% 3231/4796 [06:34&lt;03:14, 8.06it/s] Iteration: 67% 3232/4796 [06:34&lt;03:17, 7.91it/s] Iteration: 67% 3233/4796 [06:34&lt;03:15, 7.99it/s] Iteration: 67% 3234/4796 [06:34&lt;03:12, 8.12it/s] Iteration: 67% 3235/4796 [06:34&lt;03:11, 8.15it/s] Iteration: 67% 3236/4796 [06:35&lt;03:13, 8.08it/s] Iteration: 67% 3237/4796 [06:35&lt;03:12, 8.11it/s] Iteration: 68% 3238/4796 [06:35&lt;03:11, 8.13it/s] Iteration: 68% 3239/4796 [06:35&lt;03:10, 8.17it/s] Iteration: 68% 3240/4796 [06:35&lt;03:10, 8.17it/s] Iteration: 68% 3241/4796 [06:35&lt;03:12, 8.06it/s] Iteration: 68% 3242/4796 [06:35&lt;03:11, 8.13it/s] Iteration: 68% 3243/4796 [06:35&lt;03:11, 8.12it/s] Iteration: 68% 3244/4796 [06:36&lt;03:11, 8.11it/s] Iteration: 68% 3245/4796 [06:36&lt;03:10, 8.13it/s] Iteration: 68% 3246/4796 [06:36&lt;03:10, 8.13it/s] Iteration: 68% 3247/4796 [06:36&lt;03:07, 8.24it/s] Iteration: 68% 3248/4796 [06:36&lt;03:08, 8.23it/s] Iteration: 68% 3249/4796 [06:36&lt;03:09, 8.16it/s] Iteration: 68% 3250/4796 [06:36&lt;03:06, 8.28it/s] Iteration: 68% 3251/4796 [06:36&lt;03:08, 8.18it/s] Iteration: 68% 3252/4796 [06:37&lt;03:07, 8.24it/s] Iteration: 68% 3253/4796 [06:37&lt;03:06, 8.25it/s] Iteration: 68% 3254/4796 [06:37&lt;03:07, 8.25it/s] Iteration: 68% 3255/4796 [06:37&lt;03:10, 8.09it/s] Iteration: 68% 3256/4796 [06:37&lt;03:06, 8.24it/s] Iteration: 68% 3257/4796 [06:37&lt;03:07, 8.23it/s] Iteration: 68% 3258/4796 [06:37&lt;03:06, 8.26it/s] Iteration: 68% 3259/4796 [06:37&lt;03:04, 8.34it/s] Iteration: 68% 3260/4796 [06:38&lt;03:09, 8.11it/s] Iteration: 68% 3261/4796 [06:38&lt;03:11, 8.02it/s] Iteration: 68% 3262/4796 [06:38&lt;03:09, 8.08it/s] Iteration: 68% 3263/4796 [06:38&lt;03:08, 8.12it/s] Iteration: 68% 3264/4796 [06:38&lt;03:11, 8.00it/s] Iteration: 68% 3265/4796 [06:38&lt;03:09, 8.09it/s] Iteration: 68% 3266/4796 [06:38&lt;03:08, 8.10it/s] Iteration: 68% 3267/4796 [06:38&lt;03:08, 8.12it/s] Iteration: 68% 3268/4796 [06:39&lt;03:07, 8.15it/s] Iteration: 68% 3269/4796 [06:39&lt;03:08, 8.10it/s] Iteration: 68% 3270/4796 [06:39&lt;03:07, 8.12it/s] Iteration: 68% 3271/4796 [06:39&lt;03:07, 8.13it/s] Iteration: 68% 3272/4796 [06:39&lt;03:06, 8.15it/s] Iteration: 68% 3273/4796 [06:39&lt;03:09, 8.05it/s] Iteration: 68% 3274/4796 [06:39&lt;03:08, 8.09it/s] Iteration: 68% 3275/4796 [06:39&lt;03:04, 8.25it/s] Iteration: 68% 3276/4796 [06:40&lt;03:02, 8.35it/s] Iteration: 68% 3277/4796 [06:40&lt;03:06, 8.16it/s] Iteration: 68% 3278/4796 [06:40&lt;03:06, 8.15it/s] Iteration: 68% 3279/4796 [06:40&lt;03:05, 8.16it/s] Iteration: 68% 3280/4796 [06:40&lt;03:04, 8.24it/s] Iteration: 68% 3281/4796 [06:40&lt;03:04, 8.22it/s] Iteration: 68% 3282/4796 [06:40&lt;03:04, 8.20it/s] Iteration: 68% 3283/4796 [06:40&lt;03:08, 8.03it/s] Iteration: 68% 3284/4796 [06:41&lt;03:07, 8.07it/s] Iteration: 68% 3285/4796 [06:41&lt;03:03, 8.23it/s] Iteration: 69% 3286/4796 [06:41&lt;03:03, 8.24it/s] Iteration: 69% 3287/4796 [06:41&lt;03:03, 8.20it/s] Iteration: 69% 3288/4796 [06:41&lt;03:03, 8.23it/s] Iteration: 69% 3289/4796 [06:41&lt;03:01, 8.28it/s] Iteration: 69% 3290/4796 [06:41&lt;03:03, 8.19it/s] Iteration: 69% 3291/4796 [06:41&lt;03:04, 8.17it/s] Iteration: 69% 3292/4796 [06:41&lt;03:03, 8.18it/s] Iteration: 69% 3293/4796 [06:42&lt;03:01, 8.26it/s] Iteration: 69% 3294/4796 [06:42&lt;03:01, 8.27it/s] Iteration: 69% 3295/4796 [06:42&lt;03:02, 8.23it/s] Iteration: 69% 3296/4796 [06:42&lt;03:00, 8.31it/s] Iteration: 69% 3297/4796 [06:42&lt;03:01, 8.27it/s] Iteration: 69% 3298/4796 [06:42&lt;03:04, 8.13it/s] Iteration: 69% 3299/4796 [06:42&lt;03:01, 8.23it/s] Iteration: 69% 3300/4796 [06:42&lt;03:01, 8.25it/s] Iteration: 69% 3301/4796 [06:43&lt;03:04, 8.11it/s] Iteration: 69% 3302/4796 [06:43&lt;03:06, 8.01it/s] Iteration: 69% 3303/4796 [06:43&lt;03:04, 8.10it/s] Iteration: 69% 3304/4796 [06:43&lt;03:03, 8.13it/s] Iteration: 69% 3305/4796 [06:43&lt;03:02, 8.16it/s] Iteration: 69% 3306/4796 [06:43&lt;03:03, 8.11it/s] Iteration: 69% 3307/4796 [06:43&lt;03:02, 8.16it/s] Iteration: 69% 3308/4796 [06:43&lt;03:01, 8.18it/s] Iteration: 69% 3309/4796 [06:44&lt;03:01, 8.18it/s] Iteration: 69% 3310/4796 [06:44&lt;03:00, 8.22it/s] Iteration: 69% 3311/4796 [06:44&lt;03:01, 8.18it/s] Iteration: 69% 3312/4796 [06:44&lt;02:58, 8.30it/s] Iteration: 69% 3313/4796 [06:44&lt;02:56, 8.38it/s] Iteration: 69% 3314/4796 [06:44&lt;02:57, 8.35it/s] Iteration: 69% 3315/4796 [06:44&lt;02:56, 8.41it/s] Iteration: 69% 3316/4796 [06:44&lt;03:00, 8.22it/s] Iteration: 69% 3317/4796 [06:45&lt;02:59, 8.22it/s] Iteration: 69% 3318/4796 [06:45&lt;02:59, 8.22it/s] Iteration: 69% 3319/4796 [06:45&lt;03:01, 8.12it/s] Iteration: 69% 3320/4796 [06:45&lt;03:00, 8.17it/s] Iteration: 69% 3321/4796 [06:45&lt;03:03, 8.06it/s] Iteration: 69% 3322/4796 [06:45&lt;02:59, 8.22it/s] Iteration: 69% 3323/4796 [06:45&lt;03:00, 8.18it/s] Iteration: 69% 3324/4796 [06:45&lt;03:00, 8.16it/s] Iteration: 69% 3325/4796 [06:45&lt;02:59, 8.18it/s] Iteration: 69% 3326/4796 [06:46&lt;03:00, 8.16it/s] Iteration: 69% 3327/4796 [06:46&lt;03:00, 8.15it/s] Iteration: 69% 3328/4796 [06:46&lt;02:57, 8.25it/s] Iteration: 69% 3329/4796 [06:46&lt;02:58, 8.21it/s] Iteration: 69% 3330/4796 [06:46&lt;03:01, 8.09it/s] Iteration: 69% 3331/4796 [06:46&lt;02:58, 8.23it/s] Iteration: 69% 3332/4796 [06:46&lt;02:58, 8.22it/s] Iteration: 69% 3333/4796 [06:46&lt;02:56, 8.29it/s] Iteration: 70% 3334/4796 [06:47&lt;02:58, 8.20it/s] Iteration: 70% 3335/4796 [06:47&lt;02:59, 8.12it/s] Iteration: 70% 3336/4796 [06:47&lt;02:57, 8.25it/s] Iteration: 70% 3337/4796 [06:47&lt;02:58, 8.19it/s] Iteration: 70% 3338/4796 [06:47&lt;02:55, 8.29it/s] Iteration: 70% 3339/4796 [06:47&lt;02:56, 8.28it/s] Iteration: 70% 3340/4796 [06:47&lt;02:58, 8.14it/s] Iteration: 70% 3341/4796 [06:47&lt;02:58, 8.16it/s] Iteration: 70% 3342/4796 [06:48&lt;02:58, 8.17it/s] Iteration: 70% 3343/4796 [06:48&lt;02:58, 8.15it/s] Iteration: 70% 3344/4796 [06:48&lt;03:00, 8.05it/s] Iteration: 70% 3345/4796 [06:48&lt;02:58, 8.12it/s] Iteration: 70% 3346/4796 [06:48&lt;02:58, 8.14it/s] Iteration: 70% 3347/4796 [06:48&lt;02:55, 8.25it/s] Iteration: 70% 3348/4796 [06:48&lt;02:55, 8.25it/s] Iteration: 70% 3349/4796 [06:48&lt;02:56, 8.18it/s] Iteration: 70% 3350/4796 [06:49&lt;02:57, 8.15it/s] Iteration: 70% 3351/4796 [06:49&lt;02:56, 8.18it/s] Iteration: 70% 3352/4796 [06:49&lt;02:54, 8.27it/s] Iteration: 70% 3353/4796 [06:49&lt;02:56, 8.19it/s] Iteration: 70% 3354/4796 [06:49&lt;02:55, 8.20it/s] Iteration: 70% 3355/4796 [06:49&lt;02:56, 8.19it/s] Iteration: 70% 3356/4796 [06:49&lt;02:56, 8.16it/s] Iteration: 70% 3357/4796 [06:49&lt;02:55, 8.19it/s] Iteration: 70% 3358/4796 [06:50&lt;02:55, 8.22it/s] Iteration: 70% 3359/4796 [06:50&lt;02:53, 8.28it/s] Iteration: 70% 3360/4796 [06:50&lt;02:54, 8.24it/s] Iteration: 70% 3361/4796 [06:50&lt;02:54, 8.21it/s] Iteration: 70% 3362/4796 [06:50&lt;02:54, 8.21it/s] Iteration: 70% 3363/4796 [06:50&lt;02:57, 8.07it/s] Iteration: 70% 3364/4796 [06:50&lt;02:54, 8.19it/s] Iteration: 70% 3365/4796 [06:50&lt;02:54, 8.19it/s] Iteration: 70% 3366/4796 [06:51&lt;02:54, 8.20it/s] Iteration: 70% 3367/4796 [06:51&lt;02:57, 8.06it/s] Iteration: 70% 3368/4796 [06:51&lt;02:53, 8.22it/s] Iteration: 70% 3369/4796 [06:51&lt;02:52, 8.29it/s] Iteration: 70% 3370/4796 [06:51&lt;02:52, 8.26it/s] Iteration: 70% 3371/4796 [06:51&lt;02:50, 8.33it/s] Iteration: 70% 3372/4796 [06:51&lt;02:55, 8.13it/s] Iteration: 70% 3373/4796 [06:51&lt;02:54, 8.16it/s] Iteration: 70% 3374/4796 [06:51&lt;02:54, 8.16it/s] Iteration: 70% 3375/4796 [06:52&lt;02:52, 8.26it/s] Iteration: 70% 3376/4796 [06:52&lt;02:52, 8.24it/s] Iteration: 70% 3377/4796 [06:52&lt;02:55, 8.09it/s] Iteration: 70% 3378/4796 [06:52&lt;02:54, 8.13it/s] Iteration: 70% 3379/4796 [06:52&lt;02:53, 8.16it/s] Iteration: 70% 3380/4796 [06:52&lt;02:53, 8.17it/s] Iteration: 70% 3381/4796 [06:52&lt;02:55, 8.04it/s] Iteration: 71% 3382/4796 [06:52&lt;02:52, 8.20it/s] Iteration: 71% 3383/4796 [06:53&lt;02:50, 8.30it/s] Iteration: 71% 3384/4796 [06:53&lt;02:48, 8.36it/s] Iteration: 71% 3385/4796 [06:53&lt;02:51, 8.25it/s] Iteration: 71% 3386/4796 [06:53&lt;02:51, 8.21it/s] Iteration: 71% 3387/4796 [06:53&lt;02:52, 8.19it/s] Iteration: 71% 3388/4796 [06:53&lt;02:50, 8.27it/s] Iteration: 71% 3389/4796 [06:53&lt;02:50, 8.26it/s] Iteration: 71% 3390/4796 [06:53&lt;02:50, 8.22it/s] Iteration: 71% 3391/4796 [06:54&lt;02:53, 8.10it/s] Iteration: 71% 3392/4796 [06:54&lt;02:52, 8.13it/s] Iteration: 71% 3393/4796 [06:54&lt;02:53, 8.10it/s] Iteration: 71% 3394/4796 [06:54&lt;02:53, 8.10it/s] Iteration: 71% 3395/4796 [06:54&lt;02:52, 8.11it/s] Iteration: 71% 3396/4796 [06:54&lt;02:51, 8.16it/s] Iteration: 71% 3397/4796 [06:54&lt;02:51, 8.17it/s] Iteration: 71% 3398/4796 [06:54&lt;02:49, 8.25it/s] Iteration: 71% 3399/4796 [06:55&lt;02:49, 8.24it/s] Iteration: 71% 3400/4796 [06:55&lt;02:49, 8.22it/s] Iteration: 71% 3401/4796 [06:55&lt;02:52, 8.08it/s] Iteration: 71% 3402/4796 [06:55&lt;02:53, 8.02it/s] Iteration: 71% 3403/4796 [06:55&lt;02:50, 8.17it/s] Iteration: 71% 3404/4796 [06:55&lt;02:48, 8.27it/s] Iteration: 71% 3405/4796 [06:55&lt;02:50, 8.17it/s] Iteration: 71% 3406/4796 [06:55&lt;02:49, 8.20it/s] Iteration: 71% 3407/4796 [06:56&lt;02:47, 8.29it/s]{&#39;loss&#39;: 0.06034716796875, &#39;learning_rate&#39;: 4.823463997775925e-06, &#39;epoch&#39;: 2.7105921601334444, &#39;step&#39;: 13000} Iteration: 71% 3408/4796 [06:56&lt;02:47, 8.28it/s] Iteration: 71% 3409/4796 [06:56&lt;02:46, 8.31it/s] Iteration: 71% 3410/4796 [06:56&lt;02:50, 8.11it/s] Iteration: 71% 3411/4796 [06:56&lt;02:49, 8.15it/s] Iteration: 71% 3412/4796 [06:56&lt;02:47, 8.27it/s] Iteration: 71% 3413/4796 [06:56&lt;02:47, 8.23it/s] Iteration: 71% 3414/4796 [06:56&lt;02:47, 8.24it/s] Iteration: 71% 3415/4796 [06:56&lt;02:50, 8.10it/s] Iteration: 71% 3416/4796 [06:57&lt;02:49, 8.14it/s] Iteration: 71% 3417/4796 [06:57&lt;02:46, 8.27it/s] Iteration: 71% 3418/4796 [06:57&lt;02:45, 8.35it/s] Iteration: 71% 3419/4796 [06:57&lt;02:48, 8.18it/s] Iteration: 71% 3420/4796 [06:57&lt;02:48, 8.19it/s] Iteration: 71% 3421/4796 [06:57&lt;02:46, 8.28it/s] Iteration: 71% 3422/4796 [06:57&lt;02:46, 8.27it/s] Iteration: 71% 3423/4796 [06:57&lt;02:47, 8.20it/s] Iteration: 71% 3424/4796 [06:58&lt;02:49, 8.07it/s] Iteration: 71% 3425/4796 [06:58&lt;02:48, 8.13it/s] Iteration: 71% 3426/4796 [06:58&lt;02:48, 8.14it/s] Iteration: 71% 3427/4796 [06:58&lt;02:50, 8.04it/s] Iteration: 71% 3428/4796 [06:58&lt;02:46, 8.21it/s] Iteration: 71% 3429/4796 [06:58&lt;02:49, 8.08it/s] Iteration: 72% 3430/4796 [06:58&lt;02:48, 8.13it/s] Iteration: 72% 3431/4796 [06:58&lt;02:47, 8.14it/s] Iteration: 72% 3432/4796 [06:59&lt;02:46, 8.18it/s] Iteration: 72% 3433/4796 [06:59&lt;02:49, 8.04it/s] Iteration: 72% 3434/4796 [06:59&lt;02:47, 8.11it/s] Iteration: 72% 3435/4796 [06:59&lt;02:45, 8.24it/s] Iteration: 72% 3436/4796 [06:59&lt;02:45, 8.24it/s] Iteration: 72% 3437/4796 [06:59&lt;02:45, 8.19it/s] Iteration: 72% 3438/4796 [06:59&lt;02:46, 8.17it/s] Iteration: 72% 3439/4796 [06:59&lt;02:46, 8.14it/s] Iteration: 72% 3440/4796 [07:00&lt;02:46, 8.14it/s] Iteration: 72% 3441/4796 [07:00&lt;02:46, 8.15it/s] Iteration: 72% 3442/4796 [07:00&lt;02:46, 8.14it/s] Iteration: 72% 3443/4796 [07:00&lt;02:48, 8.01it/s] Iteration: 72% 3444/4796 [07:00&lt;02:46, 8.14it/s] Iteration: 72% 3445/4796 [07:00&lt;02:46, 8.13it/s] Iteration: 72% 3446/4796 [07:00&lt;02:43, 8.25it/s] Iteration: 72% 3447/4796 [07:00&lt;02:43, 8.26it/s] Iteration: 72% 3448/4796 [07:01&lt;02:43, 8.23it/s] Iteration: 72% 3449/4796 [07:01&lt;02:43, 8.24it/s] Iteration: 72% 3450/4796 [07:01&lt;02:43, 8.23it/s] Iteration: 72% 3451/4796 [07:01&lt;02:43, 8.21it/s] Iteration: 72% 3452/4796 [07:01&lt;02:43, 8.22it/s] Iteration: 72% 3453/4796 [07:01&lt;02:43, 8.20it/s] Iteration: 72% 3454/4796 [07:01&lt;02:43, 8.19it/s] Iteration: 72% 3455/4796 [07:01&lt;02:44, 8.18it/s] Iteration: 72% 3456/4796 [07:01&lt;02:41, 8.28it/s] Iteration: 72% 3457/4796 [07:02&lt;02:44, 8.13it/s] Iteration: 72% 3458/4796 [07:02&lt;02:44, 8.14it/s] Iteration: 72% 3459/4796 [07:02&lt;02:44, 8.12it/s] Iteration: 72% 3460/4796 [07:02&lt;02:46, 8.05it/s] Iteration: 72% 3461/4796 [07:02&lt;02:44, 8.11it/s] Iteration: 72% 3462/4796 [07:02&lt;02:43, 8.15it/s] Iteration: 72% 3463/4796 [07:02&lt;02:43, 8.16it/s] Iteration: 72% 3464/4796 [07:02&lt;02:43, 8.15it/s] Iteration: 72% 3465/4796 [07:03&lt;02:43, 8.15it/s] Iteration: 72% 3466/4796 [07:03&lt;02:45, 8.04it/s] Iteration: 72% 3467/4796 [07:03&lt;02:43, 8.12it/s] Iteration: 72% 3468/4796 [07:03&lt;02:45, 8.02it/s] Iteration: 72% 3469/4796 [07:03&lt;02:43, 8.09it/s] Iteration: 72% 3470/4796 [07:03&lt;02:40, 8.25it/s] Iteration: 72% 3471/4796 [07:03&lt;02:41, 8.19it/s] Iteration: 72% 3472/4796 [07:03&lt;02:41, 8.21it/s] Iteration: 72% 3473/4796 [07:04&lt;02:41, 8.19it/s] Iteration: 72% 3474/4796 [07:04&lt;02:41, 8.19it/s] Iteration: 72% 3475/4796 [07:04&lt;02:39, 8.26it/s] Iteration: 72% 3476/4796 [07:04&lt;02:38, 8.34it/s] Iteration: 72% 3477/4796 [07:04&lt;02:37, 8.36it/s] Iteration: 73% 3478/4796 [07:04&lt;02:38, 8.34it/s] Iteration: 73% 3479/4796 [07:04&lt;02:38, 8.29it/s] Iteration: 73% 3480/4796 [07:04&lt;02:41, 8.16it/s] Iteration: 73% 3481/4796 [07:05&lt;02:38, 8.29it/s] Iteration: 73% 3482/4796 [07:05&lt;02:39, 8.26it/s] Iteration: 73% 3483/4796 [07:05&lt;02:38, 8.27it/s] Iteration: 73% 3484/4796 [07:05&lt;02:38, 8.26it/s] Iteration: 73% 3485/4796 [07:05&lt;02:43, 8.01it/s] Iteration: 73% 3486/4796 [07:05&lt;02:42, 8.07it/s] Iteration: 73% 3487/4796 [07:05&lt;02:41, 8.12it/s] Iteration: 73% 3488/4796 [07:05&lt;02:40, 8.16it/s] Iteration: 73% 3489/4796 [07:06&lt;02:42, 8.07it/s] Iteration: 73% 3490/4796 [07:06&lt;02:40, 8.14it/s] Iteration: 73% 3491/4796 [07:06&lt;02:39, 8.16it/s] Iteration: 73% 3492/4796 [07:06&lt;02:39, 8.18it/s] Iteration: 73% 3493/4796 [07:06&lt;02:39, 8.18it/s] Iteration: 73% 3494/4796 [07:06&lt;02:39, 8.16it/s] Iteration: 73% 3495/4796 [07:06&lt;02:38, 8.19it/s] Iteration: 73% 3496/4796 [07:06&lt;02:38, 8.20it/s] Iteration: 73% 3497/4796 [07:07&lt;02:38, 8.20it/s] Iteration: 73% 3498/4796 [07:07&lt;02:37, 8.23it/s] Iteration: 73% 3499/4796 [07:07&lt;02:37, 8.22it/s] Iteration: 73% 3500/4796 [07:07&lt;02:36, 8.27it/s] Iteration: 73% 3501/4796 [07:07&lt;02:37, 8.22it/s] Iteration: 73% 3502/4796 [07:07&lt;02:38, 8.18it/s] Iteration: 73% 3503/4796 [07:07&lt;02:38, 8.16it/s] Iteration: 73% 3504/4796 [07:07&lt;02:40, 8.06it/s] Iteration: 73% 3505/4796 [07:07&lt;02:37, 8.21it/s] Iteration: 73% 3506/4796 [07:08&lt;02:37, 8.20it/s] Iteration: 73% 3507/4796 [07:08&lt;02:37, 8.20it/s] Iteration: 73% 3508/4796 [07:08&lt;02:36, 8.21it/s] Iteration: 73% 3509/4796 [07:08&lt;02:39, 8.09it/s] Iteration: 73% 3510/4796 [07:08&lt;02:38, 8.11it/s] Iteration: 73% 3511/4796 [07:08&lt;02:38, 8.12it/s] Iteration: 73% 3512/4796 [07:08&lt;02:38, 8.12it/s] Iteration: 73% 3513/4796 [07:08&lt;02:37, 8.16it/s] Iteration: 73% 3514/4796 [07:09&lt;02:39, 8.03it/s] Iteration: 73% 3515/4796 [07:09&lt;02:38, 8.09it/s] Iteration: 73% 3516/4796 [07:09&lt;02:37, 8.14it/s] Iteration: 73% 3517/4796 [07:09&lt;02:34, 8.26it/s] Iteration: 73% 3518/4796 [07:09&lt;02:39, 8.03it/s] Iteration: 73% 3519/4796 [07:09&lt;02:37, 8.10it/s] Iteration: 73% 3520/4796 [07:09&lt;02:37, 8.10it/s] Iteration: 73% 3521/4796 [07:09&lt;02:38, 8.05it/s] Iteration: 73% 3522/4796 [07:10&lt;02:39, 8.00it/s] Iteration: 73% 3523/4796 [07:10&lt;02:39, 7.97it/s] Iteration: 73% 3524/4796 [07:10&lt;02:38, 8.04it/s] Iteration: 73% 3525/4796 [07:10&lt;02:35, 8.18it/s] Iteration: 74% 3526/4796 [07:10&lt;02:35, 8.16it/s] Iteration: 74% 3527/4796 [07:10&lt;02:37, 8.05it/s] Iteration: 74% 3528/4796 [07:10&lt;02:36, 8.09it/s] Iteration: 74% 3529/4796 [07:10&lt;02:34, 8.19it/s] Iteration: 74% 3530/4796 [07:11&lt;02:33, 8.27it/s] Iteration: 74% 3531/4796 [07:11&lt;02:37, 8.05it/s] Iteration: 74% 3532/4796 [07:11&lt;02:35, 8.11it/s] Iteration: 74% 3533/4796 [07:11&lt;02:33, 8.22it/s] Iteration: 74% 3534/4796 [07:11&lt;02:33, 8.22it/s] Iteration: 74% 3535/4796 [07:11&lt;02:34, 8.16it/s] Iteration: 74% 3536/4796 [07:11&lt;02:36, 8.05it/s] Iteration: 74% 3537/4796 [07:11&lt;02:33, 8.19it/s] Iteration: 74% 3538/4796 [07:12&lt;02:32, 8.25it/s] Iteration: 74% 3539/4796 [07:12&lt;02:31, 8.30it/s] Iteration: 74% 3540/4796 [07:12&lt;02:32, 8.26it/s] Iteration: 74% 3541/4796 [07:12&lt;02:35, 8.05it/s] Iteration: 74% 3542/4796 [07:12&lt;02:35, 8.08it/s] Iteration: 74% 3543/4796 [07:12&lt;02:34, 8.10it/s] Iteration: 74% 3544/4796 [07:12&lt;02:36, 8.02it/s] Iteration: 74% 3545/4796 [07:12&lt;02:32, 8.19it/s] Iteration: 74% 3546/4796 [07:13&lt;02:34, 8.09it/s] Iteration: 74% 3547/4796 [07:13&lt;02:35, 8.06it/s] Iteration: 74% 3548/4796 [07:13&lt;02:32, 8.19it/s] Iteration: 74% 3549/4796 [07:13&lt;02:32, 8.19it/s] Iteration: 74% 3550/4796 [07:13&lt;02:34, 8.06it/s] Iteration: 74% 3551/4796 [07:13&lt;02:35, 8.02it/s] Iteration: 74% 3552/4796 [07:13&lt;02:34, 8.05it/s] Iteration: 74% 3553/4796 [07:13&lt;02:35, 8.02it/s] Iteration: 74% 3554/4796 [07:14&lt;02:34, 8.04it/s] Iteration: 74% 3555/4796 [07:14&lt;02:33, 8.06it/s] Iteration: 74% 3556/4796 [07:14&lt;02:33, 8.08it/s] Iteration: 74% 3557/4796 [07:14&lt;02:32, 8.12it/s] Iteration: 74% 3558/4796 [07:14&lt;02:32, 8.14it/s] Iteration: 74% 3559/4796 [07:14&lt;02:33, 8.05it/s] Iteration: 74% 3560/4796 [07:14&lt;02:32, 8.10it/s] Iteration: 74% 3561/4796 [07:14&lt;02:32, 8.09it/s] Iteration: 74% 3562/4796 [07:15&lt;02:30, 8.21it/s] Iteration: 74% 3563/4796 [07:15&lt;02:32, 8.08it/s] Iteration: 74% 3564/4796 [07:15&lt;02:29, 8.23it/s] Iteration: 74% 3565/4796 [07:15&lt;02:30, 8.20it/s] Iteration: 74% 3566/4796 [07:15&lt;02:30, 8.20it/s] Iteration: 74% 3567/4796 [07:15&lt;02:28, 8.27it/s] Iteration: 74% 3568/4796 [07:15&lt;02:31, 8.09it/s] Iteration: 74% 3569/4796 [07:15&lt;02:31, 8.11it/s] Iteration: 74% 3570/4796 [07:15&lt;02:31, 8.09it/s] Iteration: 74% 3571/4796 [07:16&lt;02:31, 8.10it/s] Iteration: 74% 3572/4796 [07:16&lt;02:30, 8.13it/s] Iteration: 74% 3573/4796 [07:16&lt;02:28, 8.22it/s] Iteration: 75% 3574/4796 [07:16&lt;02:29, 8.20it/s] Iteration: 75% 3575/4796 [07:16&lt;02:29, 8.14it/s] Iteration: 75% 3576/4796 [07:16&lt;02:29, 8.15it/s] Iteration: 75% 3577/4796 [07:16&lt;02:29, 8.17it/s] Iteration: 75% 3578/4796 [07:16&lt;02:29, 8.16it/s] Iteration: 75% 3579/4796 [07:17&lt;02:28, 8.18it/s] Iteration: 75% 3580/4796 [07:17&lt;02:28, 8.18it/s] Iteration: 75% 3581/4796 [07:17&lt;02:29, 8.13it/s] Iteration: 75% 3582/4796 [07:17&lt;02:28, 8.17it/s] Iteration: 75% 3583/4796 [07:17&lt;02:28, 8.16it/s] Iteration: 75% 3584/4796 [07:17&lt;02:29, 8.08it/s] Iteration: 75% 3585/4796 [07:17&lt;02:29, 8.11it/s] Iteration: 75% 3586/4796 [07:17&lt;02:31, 8.01it/s] Iteration: 75% 3587/4796 [07:18&lt;02:29, 8.09it/s] Iteration: 75% 3588/4796 [07:18&lt;02:29, 8.10it/s] Iteration: 75% 3589/4796 [07:18&lt;02:26, 8.22it/s] Iteration: 75% 3590/4796 [07:18&lt;02:29, 8.08it/s] Iteration: 75% 3591/4796 [07:18&lt;02:29, 8.06it/s] Iteration: 75% 3592/4796 [07:18&lt;02:29, 8.03it/s] Iteration: 75% 3593/4796 [07:18&lt;02:27, 8.16it/s] Iteration: 75% 3594/4796 [07:18&lt;02:26, 8.18it/s] Iteration: 75% 3595/4796 [07:19&lt;02:24, 8.28it/s] Iteration: 75% 3596/4796 [07:19&lt;02:25, 8.22it/s] Iteration: 75% 3597/4796 [07:19&lt;02:26, 8.21it/s] Iteration: 75% 3598/4796 [07:19&lt;02:25, 8.21it/s] Iteration: 75% 3599/4796 [07:19&lt;02:25, 8.21it/s] Iteration: 75% 3600/4796 [07:19&lt;02:28, 8.08it/s] Iteration: 75% 3601/4796 [07:19&lt;02:27, 8.09it/s] Iteration: 75% 3602/4796 [07:19&lt;02:26, 8.13it/s] Iteration: 75% 3603/4796 [07:20&lt;02:27, 8.11it/s] Iteration: 75% 3604/4796 [07:20&lt;02:29, 7.99it/s] Iteration: 75% 3605/4796 [07:20&lt;02:26, 8.16it/s] Iteration: 75% 3606/4796 [07:20&lt;02:25, 8.16it/s] Iteration: 75% 3607/4796 [07:20&lt;02:25, 8.18it/s] Iteration: 75% 3608/4796 [07:20&lt;02:25, 8.18it/s] Iteration: 75% 3609/4796 [07:20&lt;02:27, 8.05it/s] Iteration: 75% 3610/4796 [07:20&lt;02:27, 8.05it/s] Iteration: 75% 3611/4796 [07:21&lt;02:24, 8.19it/s] Iteration: 75% 3612/4796 [07:21&lt;02:24, 8.17it/s] Iteration: 75% 3613/4796 [07:21&lt;02:27, 8.00it/s] Iteration: 75% 3614/4796 [07:21&lt;02:27, 8.03it/s] Iteration: 75% 3615/4796 [07:21&lt;02:26, 8.04it/s] Iteration: 75% 3616/4796 [07:21&lt;02:25, 8.09it/s] Iteration: 75% 3617/4796 [07:21&lt;02:27, 8.01it/s] Iteration: 75% 3618/4796 [07:21&lt;02:25, 8.08it/s] Iteration: 75% 3619/4796 [07:22&lt;02:23, 8.20it/s] Iteration: 75% 3620/4796 [07:22&lt;02:23, 8.20it/s] Iteration: 76% 3621/4796 [07:22&lt;02:24, 8.13it/s] Iteration: 76% 3622/4796 [07:22&lt;02:24, 8.15it/s] Iteration: 76% 3623/4796 [07:22&lt;02:23, 8.16it/s] Iteration: 76% 3624/4796 [07:22&lt;02:23, 8.16it/s] Iteration: 76% 3625/4796 [07:22&lt;02:23, 8.16it/s] Iteration: 76% 3626/4796 [07:22&lt;02:23, 8.18it/s] Iteration: 76% 3627/4796 [07:23&lt;02:22, 8.18it/s] Iteration: 76% 3628/4796 [07:23&lt;02:23, 8.16it/s] Iteration: 76% 3629/4796 [07:23&lt;02:21, 8.25it/s] Iteration: 76% 3630/4796 [07:23&lt;02:21, 8.25it/s] Iteration: 76% 3631/4796 [07:23&lt;02:20, 8.31it/s] Iteration: 76% 3632/4796 [07:23&lt;02:23, 8.14it/s] Iteration: 76% 3633/4796 [07:23&lt;02:20, 8.26it/s] Iteration: 76% 3634/4796 [07:23&lt;02:23, 8.11it/s] Iteration: 76% 3635/4796 [07:23&lt;02:21, 8.21it/s] Iteration: 76% 3636/4796 [07:24&lt;02:21, 8.19it/s] Iteration: 76% 3637/4796 [07:24&lt;02:23, 8.05it/s] Iteration: 76% 3638/4796 [07:24&lt;02:21, 8.19it/s] Iteration: 76% 3639/4796 [07:24&lt;02:21, 8.19it/s] Iteration: 76% 3640/4796 [07:24&lt;02:19, 8.30it/s] Iteration: 76% 3641/4796 [07:24&lt;02:20, 8.25it/s] Iteration: 76% 3642/4796 [07:24&lt;02:27, 7.84it/s] Iteration: 76% 3643/4796 [07:24&lt;02:25, 7.93it/s] Iteration: 76% 3644/4796 [07:25&lt;02:22, 8.10it/s] Iteration: 76% 3645/4796 [07:25&lt;02:19, 8.23it/s] Iteration: 76% 3646/4796 [07:25&lt;02:20, 8.18it/s] Iteration: 76% 3647/4796 [07:25&lt;02:20, 8.18it/s] Iteration: 76% 3648/4796 [07:25&lt;02:18, 8.27it/s] Iteration: 76% 3649/4796 [07:25&lt;02:19, 8.25it/s] Iteration: 76% 3650/4796 [07:25&lt;02:17, 8.31it/s] Iteration: 76% 3651/4796 [07:25&lt;02:20, 8.16it/s] Iteration: 76% 3652/4796 [07:26&lt;02:19, 8.20it/s] Iteration: 76% 3653/4796 [07:26&lt;02:17, 8.30it/s] Iteration: 76% 3654/4796 [07:26&lt;02:19, 8.18it/s] Iteration: 76% 3655/4796 [07:26&lt;02:19, 8.20it/s] Iteration: 76% 3656/4796 [07:26&lt;02:21, 8.08it/s] Iteration: 76% 3657/4796 [07:26&lt;02:21, 8.07it/s] Iteration: 76% 3658/4796 [07:26&lt;02:19, 8.14it/s] Iteration: 76% 3659/4796 [07:26&lt;02:19, 8.14it/s] Iteration: 76% 3660/4796 [07:27&lt;02:21, 8.04it/s] Iteration: 76% 3661/4796 [07:27&lt;02:20, 8.09it/s] Iteration: 76% 3662/4796 [07:27&lt;02:19, 8.13it/s] Iteration: 76% 3663/4796 [07:27&lt;02:19, 8.09it/s] Iteration: 76% 3664/4796 [07:27&lt;02:19, 8.11it/s] Iteration: 76% 3665/4796 [07:27&lt;02:19, 8.13it/s] Iteration: 76% 3666/4796 [07:27&lt;02:18, 8.15it/s] Iteration: 76% 3667/4796 [07:27&lt;02:18, 8.18it/s] Iteration: 76% 3668/4796 [07:28&lt;02:18, 8.13it/s] Iteration: 77% 3669/4796 [07:28&lt;02:20, 8.03it/s] Iteration: 77% 3670/4796 [07:28&lt;02:17, 8.20it/s] Iteration: 77% 3671/4796 [07:28&lt;02:15, 8.29it/s] Iteration: 77% 3672/4796 [07:28&lt;02:16, 8.25it/s] Iteration: 77% 3673/4796 [07:28&lt;02:16, 8.22it/s] Iteration: 77% 3674/4796 [07:28&lt;02:18, 8.08it/s] Iteration: 77% 3675/4796 [07:28&lt;02:18, 8.09it/s] Iteration: 77% 3676/4796 [07:29&lt;02:17, 8.15it/s] Iteration: 77% 3677/4796 [07:29&lt;02:17, 8.17it/s] Iteration: 77% 3678/4796 [07:29&lt;02:19, 8.02it/s] Iteration: 77% 3679/4796 [07:29&lt;02:18, 8.08it/s] Iteration: 77% 3680/4796 [07:29&lt;02:16, 8.18it/s] Iteration: 77% 3681/4796 [07:29&lt;02:16, 8.19it/s] Iteration: 77% 3682/4796 [07:29&lt;02:16, 8.19it/s] Iteration: 77% 3683/4796 [07:29&lt;02:18, 8.05it/s] Iteration: 77% 3684/4796 [07:29&lt;02:17, 8.07it/s] Iteration: 77% 3685/4796 [07:30&lt;02:16, 8.12it/s] Iteration: 77% 3686/4796 [07:30&lt;02:16, 8.14it/s] Iteration: 77% 3687/4796 [07:30&lt;02:16, 8.14it/s] Iteration: 77% 3688/4796 [07:30&lt;02:15, 8.15it/s] Iteration: 77% 3689/4796 [07:30&lt;02:16, 8.10it/s] Iteration: 77% 3690/4796 [07:30&lt;02:16, 8.12it/s] Iteration: 77% 3691/4796 [07:30&lt;02:16, 8.11it/s] Iteration: 77% 3692/4796 [07:30&lt;02:16, 8.08it/s] Iteration: 77% 3693/4796 [07:31&lt;02:17, 8.05it/s] Iteration: 77% 3694/4796 [07:31&lt;02:16, 8.08it/s] Iteration: 77% 3695/4796 [07:31&lt;02:15, 8.13it/s] Iteration: 77% 3696/4796 [07:31&lt;02:14, 8.18it/s] Iteration: 77% 3697/4796 [07:31&lt;02:16, 8.08it/s] Iteration: 77% 3698/4796 [07:31&lt;02:13, 8.20it/s] Iteration: 77% 3699/4796 [07:31&lt;02:13, 8.23it/s] Iteration: 77% 3700/4796 [07:31&lt;02:13, 8.18it/s] Iteration: 77% 3701/4796 [07:32&lt;02:15, 8.06it/s] Iteration: 77% 3702/4796 [07:32&lt;02:15, 8.09it/s] Iteration: 77% 3703/4796 [07:32&lt;02:15, 8.09it/s] Iteration: 77% 3704/4796 [07:32&lt;02:14, 8.11it/s] Iteration: 77% 3705/4796 [07:32&lt;02:14, 8.14it/s] Iteration: 77% 3706/4796 [07:32&lt;02:13, 8.16it/s] Iteration: 77% 3707/4796 [07:32&lt;02:13, 8.18it/s] Iteration: 77% 3708/4796 [07:32&lt;02:15, 8.03it/s] Iteration: 77% 3709/4796 [07:33&lt;02:14, 8.08it/s] Iteration: 77% 3710/4796 [07:33&lt;02:14, 8.10it/s] Iteration: 77% 3711/4796 [07:33&lt;02:13, 8.12it/s] Iteration: 77% 3712/4796 [07:33&lt;02:13, 8.13it/s] Iteration: 77% 3713/4796 [07:33&lt;02:12, 8.16it/s] Iteration: 77% 3714/4796 [07:33&lt;02:11, 8.25it/s] Iteration: 77% 3715/4796 [07:33&lt;02:13, 8.11it/s] Iteration: 77% 3716/4796 [07:33&lt;02:12, 8.14it/s] Iteration: 78% 3717/4796 [07:34&lt;02:12, 8.15it/s] Iteration: 78% 3718/4796 [07:34&lt;02:12, 8.12it/s] Iteration: 78% 3719/4796 [07:34&lt;02:12, 8.14it/s] Iteration: 78% 3720/4796 [07:34&lt;02:12, 8.09it/s] Iteration: 78% 3721/4796 [07:34&lt;02:12, 8.11it/s] Iteration: 78% 3722/4796 [07:34&lt;02:13, 8.07it/s] Iteration: 78% 3723/4796 [07:34&lt;02:12, 8.12it/s] Iteration: 78% 3724/4796 [07:34&lt;02:13, 8.01it/s] Iteration: 78% 3725/4796 [07:35&lt;02:12, 8.06it/s] Iteration: 78% 3726/4796 [07:35&lt;02:12, 8.08it/s] Iteration: 78% 3727/4796 [07:35&lt;02:11, 8.11it/s] Iteration: 78% 3728/4796 [07:35&lt;02:12, 8.03it/s] Iteration: 78% 3729/4796 [07:35&lt;02:10, 8.18it/s] Iteration: 78% 3730/4796 [07:35&lt;02:09, 8.21it/s] Iteration: 78% 3731/4796 [07:35&lt;02:09, 8.21it/s] Iteration: 78% 3732/4796 [07:35&lt;02:12, 8.02it/s] Iteration: 78% 3733/4796 [07:36&lt;02:12, 8.04it/s] Iteration: 78% 3734/4796 [07:36&lt;02:10, 8.15it/s] Iteration: 78% 3735/4796 [07:36&lt;02:09, 8.17it/s] Iteration: 78% 3736/4796 [07:36&lt;02:09, 8.20it/s] Iteration: 78% 3737/4796 [07:36&lt;02:12, 8.02it/s] Iteration: 78% 3738/4796 [07:36&lt;02:10, 8.08it/s] Iteration: 78% 3739/4796 [07:36&lt;02:10, 8.12it/s] Iteration: 78% 3740/4796 [07:36&lt;02:08, 8.24it/s] Iteration: 78% 3741/4796 [07:37&lt;02:08, 8.20it/s] Iteration: 78% 3742/4796 [07:37&lt;02:10, 8.08it/s] Iteration: 78% 3743/4796 [07:37&lt;02:09, 8.10it/s] Iteration: 78% 3744/4796 [07:37&lt;02:09, 8.13it/s] Iteration: 78% 3745/4796 [07:37&lt;02:07, 8.25it/s] Iteration: 78% 3746/4796 [07:37&lt;02:09, 8.11it/s] Iteration: 78% 3747/4796 [07:37&lt;02:09, 8.13it/s] Iteration: 78% 3748/4796 [07:37&lt;02:08, 8.13it/s] Iteration: 78% 3749/4796 [07:37&lt;02:07, 8.24it/s] Iteration: 78% 3750/4796 [07:38&lt;02:07, 8.23it/s] Iteration: 78% 3751/4796 [07:38&lt;02:08, 8.15it/s] Iteration: 78% 3752/4796 [07:38&lt;02:07, 8.16it/s] Iteration: 78% 3753/4796 [07:38&lt;02:06, 8.26it/s] Iteration: 78% 3754/4796 [07:38&lt;02:06, 8.22it/s] Iteration: 78% 3755/4796 [07:38&lt;02:09, 8.05it/s] Iteration: 78% 3756/4796 [07:38&lt;02:08, 8.08it/s] Iteration: 78% 3757/4796 [07:38&lt;02:07, 8.12it/s] Iteration: 78% 3758/4796 [07:39&lt;02:06, 8.24it/s] Iteration: 78% 3759/4796 [07:39&lt;02:06, 8.19it/s] Iteration: 78% 3760/4796 [07:39&lt;02:05, 8.28it/s] Iteration: 78% 3761/4796 [07:39&lt;02:03, 8.36it/s] Iteration: 78% 3762/4796 [07:39&lt;02:04, 8.29it/s] Iteration: 78% 3763/4796 [07:39&lt;02:05, 8.26it/s] Iteration: 78% 3764/4796 [07:39&lt;02:05, 8.20it/s] Iteration: 79% 3765/4796 [07:39&lt;02:09, 7.97it/s] Iteration: 79% 3766/4796 [07:40&lt;02:08, 8.04it/s] Iteration: 79% 3767/4796 [07:40&lt;02:08, 8.04it/s] Iteration: 79% 3768/4796 [07:40&lt;02:05, 8.20it/s] Iteration: 79% 3769/4796 [07:40&lt;02:06, 8.10it/s] Iteration: 79% 3770/4796 [07:40&lt;02:06, 8.12it/s] Iteration: 79% 3771/4796 [07:40&lt;02:03, 8.27it/s] Iteration: 79% 3772/4796 [07:40&lt;02:04, 8.23it/s] Iteration: 79% 3773/4796 [07:40&lt;02:07, 8.05it/s] Iteration: 79% 3774/4796 [07:41&lt;02:06, 8.05it/s] Iteration: 79% 3775/4796 [07:41&lt;02:05, 8.14it/s] Iteration: 79% 3776/4796 [07:41&lt;02:05, 8.16it/s] Iteration: 79% 3777/4796 [07:41&lt;02:03, 8.23it/s] Iteration: 79% 3778/4796 [07:41&lt;02:05, 8.10it/s] Iteration: 79% 3779/4796 [07:41&lt;02:03, 8.24it/s] Iteration: 79% 3780/4796 [07:41&lt;02:02, 8.32it/s] Iteration: 79% 3781/4796 [07:41&lt;02:02, 8.27it/s] Iteration: 79% 3782/4796 [07:42&lt;02:03, 8.20it/s] Iteration: 79% 3783/4796 [07:42&lt;02:03, 8.18it/s] Iteration: 79% 3784/4796 [07:42&lt;02:04, 8.15it/s] Iteration: 79% 3785/4796 [07:42&lt;02:04, 8.14it/s] Iteration: 79% 3786/4796 [07:42&lt;02:04, 8.12it/s] Iteration: 79% 3787/4796 [07:42&lt;02:03, 8.15it/s] Iteration: 79% 3788/4796 [07:42&lt;02:02, 8.20it/s] Iteration: 79% 3789/4796 [07:42&lt;02:02, 8.20it/s] Iteration: 79% 3790/4796 [07:43&lt;02:02, 8.21it/s] Iteration: 79% 3791/4796 [07:43&lt;02:00, 8.32it/s] Iteration: 79% 3792/4796 [07:43&lt;02:01, 8.25it/s] Iteration: 79% 3793/4796 [07:43&lt;02:01, 8.25it/s] Iteration: 79% 3794/4796 [07:43&lt;02:02, 8.21it/s] Iteration: 79% 3795/4796 [07:43&lt;02:01, 8.22it/s] Iteration: 79% 3796/4796 [07:43&lt;02:02, 8.18it/s] Iteration: 79% 3797/4796 [07:43&lt;02:03, 8.07it/s] Iteration: 79% 3798/4796 [07:43&lt;02:03, 8.11it/s] Iteration: 79% 3799/4796 [07:44&lt;02:03, 8.08it/s] Iteration: 79% 3800/4796 [07:44&lt;02:02, 8.14it/s] Iteration: 79% 3801/4796 [07:44&lt;02:02, 8.15it/s] Iteration: 79% 3802/4796 [07:44&lt;02:00, 8.26it/s] Iteration: 79% 3803/4796 [07:44&lt;02:00, 8.23it/s] Iteration: 79% 3804/4796 [07:44&lt;02:00, 8.20it/s] Iteration: 79% 3805/4796 [07:44&lt;02:00, 8.25it/s] Iteration: 79% 3806/4796 [07:44&lt;02:00, 8.24it/s] Iteration: 79% 3807/4796 [07:45&lt;02:00, 8.21it/s] Iteration: 79% 3808/4796 [07:45&lt;02:00, 8.19it/s] Iteration: 79% 3809/4796 [07:45&lt;02:02, 8.05it/s] Iteration: 79% 3810/4796 [07:45&lt;02:01, 8.11it/s] Iteration: 79% 3811/4796 [07:45&lt;02:01, 8.09it/s] Iteration: 79% 3812/4796 [07:45&lt;02:00, 8.13it/s] Iteration: 80% 3813/4796 [07:45&lt;02:01, 8.10it/s] Iteration: 80% 3814/4796 [07:45&lt;01:59, 8.23it/s] Iteration: 80% 3815/4796 [07:46&lt;02:01, 8.09it/s] Iteration: 80% 3816/4796 [07:46&lt;02:00, 8.11it/s] Iteration: 80% 3817/4796 [07:46&lt;02:00, 8.12it/s] Iteration: 80% 3818/4796 [07:46&lt;01:59, 8.16it/s] Iteration: 80% 3819/4796 [07:46&lt;02:01, 8.02it/s] Iteration: 80% 3820/4796 [07:46&lt;02:01, 8.06it/s] Iteration: 80% 3821/4796 [07:46&lt;02:00, 8.09it/s] Iteration: 80% 3822/4796 [07:46&lt;01:59, 8.15it/s] Iteration: 80% 3823/4796 [07:47&lt;01:59, 8.18it/s] Iteration: 80% 3824/4796 [07:47&lt;02:00, 8.07it/s] Iteration: 80% 3825/4796 [07:47&lt;01:59, 8.12it/s] Iteration: 80% 3826/4796 [07:47&lt;01:59, 8.15it/s] Iteration: 80% 3827/4796 [07:47&lt;01:58, 8.15it/s] Iteration: 80% 3828/4796 [07:47&lt;01:56, 8.29it/s] Iteration: 80% 3829/4796 [07:47&lt;01:57, 8.23it/s] Iteration: 80% 3830/4796 [07:47&lt;01:57, 8.24it/s] Iteration: 80% 3831/4796 [07:48&lt;01:57, 8.21it/s] Iteration: 80% 3832/4796 [07:48&lt;01:59, 8.08it/s] Iteration: 80% 3833/4796 [07:48&lt;01:58, 8.10it/s] Iteration: 80% 3834/4796 [07:48&lt;01:58, 8.09it/s] Iteration: 80% 3835/4796 [07:48&lt;01:57, 8.17it/s] Iteration: 80% 3836/4796 [07:48&lt;01:57, 8.19it/s] Iteration: 80% 3837/4796 [07:48&lt;01:56, 8.21it/s] Iteration: 80% 3838/4796 [07:48&lt;01:56, 8.25it/s] Iteration: 80% 3839/4796 [07:49&lt;01:56, 8.21it/s] Iteration: 80% 3840/4796 [07:49&lt;01:56, 8.20it/s] Iteration: 80% 3841/4796 [07:49&lt;01:56, 8.21it/s] Iteration: 80% 3842/4796 [07:49&lt;01:56, 8.20it/s] Iteration: 80% 3843/4796 [07:49&lt;01:56, 8.15it/s] Iteration: 80% 3844/4796 [07:49&lt;01:55, 8.27it/s] Iteration: 80% 3845/4796 [07:49&lt;01:55, 8.26it/s] Iteration: 80% 3846/4796 [07:49&lt;01:54, 8.33it/s] Iteration: 80% 3847/4796 [07:49&lt;01:53, 8.37it/s] Iteration: 80% 3848/4796 [07:50&lt;01:53, 8.32it/s] Iteration: 80% 3849/4796 [07:50&lt;01:54, 8.28it/s] Iteration: 80% 3850/4796 [07:50&lt;01:54, 8.26it/s] Iteration: 80% 3851/4796 [07:50&lt;01:54, 8.25it/s] Iteration: 80% 3852/4796 [07:50&lt;01:58, 8.00it/s] Iteration: 80% 3853/4796 [07:50&lt;01:55, 8.16it/s] Iteration: 80% 3854/4796 [07:50&lt;01:55, 8.17it/s] Iteration: 80% 3855/4796 [07:50&lt;01:54, 8.20it/s] Iteration: 80% 3856/4796 [07:51&lt;01:54, 8.20it/s] Iteration: 80% 3857/4796 [07:51&lt;01:56, 8.03it/s] Iteration: 80% 3858/4796 [07:51&lt;01:55, 8.09it/s] Iteration: 80% 3859/4796 [07:51&lt;01:55, 8.08it/s] Iteration: 80% 3860/4796 [07:51&lt;01:55, 8.11it/s] Iteration: 81% 3861/4796 [07:51&lt;01:55, 8.09it/s] Iteration: 81% 3862/4796 [07:51&lt;01:53, 8.24it/s] Iteration: 81% 3863/4796 [07:51&lt;01:53, 8.21it/s] Iteration: 81% 3864/4796 [07:52&lt;01:53, 8.23it/s] Iteration: 81% 3865/4796 [07:52&lt;01:53, 8.22it/s] Iteration: 81% 3866/4796 [07:52&lt;01:51, 8.34it/s] Iteration: 81% 3867/4796 [07:52&lt;01:51, 8.30it/s] Iteration: 81% 3868/4796 [07:52&lt;01:52, 8.22it/s] Iteration: 81% 3869/4796 [07:52&lt;01:53, 8.13it/s] Iteration: 81% 3870/4796 [07:52&lt;01:53, 8.15it/s] Iteration: 81% 3871/4796 [07:52&lt;01:54, 8.07it/s] Iteration: 81% 3872/4796 [07:53&lt;01:53, 8.16it/s] Iteration: 81% 3873/4796 [07:53&lt;01:51, 8.29it/s] Iteration: 81% 3874/4796 [07:53&lt;01:51, 8.24it/s] Iteration: 81% 3875/4796 [07:53&lt;01:54, 8.07it/s] Iteration: 81% 3876/4796 [07:53&lt;01:53, 8.12it/s] Iteration: 81% 3877/4796 [07:53&lt;01:53, 8.13it/s] Iteration: 81% 3878/4796 [07:53&lt;01:52, 8.13it/s] Iteration: 81% 3879/4796 [07:53&lt;01:52, 8.16it/s] Iteration: 81% 3880/4796 [07:54&lt;01:53, 8.06it/s] Iteration: 81% 3881/4796 [07:54&lt;01:53, 8.05it/s] Iteration: 81% 3882/4796 [07:54&lt;01:52, 8.13it/s] Iteration: 81% 3883/4796 [07:54&lt;01:50, 8.24it/s] Iteration: 81% 3884/4796 [07:54&lt;01:52, 8.11it/s] Iteration: 81% 3885/4796 [07:54&lt;01:51, 8.16it/s] Iteration: 81% 3886/4796 [07:54&lt;01:51, 8.18it/s] Iteration: 81% 3887/4796 [07:54&lt;01:50, 8.20it/s] Iteration: 81% 3888/4796 [07:55&lt;01:51, 8.16it/s] Iteration: 81% 3889/4796 [07:55&lt;01:51, 8.15it/s] Iteration: 81% 3890/4796 [07:55&lt;01:52, 8.06it/s] Iteration: 81% 3891/4796 [07:55&lt;01:51, 8.08it/s] Iteration: 81% 3892/4796 [07:55&lt;01:51, 8.12it/s] Iteration: 81% 3893/4796 [07:55&lt;01:53, 7.96it/s] Iteration: 81% 3894/4796 [07:55&lt;01:51, 8.06it/s] Iteration: 81% 3895/4796 [07:55&lt;01:50, 8.18it/s] Iteration: 81% 3896/4796 [07:55&lt;01:49, 8.19it/s] Iteration: 81% 3897/4796 [07:56&lt;01:49, 8.21it/s] Iteration: 81% 3898/4796 [07:56&lt;01:50, 8.10it/s] Iteration: 81% 3899/4796 [07:56&lt;01:50, 8.12it/s] Iteration: 81% 3900/4796 [07:56&lt;01:49, 8.16it/s] Iteration: 81% 3901/4796 [07:56&lt;01:48, 8.24it/s] Iteration: 81% 3902/4796 [07:56&lt;01:49, 8.18it/s] Iteration: 81% 3903/4796 [07:56&lt;01:49, 8.19it/s] Iteration: 81% 3904/4796 [07:56&lt;01:49, 8.18it/s] Iteration: 81% 3905/4796 [07:57&lt;01:47, 8.30it/s] Iteration: 81% 3906/4796 [07:57&lt;01:47, 8.25it/s] Iteration: 81% 3907/4796 [07:57&lt;01:49, 8.10it/s]{&#39;loss&#39;: 0.0583115234375, &#39;learning_rate&#39;: 3.0859049207673064e-06, &#39;epoch&#39;: 2.814845704753962, &#39;step&#39;: 13500} Iteration: 81% 3908/4796 [07:57&lt;01:50, 8.07it/s] Iteration: 82% 3909/4796 [07:57&lt;01:49, 8.09it/s] Iteration: 82% 3910/4796 [07:57&lt;01:49, 8.11it/s] Iteration: 82% 3911/4796 [07:57&lt;01:50, 8.03it/s] Iteration: 82% 3912/4796 [07:57&lt;01:49, 8.08it/s] Iteration: 82% 3913/4796 [07:58&lt;01:48, 8.10it/s] Iteration: 82% 3914/4796 [07:58&lt;01:48, 8.11it/s] Iteration: 82% 3915/4796 [07:58&lt;01:48, 8.14it/s] Iteration: 82% 3916/4796 [07:58&lt;01:48, 8.14it/s] Iteration: 82% 3917/4796 [07:58&lt;01:47, 8.16it/s] Iteration: 82% 3918/4796 [07:58&lt;01:47, 8.18it/s] Iteration: 82% 3919/4796 [07:58&lt;01:47, 8.18it/s] Iteration: 82% 3920/4796 [07:58&lt;01:47, 8.18it/s] Iteration: 82% 3921/4796 [07:59&lt;01:47, 8.17it/s] Iteration: 82% 3922/4796 [07:59&lt;01:47, 8.17it/s] Iteration: 82% 3923/4796 [07:59&lt;01:47, 8.14it/s] Iteration: 82% 3924/4796 [07:59&lt;01:45, 8.25it/s] Iteration: 82% 3925/4796 [07:59&lt;01:47, 8.10it/s] Iteration: 82% 3926/4796 [07:59&lt;01:46, 8.15it/s] Iteration: 82% 3927/4796 [07:59&lt;01:46, 8.17it/s] Iteration: 82% 3928/4796 [07:59&lt;01:45, 8.20it/s] Iteration: 82% 3929/4796 [08:00&lt;01:47, 8.05it/s] Iteration: 82% 3930/4796 [08:00&lt;01:46, 8.12it/s] Iteration: 82% 3931/4796 [08:00&lt;01:45, 8.18it/s] Iteration: 82% 3932/4796 [08:00&lt;01:44, 8.28it/s] Iteration: 82% 3933/4796 [08:00&lt;01:44, 8.25it/s] Iteration: 82% 3934/4796 [08:00&lt;01:44, 8.23it/s] Iteration: 82% 3935/4796 [08:00&lt;01:45, 8.15it/s] Iteration: 82% 3936/4796 [08:00&lt;01:44, 8.26it/s] Iteration: 82% 3937/4796 [08:01&lt;01:43, 8.32it/s] Iteration: 82% 3938/4796 [08:01&lt;01:44, 8.22it/s] Iteration: 82% 3939/4796 [08:01&lt;01:46, 8.05it/s] Iteration: 82% 3940/4796 [08:01&lt;01:44, 8.17it/s] Iteration: 82% 3941/4796 [08:01&lt;01:43, 8.28it/s] Iteration: 82% 3942/4796 [08:01&lt;01:43, 8.26it/s] Iteration: 82% 3943/4796 [08:01&lt;01:43, 8.21it/s] Iteration: 82% 3944/4796 [08:01&lt;01:43, 8.20it/s] Iteration: 82% 3945/4796 [08:01&lt;01:43, 8.23it/s] Iteration: 82% 3946/4796 [08:02&lt;01:42, 8.32it/s] Iteration: 82% 3947/4796 [08:02&lt;01:42, 8.28it/s] Iteration: 82% 3948/4796 [08:02&lt;01:43, 8.19it/s] Iteration: 82% 3949/4796 [08:02&lt;01:44, 8.08it/s] Iteration: 82% 3950/4796 [08:02&lt;01:44, 8.11it/s] Iteration: 82% 3951/4796 [08:02&lt;01:43, 8.14it/s] Iteration: 82% 3952/4796 [08:02&lt;01:43, 8.16it/s] Iteration: 82% 3953/4796 [08:02&lt;01:44, 8.04it/s] Iteration: 82% 3954/4796 [08:03&lt;01:44, 8.09it/s] Iteration: 82% 3955/4796 [08:03&lt;01:42, 8.21it/s] Iteration: 82% 3956/4796 [08:03&lt;01:42, 8.22it/s] Iteration: 83% 3957/4796 [08:03&lt;01:41, 8.24it/s] Iteration: 83% 3958/4796 [08:03&lt;01:41, 8.22it/s] Iteration: 83% 3959/4796 [08:03&lt;01:40, 8.33it/s] Iteration: 83% 3960/4796 [08:03&lt;01:40, 8.29it/s] Iteration: 83% 3961/4796 [08:03&lt;01:40, 8.35it/s] Iteration: 83% 3962/4796 [08:04&lt;01:39, 8.39it/s] Iteration: 83% 3963/4796 [08:04&lt;01:40, 8.30it/s] Iteration: 83% 3964/4796 [08:04&lt;01:40, 8.31it/s] Iteration: 83% 3965/4796 [08:04&lt;01:40, 8.26it/s] Iteration: 83% 3966/4796 [08:04&lt;01:41, 8.18it/s] Iteration: 83% 3967/4796 [08:04&lt;01:40, 8.27it/s] Iteration: 83% 3968/4796 [08:04&lt;01:41, 8.14it/s] Iteration: 83% 3969/4796 [08:04&lt;01:41, 8.16it/s] Iteration: 83% 3970/4796 [08:05&lt;01:41, 8.16it/s] Iteration: 83% 3971/4796 [08:05&lt;01:41, 8.17it/s] Iteration: 83% 3972/4796 [08:05&lt;01:42, 8.08it/s] Iteration: 83% 3973/4796 [08:05&lt;01:41, 8.08it/s] Iteration: 83% 3974/4796 [08:05&lt;01:41, 8.13it/s] Iteration: 83% 3975/4796 [08:05&lt;01:40, 8.18it/s] Iteration: 83% 3976/4796 [08:05&lt;01:40, 8.18it/s] Iteration: 83% 3977/4796 [08:05&lt;01:41, 8.05it/s] Iteration: 83% 3978/4796 [08:06&lt;01:40, 8.10it/s] Iteration: 83% 3979/4796 [08:06&lt;01:40, 8.15it/s] Iteration: 83% 3980/4796 [08:06&lt;01:39, 8.23it/s] Iteration: 83% 3981/4796 [08:06&lt;01:39, 8.16it/s] Iteration: 83% 3982/4796 [08:06&lt;01:39, 8.20it/s] Iteration: 83% 3983/4796 [08:06&lt;01:38, 8.22it/s] Iteration: 83% 3984/4796 [08:06&lt;01:37, 8.32it/s] Iteration: 83% 3985/4796 [08:06&lt;01:37, 8.36it/s] Iteration: 83% 3986/4796 [08:06&lt;01:39, 8.13it/s] Iteration: 83% 3987/4796 [08:07&lt;01:38, 8.17it/s] Iteration: 83% 3988/4796 [08:07&lt;01:38, 8.18it/s] Iteration: 83% 3989/4796 [08:07&lt;01:38, 8.20it/s] Iteration: 83% 3990/4796 [08:07&lt;01:37, 8.30it/s] Iteration: 83% 3991/4796 [08:07&lt;01:39, 8.12it/s] Iteration: 83% 3992/4796 [08:07&lt;01:39, 8.12it/s] Iteration: 83% 3993/4796 [08:07&lt;01:37, 8.23it/s] Iteration: 83% 3994/4796 [08:07&lt;01:37, 8.20it/s] Iteration: 83% 3995/4796 [08:08&lt;01:39, 8.08it/s] Iteration: 83% 3996/4796 [08:08&lt;01:38, 8.14it/s] Iteration: 83% 3997/4796 [08:08&lt;01:37, 8.17it/s] Iteration: 83% 3998/4796 [08:08&lt;01:37, 8.19it/s] Iteration: 83% 3999/4796 [08:08&lt;01:37, 8.18it/s] Iteration: 83% 4000/4796 [08:08&lt;01:36, 8.28it/s] Iteration: 83% 4001/4796 [08:08&lt;01:37, 8.17it/s] Iteration: 83% 4002/4796 [08:08&lt;01:37, 8.14it/s] Iteration: 83% 4003/4796 [08:09&lt;01:37, 8.16it/s] Iteration: 83% 4004/4796 [08:09&lt;01:37, 8.16it/s] Iteration: 84% 4005/4796 [08:09&lt;01:37, 8.13it/s] Iteration: 84% 4006/4796 [08:09&lt;01:36, 8.15it/s] Iteration: 84% 4007/4796 [08:09&lt;01:36, 8.15it/s] Iteration: 84% 4008/4796 [08:09&lt;01:37, 8.05it/s] Iteration: 84% 4009/4796 [08:09&lt;01:37, 8.11it/s] Iteration: 84% 4010/4796 [08:09&lt;01:36, 8.15it/s] Iteration: 84% 4011/4796 [08:10&lt;01:36, 8.18it/s] Iteration: 84% 4012/4796 [08:10&lt;01:35, 8.18it/s] Iteration: 84% 4013/4796 [08:10&lt;01:35, 8.20it/s] Iteration: 84% 4014/4796 [08:10&lt;01:35, 8.18it/s] Iteration: 84% 4015/4796 [08:10&lt;01:35, 8.16it/s] Iteration: 84% 4016/4796 [08:10&lt;01:35, 8.18it/s] Iteration: 84% 4017/4796 [08:10&lt;01:34, 8.20it/s] Iteration: 84% 4018/4796 [08:10&lt;01:34, 8.22it/s] Iteration: 84% 4019/4796 [08:11&lt;01:35, 8.10it/s] Iteration: 84% 4020/4796 [08:11&lt;01:34, 8.24it/s] Iteration: 84% 4021/4796 [08:11&lt;01:34, 8.24it/s] Iteration: 84% 4022/4796 [08:11&lt;01:34, 8.22it/s] Iteration: 84% 4023/4796 [08:11&lt;01:35, 8.08it/s] Iteration: 84% 4024/4796 [08:11&lt;01:34, 8.16it/s] Iteration: 84% 4025/4796 [08:11&lt;01:34, 8.18it/s] Iteration: 84% 4026/4796 [08:11&lt;01:33, 8.20it/s] Iteration: 84% 4027/4796 [08:12&lt;01:33, 8.20it/s] Iteration: 84% 4028/4796 [08:12&lt;01:35, 8.06it/s] Iteration: 84% 4029/4796 [08:12&lt;01:33, 8.21it/s] Iteration: 84% 4030/4796 [08:12&lt;01:33, 8.22it/s] Iteration: 84% 4031/4796 [08:12&lt;01:34, 8.08it/s] Iteration: 84% 4032/4796 [08:12&lt;01:33, 8.15it/s] Iteration: 84% 4033/4796 [08:12&lt;01:34, 8.08it/s] Iteration: 84% 4034/4796 [08:12&lt;01:33, 8.14it/s] Iteration: 84% 4035/4796 [08:12&lt;01:33, 8.18it/s] Iteration: 84% 4036/4796 [08:13&lt;01:33, 8.17it/s] Iteration: 84% 4037/4796 [08:13&lt;01:32, 8.19it/s] Iteration: 84% 4038/4796 [08:13&lt;01:32, 8.23it/s] Iteration: 84% 4039/4796 [08:13&lt;01:31, 8.23it/s] Iteration: 84% 4040/4796 [08:13&lt;01:31, 8.22it/s] Iteration: 84% 4041/4796 [08:13&lt;01:31, 8.21it/s] Iteration: 84% 4042/4796 [08:13&lt;01:33, 8.09it/s] Iteration: 84% 4043/4796 [08:13&lt;01:32, 8.13it/s] Iteration: 84% 4044/4796 [08:14&lt;01:32, 8.17it/s] Iteration: 84% 4045/4796 [08:14&lt;01:32, 8.10it/s] Iteration: 84% 4046/4796 [08:14&lt;01:32, 8.15it/s] Iteration: 84% 4047/4796 [08:14&lt;01:32, 8.10it/s] Iteration: 84% 4048/4796 [08:14&lt;01:32, 8.10it/s] Iteration: 84% 4049/4796 [08:14&lt;01:30, 8.24it/s] Iteration: 84% 4050/4796 [08:14&lt;01:30, 8.24it/s] Iteration: 84% 4051/4796 [08:14&lt;01:32, 8.09it/s] Iteration: 84% 4052/4796 [08:15&lt;01:31, 8.13it/s] Iteration: 85% 4053/4796 [08:15&lt;01:31, 8.14it/s] Iteration: 85% 4054/4796 [08:15&lt;01:30, 8.16it/s] Iteration: 85% 4055/4796 [08:15&lt;01:31, 8.14it/s] Iteration: 85% 4056/4796 [08:15&lt;01:30, 8.18it/s] Iteration: 85% 4057/4796 [08:15&lt;01:30, 8.20it/s] Iteration: 85% 4058/4796 [08:15&lt;01:29, 8.21it/s] Iteration: 85% 4059/4796 [08:15&lt;01:29, 8.22it/s] Iteration: 85% 4060/4796 [08:16&lt;01:30, 8.11it/s] Iteration: 85% 4061/4796 [08:16&lt;01:30, 8.13it/s] Iteration: 85% 4062/4796 [08:16&lt;01:30, 8.15it/s] Iteration: 85% 4063/4796 [08:16&lt;01:29, 8.16it/s] Iteration: 85% 4064/4796 [08:16&lt;01:29, 8.19it/s] Iteration: 85% 4065/4796 [08:16&lt;01:29, 8.15it/s] Iteration: 85% 4066/4796 [08:16&lt;01:29, 8.17it/s] Iteration: 85% 4067/4796 [08:16&lt;01:28, 8.27it/s] Iteration: 85% 4068/4796 [08:17&lt;01:28, 8.24it/s] Iteration: 85% 4069/4796 [08:17&lt;01:29, 8.12it/s] Iteration: 85% 4070/4796 [08:17&lt;01:29, 8.16it/s] Iteration: 85% 4071/4796 [08:17&lt;01:28, 8.18it/s] Iteration: 85% 4072/4796 [08:17&lt;01:28, 8.18it/s] Iteration: 85% 4073/4796 [08:17&lt;01:27, 8.22it/s] Iteration: 85% 4074/4796 [08:17&lt;01:28, 8.13it/s] Iteration: 85% 4075/4796 [08:17&lt;01:28, 8.17it/s] Iteration: 85% 4076/4796 [08:18&lt;01:27, 8.19it/s] Iteration: 85% 4077/4796 [08:18&lt;01:27, 8.18it/s] Iteration: 85% 4078/4796 [08:18&lt;01:27, 8.22it/s] Iteration: 85% 4079/4796 [08:18&lt;01:26, 8.27it/s] Iteration: 85% 4080/4796 [08:18&lt;01:27, 8.22it/s] Iteration: 85% 4081/4796 [08:18&lt;01:26, 8.30it/s] Iteration: 85% 4082/4796 [08:18&lt;01:26, 8.29it/s] Iteration: 85% 4083/4796 [08:18&lt;01:27, 8.16it/s] Iteration: 85% 4084/4796 [08:18&lt;01:26, 8.20it/s] Iteration: 85% 4085/4796 [08:19&lt;01:27, 8.17it/s] Iteration: 85% 4086/4796 [08:19&lt;01:26, 8.18it/s] Iteration: 85% 4087/4796 [08:19&lt;01:26, 8.19it/s] Iteration: 85% 4088/4796 [08:19&lt;01:27, 8.12it/s] Iteration: 85% 4089/4796 [08:19&lt;01:28, 8.02it/s] Iteration: 85% 4090/4796 [08:19&lt;01:27, 8.06it/s] Iteration: 85% 4091/4796 [08:19&lt;01:25, 8.20it/s] Iteration: 85% 4092/4796 [08:19&lt;01:27, 8.07it/s] Iteration: 85% 4093/4796 [08:20&lt;01:26, 8.09it/s] Iteration: 85% 4094/4796 [08:20&lt;01:26, 8.10it/s] Iteration: 85% 4095/4796 [08:20&lt;01:25, 8.22it/s] Iteration: 85% 4096/4796 [08:20&lt;01:24, 8.30it/s] Iteration: 85% 4097/4796 [08:20&lt;01:25, 8.18it/s] Iteration: 85% 4098/4796 [08:20&lt;01:24, 8.27it/s] Iteration: 85% 4099/4796 [08:20&lt;01:24, 8.25it/s] Iteration: 85% 4100/4796 [08:20&lt;01:24, 8.23it/s] Iteration: 86% 4101/4796 [08:21&lt;01:25, 8.11it/s] Iteration: 86% 4102/4796 [08:21&lt;01:24, 8.24it/s] Iteration: 86% 4103/4796 [08:21&lt;01:24, 8.18it/s] Iteration: 86% 4104/4796 [08:21&lt;01:23, 8.30it/s] Iteration: 86% 4105/4796 [08:21&lt;01:23, 8.28it/s] Iteration: 86% 4106/4796 [08:21&lt;01:24, 8.14it/s] Iteration: 86% 4107/4796 [08:21&lt;01:23, 8.28it/s] Iteration: 86% 4108/4796 [08:21&lt;01:23, 8.26it/s] Iteration: 86% 4109/4796 [08:22&lt;01:22, 8.34it/s] Iteration: 86% 4110/4796 [08:22&lt;01:22, 8.30it/s] Iteration: 86% 4111/4796 [08:22&lt;01:24, 8.09it/s] Iteration: 86% 4112/4796 [08:22&lt;01:24, 8.14it/s] Iteration: 86% 4113/4796 [08:22&lt;01:23, 8.17it/s] Iteration: 86% 4114/4796 [08:22&lt;01:23, 8.17it/s] Iteration: 86% 4115/4796 [08:22&lt;01:22, 8.30it/s] Iteration: 86% 4116/4796 [08:22&lt;01:22, 8.24it/s] Iteration: 86% 4117/4796 [08:23&lt;01:22, 8.27it/s] Iteration: 86% 4118/4796 [08:23&lt;01:22, 8.24it/s] Iteration: 86% 4119/4796 [08:23&lt;01:22, 8.23it/s] Iteration: 86% 4120/4796 [08:23&lt;01:22, 8.24it/s] Iteration: 86% 4121/4796 [08:23&lt;01:22, 8.14it/s] Iteration: 86% 4122/4796 [08:23&lt;01:22, 8.17it/s] Iteration: 86% 4123/4796 [08:23&lt;01:22, 8.18it/s] Iteration: 86% 4124/4796 [08:23&lt;01:22, 8.19it/s] Iteration: 86% 4125/4796 [08:23&lt;01:20, 8.29it/s] Iteration: 86% 4126/4796 [08:24&lt;01:21, 8.21it/s] Iteration: 86% 4127/4796 [08:24&lt;01:22, 8.14it/s] Iteration: 86% 4128/4796 [08:24&lt;01:21, 8.24it/s] Iteration: 86% 4129/4796 [08:24&lt;01:20, 8.25it/s] Iteration: 86% 4130/4796 [08:24&lt;01:19, 8.34it/s] Iteration: 86% 4131/4796 [08:24&lt;01:21, 8.20it/s] Iteration: 86% 4132/4796 [08:24&lt;01:20, 8.23it/s] Iteration: 86% 4133/4796 [08:24&lt;01:20, 8.24it/s] Iteration: 86% 4134/4796 [08:25&lt;01:20, 8.26it/s] Iteration: 86% 4135/4796 [08:25&lt;01:20, 8.24it/s] Iteration: 86% 4136/4796 [08:25&lt;01:20, 8.24it/s] Iteration: 86% 4137/4796 [08:25&lt;01:19, 8.25it/s] Iteration: 86% 4138/4796 [08:25&lt;01:19, 8.23it/s] Iteration: 86% 4139/4796 [08:25&lt;01:19, 8.24it/s] Iteration: 86% 4140/4796 [08:25&lt;01:19, 8.23it/s] Iteration: 86% 4141/4796 [08:25&lt;01:18, 8.31it/s] Iteration: 86% 4142/4796 [08:26&lt;01:19, 8.24it/s] Iteration: 86% 4143/4796 [08:26&lt;01:19, 8.22it/s] Iteration: 86% 4144/4796 [08:26&lt;01:19, 8.19it/s] Iteration: 86% 4145/4796 [08:26&lt;01:21, 8.04it/s] Iteration: 86% 4146/4796 [08:26&lt;01:20, 8.05it/s] Iteration: 86% 4147/4796 [08:26&lt;01:22, 7.91it/s] Iteration: 86% 4148/4796 [08:26&lt;01:20, 8.00it/s] Iteration: 87% 4149/4796 [08:26&lt;01:20, 8.03it/s] Iteration: 87% 4150/4796 [08:27&lt;01:19, 8.10it/s] Iteration: 87% 4151/4796 [08:27&lt;01:19, 8.08it/s] Iteration: 87% 4152/4796 [08:27&lt;01:19, 8.13it/s] Iteration: 87% 4153/4796 [08:27&lt;01:19, 8.13it/s] Iteration: 87% 4154/4796 [08:27&lt;01:18, 8.18it/s] Iteration: 87% 4155/4796 [08:27&lt;01:18, 8.16it/s] Iteration: 87% 4156/4796 [08:27&lt;01:18, 8.15it/s] Iteration: 87% 4157/4796 [08:27&lt;01:18, 8.18it/s] Iteration: 87% 4158/4796 [08:28&lt;01:17, 8.20it/s] Iteration: 87% 4159/4796 [08:28&lt;01:16, 8.29it/s] Iteration: 87% 4160/4796 [08:28&lt;01:17, 8.25it/s] Iteration: 87% 4161/4796 [08:28&lt;01:17, 8.24it/s] Iteration: 87% 4162/4796 [08:28&lt;01:18, 8.08it/s] Iteration: 87% 4163/4796 [08:28&lt;01:17, 8.20it/s] Iteration: 87% 4164/4796 [08:28&lt;01:16, 8.31it/s] Iteration: 87% 4165/4796 [08:28&lt;01:16, 8.22it/s] Iteration: 87% 4166/4796 [08:28&lt;01:16, 8.22it/s] Iteration: 87% 4167/4796 [08:29&lt;01:16, 8.22it/s] Iteration: 87% 4168/4796 [08:29&lt;01:17, 8.10it/s] Iteration: 87% 4169/4796 [08:29&lt;01:17, 8.13it/s] Iteration: 87% 4170/4796 [08:29&lt;01:16, 8.15it/s] Iteration: 87% 4171/4796 [08:29&lt;01:16, 8.19it/s] Iteration: 87% 4172/4796 [08:29&lt;01:16, 8.17it/s] Iteration: 87% 4173/4796 [08:29&lt;01:16, 8.18it/s] Iteration: 87% 4174/4796 [08:29&lt;01:14, 8.30it/s] Iteration: 87% 4175/4796 [08:30&lt;01:15, 8.25it/s] Iteration: 87% 4176/4796 [08:30&lt;01:14, 8.32it/s] Iteration: 87% 4177/4796 [08:30&lt;01:15, 8.15it/s] Iteration: 87% 4178/4796 [08:30&lt;01:16, 8.09it/s] Iteration: 87% 4179/4796 [08:30&lt;01:15, 8.15it/s] Iteration: 87% 4180/4796 [08:30&lt;01:14, 8.26it/s] Iteration: 87% 4181/4796 [08:30&lt;01:16, 8.03it/s] Iteration: 87% 4182/4796 [08:30&lt;01:15, 8.09it/s] Iteration: 87% 4183/4796 [08:31&lt;01:15, 8.11it/s] Iteration: 87% 4184/4796 [08:31&lt;01:15, 8.14it/s] Iteration: 87% 4185/4796 [08:31&lt;01:14, 8.25it/s] Iteration: 87% 4186/4796 [08:31&lt;01:15, 8.12it/s] Iteration: 87% 4187/4796 [08:31&lt;01:14, 8.14it/s] Iteration: 87% 4188/4796 [08:31&lt;01:14, 8.21it/s] Iteration: 87% 4189/4796 [08:31&lt;01:13, 8.28it/s] Iteration: 87% 4190/4796 [08:31&lt;01:12, 8.37it/s] Iteration: 87% 4191/4796 [08:32&lt;01:13, 8.19it/s] Iteration: 87% 4192/4796 [08:32&lt;01:13, 8.19it/s] Iteration: 87% 4193/4796 [08:32&lt;01:13, 8.18it/s] Iteration: 87% 4194/4796 [08:32&lt;01:13, 8.20it/s] Iteration: 87% 4195/4796 [08:32&lt;01:14, 8.06it/s] Iteration: 87% 4196/4796 [08:32&lt;01:14, 8.11it/s] Iteration: 88% 4197/4796 [08:32&lt;01:13, 8.19it/s] Iteration: 88% 4198/4796 [08:32&lt;01:12, 8.20it/s] Iteration: 88% 4199/4796 [08:33&lt;01:12, 8.22it/s] Iteration: 88% 4200/4796 [08:33&lt;01:11, 8.32it/s] Iteration: 88% 4201/4796 [08:33&lt;01:12, 8.17it/s] Iteration: 88% 4202/4796 [08:33&lt;01:12, 8.16it/s] Iteration: 88% 4203/4796 [08:33&lt;01:12, 8.17it/s] Iteration: 88% 4204/4796 [08:33&lt;01:12, 8.14it/s] Iteration: 88% 4205/4796 [08:33&lt;01:13, 8.04it/s] Iteration: 88% 4206/4796 [08:33&lt;01:13, 8.03it/s] Iteration: 88% 4207/4796 [08:34&lt;01:12, 8.10it/s] Iteration: 88% 4208/4796 [08:34&lt;01:12, 8.12it/s] Iteration: 88% 4209/4796 [08:34&lt;01:13, 8.03it/s] Iteration: 88% 4210/4796 [08:34&lt;01:12, 8.11it/s] Iteration: 88% 4211/4796 [08:34&lt;01:13, 7.94it/s] Iteration: 88% 4212/4796 [08:34&lt;01:12, 8.09it/s] Iteration: 88% 4213/4796 [08:34&lt;01:11, 8.11it/s] Iteration: 88% 4214/4796 [08:34&lt;01:11, 8.16it/s] Iteration: 88% 4215/4796 [08:34&lt;01:10, 8.19it/s] Iteration: 88% 4216/4796 [08:35&lt;01:10, 8.21it/s] Iteration: 88% 4217/4796 [08:35&lt;01:10, 8.21it/s] Iteration: 88% 4218/4796 [08:35&lt;01:11, 8.10it/s] Iteration: 88% 4219/4796 [08:35&lt;01:09, 8.25it/s] Iteration: 88% 4220/4796 [08:35&lt;01:10, 8.16it/s] Iteration: 88% 4221/4796 [08:35&lt;01:09, 8.28it/s] Iteration: 88% 4222/4796 [08:35&lt;01:09, 8.27it/s] Iteration: 88% 4223/4796 [08:35&lt;01:10, 8.14it/s] Iteration: 88% 4224/4796 [08:36&lt;01:09, 8.18it/s] Iteration: 88% 4225/4796 [08:36&lt;01:09, 8.18it/s] Iteration: 88% 4226/4796 [08:36&lt;01:09, 8.17it/s] Iteration: 88% 4227/4796 [08:36&lt;01:08, 8.27it/s] Iteration: 88% 4228/4796 [08:36&lt;01:09, 8.21it/s] Iteration: 88% 4229/4796 [08:36&lt;01:09, 8.21it/s] Iteration: 88% 4230/4796 [08:36&lt;01:09, 8.19it/s] Iteration: 88% 4231/4796 [08:36&lt;01:08, 8.30it/s] Iteration: 88% 4232/4796 [08:37&lt;01:09, 8.17it/s] Iteration: 88% 4233/4796 [08:37&lt;01:08, 8.25it/s] Iteration: 88% 4234/4796 [08:37&lt;01:08, 8.23it/s] Iteration: 88% 4235/4796 [08:37&lt;01:08, 8.25it/s] Iteration: 88% 4236/4796 [08:37&lt;01:07, 8.24it/s] Iteration: 88% 4237/4796 [08:37&lt;01:09, 8.02it/s] Iteration: 88% 4238/4796 [08:37&lt;01:09, 8.06it/s] Iteration: 88% 4239/4796 [08:37&lt;01:08, 8.14it/s] Iteration: 88% 4240/4796 [08:38&lt;01:07, 8.18it/s] Iteration: 88% 4241/4796 [08:38&lt;01:09, 8.03it/s] Iteration: 88% 4242/4796 [08:38&lt;01:08, 8.07it/s] Iteration: 88% 4243/4796 [08:38&lt;01:08, 8.10it/s] Iteration: 88% 4244/4796 [08:38&lt;01:07, 8.14it/s] Iteration: 89% 4245/4796 [08:38&lt;01:07, 8.17it/s] Iteration: 89% 4246/4796 [08:38&lt;01:08, 8.05it/s] Iteration: 89% 4247/4796 [08:38&lt;01:07, 8.15it/s] Iteration: 89% 4248/4796 [08:39&lt;01:06, 8.20it/s] Iteration: 89% 4249/4796 [08:39&lt;01:06, 8.20it/s] Iteration: 89% 4250/4796 [08:39&lt;01:07, 8.13it/s] Iteration: 89% 4251/4796 [08:39&lt;01:06, 8.16it/s] Iteration: 89% 4252/4796 [08:39&lt;01:06, 8.22it/s] Iteration: 89% 4253/4796 [08:39&lt;01:05, 8.27it/s] Iteration: 89% 4254/4796 [08:39&lt;01:05, 8.32it/s] Iteration: 89% 4255/4796 [08:39&lt;01:05, 8.31it/s] Iteration: 89% 4256/4796 [08:40&lt;01:06, 8.16it/s] Iteration: 89% 4257/4796 [08:40&lt;01:05, 8.17it/s] Iteration: 89% 4258/4796 [08:40&lt;01:05, 8.20it/s] Iteration: 89% 4259/4796 [08:40&lt;01:05, 8.20it/s] Iteration: 89% 4260/4796 [08:40&lt;01:05, 8.19it/s] Iteration: 89% 4261/4796 [08:40&lt;01:05, 8.22it/s] Iteration: 89% 4262/4796 [08:40&lt;01:10, 7.60it/s] Iteration: 89% 4263/4796 [08:40&lt;01:07, 7.91it/s] Iteration: 89% 4264/4796 [08:41&lt;01:06, 7.97it/s] Iteration: 89% 4265/4796 [08:41&lt;01:05, 8.06it/s] Iteration: 89% 4266/4796 [08:41&lt;01:04, 8.20it/s] Iteration: 89% 4267/4796 [08:41&lt;01:03, 8.31it/s] Iteration: 89% 4268/4796 [08:41&lt;01:02, 8.40it/s] Iteration: 89% 4269/4796 [08:41&lt;01:02, 8.37it/s] Iteration: 89% 4270/4796 [08:41&lt;01:02, 8.41it/s] Iteration: 89% 4271/4796 [08:41&lt;01:03, 8.32it/s] Iteration: 89% 4272/4796 [08:41&lt;01:03, 8.28it/s] Iteration: 89% 4273/4796 [08:42&lt;01:03, 8.27it/s] Iteration: 89% 4274/4796 [08:42&lt;01:03, 8.17it/s] Iteration: 89% 4275/4796 [08:42&lt;01:02, 8.28it/s] Iteration: 89% 4276/4796 [08:42&lt;01:02, 8.36it/s] Iteration: 89% 4277/4796 [08:42&lt;01:02, 8.34it/s] Iteration: 89% 4278/4796 [08:42&lt;01:03, 8.16it/s] Iteration: 89% 4279/4796 [08:42&lt;01:02, 8.26it/s] Iteration: 89% 4280/4796 [08:42&lt;01:02, 8.25it/s] Iteration: 89% 4281/4796 [08:43&lt;01:02, 8.25it/s] Iteration: 89% 4282/4796 [08:43&lt;01:01, 8.35it/s] Iteration: 89% 4283/4796 [08:43&lt;01:02, 8.19it/s] Iteration: 89% 4284/4796 [08:43&lt;01:02, 8.21it/s] Iteration: 89% 4285/4796 [08:43&lt;01:02, 8.20it/s] Iteration: 89% 4286/4796 [08:43&lt;01:02, 8.11it/s] Iteration: 89% 4287/4796 [08:43&lt;01:02, 8.15it/s] Iteration: 89% 4288/4796 [08:43&lt;01:03, 7.97it/s] Iteration: 89% 4289/4796 [08:44&lt;01:02, 8.05it/s] Iteration: 89% 4290/4796 [08:44&lt;01:02, 8.10it/s] Iteration: 89% 4291/4796 [08:44&lt;01:02, 8.14it/s] Iteration: 89% 4292/4796 [08:44&lt;01:01, 8.14it/s] Iteration: 90% 4293/4796 [08:44&lt;01:01, 8.15it/s] Iteration: 90% 4294/4796 [08:44&lt;01:01, 8.16it/s] Iteration: 90% 4295/4796 [08:44&lt;01:02, 8.05it/s] Iteration: 90% 4296/4796 [08:44&lt;01:01, 8.12it/s] Iteration: 90% 4297/4796 [08:45&lt;01:00, 8.18it/s] Iteration: 90% 4298/4796 [08:45&lt;01:00, 8.30it/s] Iteration: 90% 4299/4796 [08:45&lt;01:00, 8.17it/s] Iteration: 90% 4300/4796 [08:45&lt;01:00, 8.21it/s] Iteration: 90% 4301/4796 [08:45&lt;01:00, 8.22it/s] Iteration: 90% 4302/4796 [08:45&lt;01:00, 8.20it/s] Iteration: 90% 4303/4796 [08:45&lt;01:00, 8.19it/s] Iteration: 90% 4304/4796 [08:45&lt;00:59, 8.20it/s] Iteration: 90% 4305/4796 [08:45&lt;00:59, 8.21it/s] Iteration: 90% 4306/4796 [08:46&lt;01:00, 8.10it/s] Iteration: 90% 4307/4796 [08:46&lt;00:59, 8.22it/s] Iteration: 90% 4308/4796 [08:46&lt;00:59, 8.21it/s] Iteration: 90% 4309/4796 [08:46&lt;00:59, 8.22it/s] Iteration: 90% 4310/4796 [08:46&lt;00:58, 8.25it/s] Iteration: 90% 4311/4796 [08:46&lt;00:59, 8.15it/s] Iteration: 90% 4312/4796 [08:46&lt;00:58, 8.29it/s] Iteration: 90% 4313/4796 [08:46&lt;00:58, 8.32it/s] Iteration: 90% 4314/4796 [08:47&lt;00:58, 8.30it/s] Iteration: 90% 4315/4796 [08:47&lt;00:59, 8.14it/s] Iteration: 90% 4316/4796 [08:47&lt;00:58, 8.27it/s] Iteration: 90% 4317/4796 [08:47&lt;00:58, 8.25it/s] Iteration: 90% 4318/4796 [08:47&lt;00:57, 8.25it/s] Iteration: 90% 4319/4796 [08:47&lt;00:57, 8.24it/s] Iteration: 90% 4320/4796 [08:47&lt;00:58, 8.08it/s] Iteration: 90% 4321/4796 [08:47&lt;00:58, 8.13it/s] Iteration: 90% 4322/4796 [08:48&lt;00:58, 8.14it/s] Iteration: 90% 4323/4796 [08:48&lt;00:58, 8.16it/s] Iteration: 90% 4324/4796 [08:48&lt;00:57, 8.18it/s] Iteration: 90% 4325/4796 [08:48&lt;00:57, 8.19it/s] Iteration: 90% 4326/4796 [08:48&lt;00:57, 8.19it/s] Iteration: 90% 4327/4796 [08:48&lt;00:57, 8.21it/s] Iteration: 90% 4328/4796 [08:48&lt;00:57, 8.20it/s] Iteration: 90% 4329/4796 [08:48&lt;00:57, 8.13it/s] Iteration: 90% 4330/4796 [08:49&lt;00:57, 8.13it/s] Iteration: 90% 4331/4796 [08:49&lt;00:56, 8.17it/s] Iteration: 90% 4332/4796 [08:49&lt;00:56, 8.21it/s] Iteration: 90% 4333/4796 [08:49&lt;00:56, 8.23it/s] Iteration: 90% 4334/4796 [08:49&lt;00:57, 8.09it/s] Iteration: 90% 4335/4796 [08:49&lt;00:56, 8.20it/s] Iteration: 90% 4336/4796 [08:49&lt;00:56, 8.21it/s] Iteration: 90% 4337/4796 [08:49&lt;00:55, 8.22it/s] Iteration: 90% 4338/4796 [08:50&lt;00:55, 8.23it/s] Iteration: 90% 4339/4796 [08:50&lt;00:56, 8.15it/s] Iteration: 90% 4340/4796 [08:50&lt;00:55, 8.18it/s] Iteration: 91% 4341/4796 [08:50&lt;00:55, 8.20it/s] Iteration: 91% 4342/4796 [08:50&lt;00:54, 8.31it/s] Iteration: 91% 4343/4796 [08:50&lt;00:55, 8.16it/s] Iteration: 91% 4344/4796 [08:50&lt;00:54, 8.27it/s] Iteration: 91% 4345/4796 [08:50&lt;00:54, 8.24it/s] Iteration: 91% 4346/4796 [08:50&lt;00:54, 8.24it/s] Iteration: 91% 4347/4796 [08:51&lt;00:54, 8.24it/s] Iteration: 91% 4348/4796 [08:51&lt;00:55, 8.07it/s] Iteration: 91% 4349/4796 [08:51&lt;00:55, 8.09it/s] Iteration: 91% 4350/4796 [08:51&lt;00:55, 8.08it/s] Iteration: 91% 4351/4796 [08:51&lt;00:54, 8.21it/s] Iteration: 91% 4352/4796 [08:51&lt;00:55, 8.07it/s] Iteration: 91% 4353/4796 [08:51&lt;00:54, 8.13it/s] Iteration: 91% 4354/4796 [08:51&lt;00:54, 8.13it/s] Iteration: 91% 4355/4796 [08:52&lt;00:53, 8.17it/s] Iteration: 91% 4356/4796 [08:52&lt;00:53, 8.29it/s] Iteration: 91% 4357/4796 [08:52&lt;00:53, 8.24it/s] Iteration: 91% 4358/4796 [08:52&lt;00:53, 8.24it/s] Iteration: 91% 4359/4796 [08:52&lt;00:52, 8.30it/s] Iteration: 91% 4360/4796 [08:52&lt;00:52, 8.24it/s] Iteration: 91% 4361/4796 [08:52&lt;00:53, 8.19it/s] Iteration: 91% 4362/4796 [08:52&lt;00:53, 8.13it/s] Iteration: 91% 4363/4796 [08:53&lt;00:53, 8.15it/s] Iteration: 91% 4364/4796 [08:53&lt;00:53, 8.15it/s] Iteration: 91% 4365/4796 [08:53&lt;00:52, 8.16it/s] Iteration: 91% 4366/4796 [08:53&lt;00:53, 8.02it/s] Iteration: 91% 4367/4796 [08:53&lt;00:52, 8.20it/s] Iteration: 91% 4368/4796 [08:53&lt;00:51, 8.31it/s] Iteration: 91% 4369/4796 [08:53&lt;00:50, 8.41it/s] Iteration: 91% 4370/4796 [08:53&lt;00:50, 8.44it/s] Iteration: 91% 4371/4796 [08:54&lt;00:50, 8.47it/s] Iteration: 91% 4372/4796 [08:54&lt;00:50, 8.39it/s] Iteration: 91% 4373/4796 [08:54&lt;00:51, 8.24it/s] Iteration: 91% 4374/4796 [08:54&lt;00:51, 8.26it/s] Iteration: 91% 4375/4796 [08:54&lt;00:50, 8.26it/s] Iteration: 91% 4376/4796 [08:54&lt;00:50, 8.26it/s] Iteration: 91% 4377/4796 [08:54&lt;00:50, 8.34it/s] Iteration: 91% 4378/4796 [08:54&lt;00:50, 8.23it/s] Iteration: 91% 4379/4796 [08:55&lt;00:50, 8.22it/s] Iteration: 91% 4380/4796 [08:55&lt;00:50, 8.31it/s] Iteration: 91% 4381/4796 [08:55&lt;00:50, 8.28it/s] Iteration: 91% 4382/4796 [08:55&lt;00:50, 8.15it/s] Iteration: 91% 4383/4796 [08:55&lt;00:50, 8.17it/s] Iteration: 91% 4384/4796 [08:55&lt;00:49, 8.26it/s] Iteration: 91% 4385/4796 [08:55&lt;00:49, 8.26it/s] Iteration: 91% 4386/4796 [08:55&lt;00:49, 8.25it/s] Iteration: 91% 4387/4796 [08:55&lt;00:49, 8.24it/s] Iteration: 91% 4388/4796 [08:56&lt;00:49, 8.23it/s] Iteration: 92% 4389/4796 [08:56&lt;00:49, 8.24it/s] Iteration: 92% 4390/4796 [08:56&lt;00:49, 8.20it/s] Iteration: 92% 4391/4796 [08:56&lt;00:49, 8.20it/s] Iteration: 92% 4392/4796 [08:56&lt;00:48, 8.30it/s] Iteration: 92% 4393/4796 [08:56&lt;00:48, 8.27it/s] Iteration: 92% 4394/4796 [08:56&lt;00:48, 8.34it/s] Iteration: 92% 4395/4796 [08:56&lt;00:48, 8.28it/s] Iteration: 92% 4396/4796 [08:57&lt;00:48, 8.23it/s] Iteration: 92% 4397/4796 [08:57&lt;00:49, 8.12it/s] Iteration: 92% 4398/4796 [08:57&lt;00:48, 8.15it/s] Iteration: 92% 4399/4796 [08:57&lt;00:48, 8.26it/s] Iteration: 92% 4400/4796 [08:57&lt;00:47, 8.35it/s] Iteration: 92% 4401/4796 [08:57&lt;00:48, 8.17it/s] Iteration: 92% 4402/4796 [08:57&lt;00:47, 8.21it/s] Iteration: 92% 4403/4796 [08:57&lt;00:48, 8.18it/s] Iteration: 92% 4404/4796 [08:58&lt;00:47, 8.20it/s] Iteration: 92% 4405/4796 [08:58&lt;00:47, 8.19it/s] Iteration: 92% 4406/4796 [08:58&lt;00:47, 8.17it/s] Iteration: 92% 4407/4796 [08:58&lt;00:46, 8.30it/s]{&#39;loss&#39;: 0.05992529296875, &#39;learning_rate&#39;: 1.3483458437586879e-06, &#39;epoch&#39;: 2.9190992493744785, &#39;step&#39;: 14000} Iteration: 92% 4408/4796 [08:58&lt;00:47, 8.21it/s] Iteration: 92% 4409/4796 [08:58&lt;00:47, 8.23it/s] Iteration: 92% 4410/4796 [08:58&lt;00:46, 8.22it/s] Iteration: 92% 4411/4796 [08:58&lt;00:46, 8.32it/s] Iteration: 92% 4412/4796 [08:59&lt;00:46, 8.18it/s] Iteration: 92% 4413/4796 [08:59&lt;00:47, 8.06it/s] Iteration: 92% 4414/4796 [08:59&lt;00:47, 8.12it/s] Iteration: 92% 4415/4796 [08:59&lt;00:47, 8.06it/s] Iteration: 92% 4416/4796 [08:59&lt;00:47, 7.94it/s] Iteration: 92% 4417/4796 [08:59&lt;00:47, 8.04it/s] Iteration: 92% 4418/4796 [08:59&lt;00:46, 8.08it/s] Iteration: 92% 4419/4796 [08:59&lt;00:45, 8.22it/s] Iteration: 92% 4420/4796 [08:59&lt;00:45, 8.25it/s] Iteration: 92% 4421/4796 [09:00&lt;00:45, 8.22it/s] Iteration: 92% 4422/4796 [09:00&lt;00:44, 8.31it/s] Iteration: 92% 4423/4796 [09:00&lt;00:44, 8.33it/s] Iteration: 92% 4424/4796 [09:00&lt;00:45, 8.27it/s] Iteration: 92% 4425/4796 [09:00&lt;00:44, 8.27it/s] Iteration: 92% 4426/4796 [09:00&lt;00:44, 8.35it/s] Iteration: 92% 4427/4796 [09:00&lt;00:45, 8.18it/s] Iteration: 92% 4428/4796 [09:00&lt;00:44, 8.20it/s] Iteration: 92% 4429/4796 [09:01&lt;00:44, 8.24it/s] Iteration: 92% 4430/4796 [09:01&lt;00:44, 8.24it/s] Iteration: 92% 4431/4796 [09:01&lt;00:44, 8.12it/s] Iteration: 92% 4432/4796 [09:01&lt;00:44, 8.14it/s] Iteration: 92% 4433/4796 [09:01&lt;00:44, 8.16it/s] Iteration: 92% 4434/4796 [09:01&lt;00:44, 8.19it/s] Iteration: 92% 4435/4796 [09:01&lt;00:44, 8.03it/s] Iteration: 92% 4436/4796 [09:01&lt;00:43, 8.20it/s] Iteration: 93% 4437/4796 [09:02&lt;00:43, 8.18it/s] Iteration: 93% 4438/4796 [09:02&lt;00:43, 8.28it/s] Iteration: 93% 4439/4796 [09:02&lt;00:42, 8.31it/s] Iteration: 93% 4440/4796 [09:02&lt;00:43, 8.14it/s] Iteration: 93% 4441/4796 [09:02&lt;00:43, 8.25it/s] Iteration: 93% 4442/4796 [09:02&lt;00:43, 8.19it/s] Iteration: 93% 4443/4796 [09:02&lt;00:43, 8.18it/s] Iteration: 93% 4444/4796 [09:02&lt;00:42, 8.20it/s] Iteration: 93% 4445/4796 [09:03&lt;00:42, 8.21it/s] Iteration: 93% 4446/4796 [09:03&lt;00:42, 8.29it/s] Iteration: 93% 4447/4796 [09:03&lt;00:42, 8.26it/s] Iteration: 93% 4448/4796 [09:03&lt;00:42, 8.15it/s] Iteration: 93% 4449/4796 [09:03&lt;00:42, 8.18it/s] Iteration: 93% 4450/4796 [09:03&lt;00:42, 8.09it/s] Iteration: 93% 4451/4796 [09:03&lt;00:42, 8.14it/s] Iteration: 93% 4452/4796 [09:03&lt;00:42, 8.10it/s] Iteration: 93% 4453/4796 [09:04&lt;00:42, 8.17it/s] Iteration: 93% 4454/4796 [09:04&lt;00:41, 8.18it/s] Iteration: 93% 4455/4796 [09:04&lt;00:41, 8.20it/s] Iteration: 93% 4456/4796 [09:04&lt;00:41, 8.28it/s] Iteration: 93% 4457/4796 [09:04&lt;00:40, 8.32it/s] Iteration: 93% 4458/4796 [09:04&lt;00:40, 8.29it/s] Iteration: 93% 4459/4796 [09:04&lt;00:41, 8.14it/s] Iteration: 93% 4460/4796 [09:04&lt;00:41, 8.16it/s] Iteration: 93% 4461/4796 [09:04&lt;00:40, 8.19it/s] Iteration: 93% 4462/4796 [09:05&lt;00:40, 8.20it/s] Iteration: 93% 4463/4796 [09:05&lt;00:40, 8.20it/s] Iteration: 93% 4464/4796 [09:05&lt;00:41, 8.09it/s] Iteration: 93% 4465/4796 [09:05&lt;00:40, 8.22it/s] Iteration: 93% 4466/4796 [09:05&lt;00:39, 8.33it/s] Iteration: 93% 4467/4796 [09:05&lt;00:39, 8.29it/s] Iteration: 93% 4468/4796 [09:05&lt;00:40, 8.14it/s] Iteration: 93% 4469/4796 [09:05&lt;00:39, 8.18it/s] Iteration: 93% 4470/4796 [09:06&lt;00:39, 8.20it/s] Iteration: 93% 4471/4796 [09:06&lt;00:39, 8.22it/s] Iteration: 93% 4472/4796 [09:06&lt;00:39, 8.31it/s] Iteration: 93% 4473/4796 [09:06&lt;00:39, 8.16it/s] Iteration: 93% 4474/4796 [09:06&lt;00:39, 8.15it/s] Iteration: 93% 4475/4796 [09:06&lt;00:39, 8.18it/s] Iteration: 93% 4476/4796 [09:06&lt;00:39, 8.18it/s] Iteration: 93% 4477/4796 [09:06&lt;00:39, 8.12it/s] Iteration: 93% 4478/4796 [09:07&lt;00:38, 8.19it/s] Iteration: 93% 4479/4796 [09:07&lt;00:38, 8.19it/s] Iteration: 93% 4480/4796 [09:07&lt;00:38, 8.30it/s] Iteration: 93% 4481/4796 [09:07&lt;00:38, 8.23it/s] Iteration: 93% 4482/4796 [09:07&lt;00:38, 8.22it/s] Iteration: 93% 4483/4796 [09:07&lt;00:37, 8.26it/s] Iteration: 93% 4484/4796 [09:07&lt;00:37, 8.24it/s] Iteration: 94% 4485/4796 [09:07&lt;00:37, 8.24it/s] Iteration: 94% 4486/4796 [09:08&lt;00:37, 8.23it/s] Iteration: 94% 4487/4796 [09:08&lt;00:37, 8.16it/s] Iteration: 94% 4488/4796 [09:08&lt;00:37, 8.21it/s] Iteration: 94% 4489/4796 [09:08&lt;00:37, 8.18it/s] Iteration: 94% 4490/4796 [09:08&lt;00:36, 8.29it/s] Iteration: 94% 4491/4796 [09:08&lt;00:36, 8.28it/s] Iteration: 94% 4492/4796 [09:08&lt;00:37, 8.14it/s] Iteration: 94% 4493/4796 [09:08&lt;00:36, 8.28it/s] Iteration: 94% 4494/4796 [09:09&lt;00:36, 8.25it/s] Iteration: 94% 4495/4796 [09:09&lt;00:36, 8.23it/s] Iteration: 94% 4496/4796 [09:09&lt;00:37, 7.99it/s] Iteration: 94% 4497/4796 [09:09&lt;00:36, 8.18it/s] Iteration: 94% 4498/4796 [09:09&lt;00:36, 8.24it/s] Iteration: 94% 4499/4796 [09:09&lt;00:36, 8.25it/s] Iteration: 94% 4500/4796 [09:09&lt;00:36, 8.22it/s] Iteration: 94% 4501/4796 [09:09&lt;00:36, 8.05it/s] Iteration: 94% 4502/4796 [09:09&lt;00:36, 8.08it/s] Iteration: 94% 4503/4796 [09:10&lt;00:35, 8.27it/s] Iteration: 94% 4504/4796 [09:10&lt;00:35, 8.23it/s] Iteration: 94% 4505/4796 [09:10&lt;00:36, 8.07it/s] Iteration: 94% 4506/4796 [09:10&lt;00:35, 8.11it/s] Iteration: 94% 4507/4796 [09:10&lt;00:35, 8.22it/s] Iteration: 94% 4508/4796 [09:10&lt;00:34, 8.25it/s] Iteration: 94% 4509/4796 [09:10&lt;00:34, 8.24it/s] Iteration: 94% 4510/4796 [09:10&lt;00:35, 8.12it/s] Iteration: 94% 4511/4796 [09:11&lt;00:34, 8.18it/s] Iteration: 94% 4512/4796 [09:11&lt;00:34, 8.19it/s] Iteration: 94% 4513/4796 [09:11&lt;00:34, 8.18it/s] Iteration: 94% 4514/4796 [09:11&lt;00:34, 8.21it/s] Iteration: 94% 4515/4796 [09:11&lt;00:34, 8.14it/s] Iteration: 94% 4516/4796 [09:11&lt;00:34, 8.17it/s] Iteration: 94% 4517/4796 [09:11&lt;00:34, 8.20it/s] Iteration: 94% 4518/4796 [09:11&lt;00:33, 8.30it/s] Iteration: 94% 4519/4796 [09:12&lt;00:34, 8.15it/s] Iteration: 94% 4520/4796 [09:12&lt;00:33, 8.28it/s] Iteration: 94% 4521/4796 [09:12&lt;00:33, 8.15it/s] Iteration: 94% 4522/4796 [09:12&lt;00:33, 8.15it/s] Iteration: 94% 4523/4796 [09:12&lt;00:33, 8.17it/s] Iteration: 94% 4524/4796 [09:12&lt;00:33, 8.08it/s] Iteration: 94% 4525/4796 [09:12&lt;00:32, 8.22it/s] Iteration: 94% 4526/4796 [09:12&lt;00:32, 8.30it/s] Iteration: 94% 4527/4796 [09:13&lt;00:32, 8.26it/s] Iteration: 94% 4528/4796 [09:13&lt;00:32, 8.27it/s] Iteration: 94% 4529/4796 [09:13&lt;00:32, 8.23it/s] Iteration: 94% 4530/4796 [09:13&lt;00:32, 8.31it/s] Iteration: 94% 4531/4796 [09:13&lt;00:31, 8.36it/s] Iteration: 94% 4532/4796 [09:13&lt;00:31, 8.29it/s] Iteration: 95% 4533/4796 [09:13&lt;00:31, 8.25it/s] Iteration: 95% 4534/4796 [09:13&lt;00:31, 8.24it/s] Iteration: 95% 4535/4796 [09:14&lt;00:31, 8.22it/s] Iteration: 95% 4536/4796 [09:14&lt;00:31, 8.15it/s] Iteration: 95% 4537/4796 [09:14&lt;00:31, 8.26it/s] Iteration: 95% 4538/4796 [09:14&lt;00:31, 8.26it/s] Iteration: 95% 4539/4796 [09:14&lt;00:31, 8.13it/s] Iteration: 95% 4540/4796 [09:14&lt;00:31, 8.17it/s] Iteration: 95% 4541/4796 [09:14&lt;00:31, 8.16it/s] Iteration: 95% 4542/4796 [09:14&lt;00:31, 8.18it/s] Iteration: 95% 4543/4796 [09:14&lt;00:31, 8.07it/s] Iteration: 95% 4544/4796 [09:15&lt;00:31, 8.12it/s] Iteration: 95% 4545/4796 [09:15&lt;00:30, 8.15it/s] Iteration: 95% 4546/4796 [09:15&lt;00:30, 8.18it/s] Iteration: 95% 4547/4796 [09:15&lt;00:30, 8.17it/s] Iteration: 95% 4548/4796 [09:15&lt;00:30, 8.18it/s] Iteration: 95% 4549/4796 [09:15&lt;00:29, 8.30it/s] Iteration: 95% 4550/4796 [09:15&lt;00:29, 8.27it/s] Iteration: 95% 4551/4796 [09:15&lt;00:29, 8.25it/s] Iteration: 95% 4552/4796 [09:16&lt;00:29, 8.25it/s] Iteration: 95% 4553/4796 [09:16&lt;00:30, 8.10it/s] Iteration: 95% 4554/4796 [09:16&lt;00:29, 8.24it/s] Iteration: 95% 4555/4796 [09:16&lt;00:29, 8.22it/s] Iteration: 95% 4556/4796 [09:16&lt;00:28, 8.31it/s] Iteration: 95% 4557/4796 [09:16&lt;00:28, 8.28it/s] Iteration: 95% 4558/4796 [09:16&lt;00:29, 8.19it/s] Iteration: 95% 4559/4796 [09:16&lt;00:28, 8.18it/s] Iteration: 95% 4560/4796 [09:17&lt;00:28, 8.18it/s] Iteration: 95% 4561/4796 [09:17&lt;00:28, 8.14it/s] Iteration: 95% 4562/4796 [09:17&lt;00:29, 8.03it/s] Iteration: 95% 4563/4796 [09:17&lt;00:28, 8.10it/s] Iteration: 95% 4564/4796 [09:17&lt;00:28, 8.14it/s] Iteration: 95% 4565/4796 [09:17&lt;00:28, 8.18it/s] Iteration: 95% 4566/4796 [09:17&lt;00:28, 8.01it/s] Iteration: 95% 4567/4796 [09:17&lt;00:28, 8.12it/s] Iteration: 95% 4568/4796 [09:18&lt;00:28, 8.11it/s] Iteration: 95% 4569/4796 [09:18&lt;00:27, 8.19it/s] Iteration: 95% 4570/4796 [09:18&lt;00:27, 8.19it/s] Iteration: 95% 4571/4796 [09:18&lt;00:27, 8.07it/s] Iteration: 95% 4572/4796 [09:18&lt;00:27, 8.09it/s] Iteration: 95% 4573/4796 [09:18&lt;00:27, 8.13it/s] Iteration: 95% 4574/4796 [09:18&lt;00:27, 8.14it/s] Iteration: 95% 4575/4796 [09:18&lt;00:27, 8.02it/s] Iteration: 95% 4576/4796 [09:19&lt;00:26, 8.19it/s] Iteration: 95% 4577/4796 [09:19&lt;00:26, 8.18it/s] Iteration: 95% 4578/4796 [09:19&lt;00:26, 8.23it/s] Iteration: 95% 4579/4796 [09:19&lt;00:26, 8.11it/s] Iteration: 95% 4580/4796 [09:19&lt;00:26, 8.08it/s] Iteration: 96% 4581/4796 [09:19&lt;00:26, 8.12it/s] Iteration: 96% 4582/4796 [09:19&lt;00:26, 8.14it/s] Iteration: 96% 4583/4796 [09:19&lt;00:26, 8.17it/s] Iteration: 96% 4584/4796 [09:20&lt;00:26, 8.14it/s] Iteration: 96% 4585/4796 [09:20&lt;00:25, 8.25it/s] Iteration: 96% 4586/4796 [09:20&lt;00:25, 8.21it/s] Iteration: 96% 4587/4796 [09:20&lt;00:25, 8.14it/s] Iteration: 96% 4588/4796 [09:20&lt;00:25, 8.18it/s] Iteration: 96% 4589/4796 [09:20&lt;00:25, 8.21it/s] Iteration: 96% 4590/4796 [09:20&lt;00:25, 8.14it/s] Iteration: 96% 4591/4796 [09:20&lt;00:24, 8.25it/s] Iteration: 96% 4592/4796 [09:20&lt;00:24, 8.23it/s] Iteration: 96% 4593/4796 [09:21&lt;00:24, 8.24it/s] Iteration: 96% 4594/4796 [09:21&lt;00:24, 8.14it/s] Iteration: 96% 4595/4796 [09:21&lt;00:24, 8.16it/s] Iteration: 96% 4596/4796 [09:21&lt;00:24, 8.17it/s] Iteration: 96% 4597/4796 [09:21&lt;00:24, 8.16it/s] Iteration: 96% 4598/4796 [09:21&lt;00:24, 8.06it/s] Iteration: 96% 4599/4796 [09:21&lt;00:24, 8.20it/s] Iteration: 96% 4600/4796 [09:21&lt;00:23, 8.19it/s] Iteration: 96% 4601/4796 [09:22&lt;00:23, 8.20it/s] Iteration: 96% 4602/4796 [09:22&lt;00:23, 8.19it/s] Iteration: 96% 4603/4796 [09:22&lt;00:23, 8.15it/s] Iteration: 96% 4604/4796 [09:22&lt;00:23, 8.17it/s] Iteration: 96% 4605/4796 [09:22&lt;00:23, 8.17it/s] Iteration: 96% 4606/4796 [09:22&lt;00:23, 8.17it/s] Iteration: 96% 4607/4796 [09:22&lt;00:23, 8.20it/s] Iteration: 96% 4608/4796 [09:22&lt;00:22, 8.20it/s] Iteration: 96% 4609/4796 [09:23&lt;00:22, 8.23it/s] Iteration: 96% 4610/4796 [09:23&lt;00:22, 8.23it/s] Iteration: 96% 4611/4796 [09:23&lt;00:22, 8.19it/s] Iteration: 96% 4612/4796 [09:23&lt;00:22, 8.18it/s] Iteration: 96% 4613/4796 [09:23&lt;00:22, 8.29it/s] Iteration: 96% 4614/4796 [09:23&lt;00:22, 8.25it/s] Iteration: 96% 4615/4796 [09:23&lt;00:21, 8.25it/s] Iteration: 96% 4616/4796 [09:23&lt;00:21, 8.27it/s] Iteration: 96% 4617/4796 [09:24&lt;00:21, 8.27it/s] Iteration: 96% 4618/4796 [09:24&lt;00:21, 8.13it/s] Iteration: 96% 4619/4796 [09:24&lt;00:21, 8.16it/s] Iteration: 96% 4620/4796 [09:24&lt;00:21, 8.17it/s] Iteration: 96% 4621/4796 [09:24&lt;00:21, 8.13it/s] Iteration: 96% 4622/4796 [09:24&lt;00:21, 8.17it/s] Iteration: 96% 4623/4796 [09:24&lt;00:21, 8.10it/s] Iteration: 96% 4624/4796 [09:24&lt;00:21, 8.08it/s] Iteration: 96% 4625/4796 [09:25&lt;00:20, 8.15it/s] Iteration: 96% 4626/4796 [09:25&lt;00:20, 8.19it/s] Iteration: 96% 4627/4796 [09:25&lt;00:20, 8.08it/s] Iteration: 96% 4628/4796 [09:25&lt;00:20, 8.23it/s] Iteration: 97% 4629/4796 [09:25&lt;00:20, 8.22it/s] Iteration: 97% 4630/4796 [09:25&lt;00:20, 8.23it/s] Iteration: 97% 4631/4796 [09:25&lt;00:19, 8.31it/s] Iteration: 97% 4632/4796 [09:25&lt;00:19, 8.22it/s] Iteration: 97% 4633/4796 [09:26&lt;00:19, 8.21it/s] Iteration: 97% 4634/4796 [09:26&lt;00:19, 8.27it/s] Iteration: 97% 4635/4796 [09:26&lt;00:19, 8.35it/s] Iteration: 97% 4636/4796 [09:26&lt;00:19, 8.17it/s] Iteration: 97% 4637/4796 [09:26&lt;00:19, 8.16it/s] Iteration: 97% 4638/4796 [09:26&lt;00:19, 8.18it/s] Iteration: 97% 4639/4796 [09:26&lt;00:19, 8.22it/s] Iteration: 97% 4640/4796 [09:26&lt;00:18, 8.22it/s] Iteration: 97% 4641/4796 [09:26&lt;00:19, 8.15it/s] Iteration: 97% 4642/4796 [09:27&lt;00:18, 8.18it/s] Iteration: 97% 4643/4796 [09:27&lt;00:18, 8.16it/s] Iteration: 97% 4644/4796 [09:27&lt;00:18, 8.16it/s] Iteration: 97% 4645/4796 [09:27&lt;00:18, 8.14it/s] Iteration: 97% 4646/4796 [09:27&lt;00:18, 8.11it/s] Iteration: 97% 4647/4796 [09:27&lt;00:18, 8.12it/s] Iteration: 97% 4648/4796 [09:27&lt;00:18, 8.14it/s] Iteration: 97% 4649/4796 [09:27&lt;00:18, 8.10it/s] Iteration: 97% 4650/4796 [09:28&lt;00:18, 8.01it/s] Iteration: 97% 4651/4796 [09:28&lt;00:17, 8.15it/s] Iteration: 97% 4652/4796 [09:28&lt;00:17, 8.14it/s] Iteration: 97% 4653/4796 [09:28&lt;00:17, 8.15it/s] Iteration: 97% 4654/4796 [09:28&lt;00:17, 8.12it/s] Iteration: 97% 4655/4796 [09:28&lt;00:17, 8.16it/s] Iteration: 97% 4656/4796 [09:28&lt;00:17, 8.17it/s] Iteration: 97% 4657/4796 [09:28&lt;00:16, 8.21it/s] Iteration: 97% 4658/4796 [09:29&lt;00:16, 8.19it/s] Iteration: 97% 4659/4796 [09:29&lt;00:17, 8.05it/s] Iteration: 97% 4660/4796 [09:29&lt;00:16, 8.08it/s] Iteration: 97% 4661/4796 [09:29&lt;00:16, 8.24it/s] Iteration: 97% 4662/4796 [09:29&lt;00:16, 8.21it/s] Iteration: 97% 4663/4796 [09:29&lt;00:16, 8.09it/s] Iteration: 97% 4664/4796 [09:29&lt;00:16, 8.16it/s] Iteration: 97% 4665/4796 [09:29&lt;00:15, 8.25it/s] Iteration: 97% 4666/4796 [09:30&lt;00:15, 8.27it/s] Iteration: 97% 4667/4796 [09:30&lt;00:15, 8.20it/s] Iteration: 97% 4668/4796 [09:30&lt;00:15, 8.19it/s] Iteration: 97% 4669/4796 [09:30&lt;00:15, 8.29it/s] Iteration: 97% 4670/4796 [09:30&lt;00:15, 8.35it/s] Iteration: 97% 4671/4796 [09:30&lt;00:15, 8.29it/s] Iteration: 97% 4672/4796 [09:30&lt;00:14, 8.38it/s] Iteration: 97% 4673/4796 [09:30&lt;00:14, 8.44it/s] Iteration: 97% 4674/4796 [09:31&lt;00:14, 8.24it/s] Iteration: 97% 4675/4796 [09:31&lt;00:14, 8.35it/s] Iteration: 97% 4676/4796 [09:31&lt;00:14, 8.29it/s] Iteration: 98% 4677/4796 [09:31&lt;00:14, 8.30it/s] Iteration: 98% 4678/4796 [09:31&lt;00:14, 8.28it/s] Iteration: 98% 4679/4796 [09:31&lt;00:14, 8.11it/s] Iteration: 98% 4680/4796 [09:31&lt;00:14, 8.26it/s] Iteration: 98% 4681/4796 [09:31&lt;00:13, 8.23it/s] Iteration: 98% 4682/4796 [09:31&lt;00:13, 8.22it/s] Iteration: 98% 4683/4796 [09:32&lt;00:13, 8.19it/s] Iteration: 98% 4684/4796 [09:32&lt;00:13, 8.19it/s] Iteration: 98% 4685/4796 [09:32&lt;00:13, 8.16it/s] Iteration: 98% 4686/4796 [09:32&lt;00:13, 8.16it/s] Iteration: 98% 4687/4796 [09:32&lt;00:13, 8.16it/s] Iteration: 98% 4688/4796 [09:32&lt;00:13, 8.10it/s] Iteration: 98% 4689/4796 [09:32&lt;00:13, 8.23it/s] Iteration: 98% 4690/4796 [09:32&lt;00:12, 8.31it/s] Iteration: 98% 4691/4796 [09:33&lt;00:12, 8.29it/s] Iteration: 98% 4692/4796 [09:33&lt;00:12, 8.29it/s] Iteration: 98% 4693/4796 [09:33&lt;00:12, 8.15it/s] Iteration: 98% 4694/4796 [09:33&lt;00:12, 8.17it/s] Iteration: 98% 4695/4796 [09:33&lt;00:12, 8.18it/s] Iteration: 98% 4696/4796 [09:33&lt;00:12, 8.27it/s] Iteration: 98% 4697/4796 [09:33&lt;00:12, 8.15it/s] Iteration: 98% 4698/4796 [09:33&lt;00:11, 8.18it/s] Iteration: 98% 4699/4796 [09:34&lt;00:11, 8.19it/s] Iteration: 98% 4700/4796 [09:34&lt;00:11, 8.24it/s] Iteration: 98% 4701/4796 [09:34&lt;00:11, 8.35it/s] Iteration: 98% 4702/4796 [09:34&lt;00:11, 8.20it/s] Iteration: 98% 4703/4796 [09:34&lt;00:11, 8.21it/s] Iteration: 98% 4704/4796 [09:34&lt;00:11, 8.11it/s] Iteration: 98% 4705/4796 [09:34&lt;00:11, 8.15it/s] Iteration: 98% 4706/4796 [09:34&lt;00:10, 8.19it/s] Iteration: 98% 4707/4796 [09:35&lt;00:10, 8.09it/s] Iteration: 98% 4708/4796 [09:35&lt;00:10, 8.10it/s] Iteration: 98% 4709/4796 [09:35&lt;00:10, 8.12it/s] Iteration: 98% 4710/4796 [09:35&lt;00:10, 8.16it/s] Iteration: 98% 4711/4796 [09:35&lt;00:10, 8.06it/s] Iteration: 98% 4712/4796 [09:35&lt;00:10, 8.06it/s] Iteration: 98% 4713/4796 [09:35&lt;00:10, 8.11it/s] Iteration: 98% 4714/4796 [09:35&lt;00:10, 8.16it/s] Iteration: 98% 4715/4796 [09:36&lt;00:09, 8.27it/s] Iteration: 98% 4716/4796 [09:36&lt;00:09, 8.12it/s] Iteration: 98% 4717/4796 [09:36&lt;00:09, 8.14it/s] Iteration: 98% 4718/4796 [09:36&lt;00:09, 8.18it/s] Iteration: 98% 4719/4796 [09:36&lt;00:09, 8.30it/s] Iteration: 98% 4720/4796 [09:36&lt;00:09, 8.06it/s] Iteration: 98% 4721/4796 [09:36&lt;00:09, 8.14it/s] Iteration: 98% 4722/4796 [09:36&lt;00:09, 8.16it/s] Iteration: 98% 4723/4796 [09:36&lt;00:08, 8.19it/s] Iteration: 98% 4724/4796 [09:37&lt;00:08, 8.18it/s] Iteration: 99% 4725/4796 [09:37&lt;00:08, 7.98it/s] Iteration: 99% 4726/4796 [09:37&lt;00:08, 8.07it/s] Iteration: 99% 4727/4796 [09:37&lt;00:08, 8.20it/s] Iteration: 99% 4728/4796 [09:37&lt;00:08, 8.23it/s] Iteration: 99% 4729/4796 [09:37&lt;00:08, 8.22it/s] Iteration: 99% 4730/4796 [09:37&lt;00:07, 8.26it/s] Iteration: 99% 4731/4796 [09:37&lt;00:07, 8.27it/s] Iteration: 99% 4732/4796 [09:38&lt;00:07, 8.25it/s] Iteration: 99% 4733/4796 [09:38&lt;00:07, 8.22it/s] Iteration: 99% 4734/4796 [09:38&lt;00:07, 8.31it/s] Iteration: 99% 4735/4796 [09:38&lt;00:07, 8.22it/s] Iteration: 99% 4736/4796 [09:38&lt;00:07, 8.31it/s] Iteration: 99% 4737/4796 [09:38&lt;00:07, 8.34it/s] Iteration: 99% 4738/4796 [09:38&lt;00:06, 8.30it/s] Iteration: 99% 4739/4796 [09:38&lt;00:06, 8.28it/s] Iteration: 99% 4740/4796 [09:39&lt;00:06, 8.23it/s] Iteration: 99% 4741/4796 [09:39&lt;00:06, 8.30it/s] Iteration: 99% 4742/4796 [09:39&lt;00:06, 8.29it/s] Iteration: 99% 4743/4796 [09:39&lt;00:06, 8.26it/s] Iteration: 99% 4744/4796 [09:39&lt;00:06, 8.04it/s] Iteration: 99% 4745/4796 [09:39&lt;00:06, 7.89it/s] Iteration: 99% 4746/4796 [09:39&lt;00:06, 7.97it/s] Iteration: 99% 4747/4796 [09:39&lt;00:06, 8.12it/s] Iteration: 99% 4748/4796 [09:40&lt;00:05, 8.03it/s] Iteration: 99% 4749/4796 [09:40&lt;00:05, 8.20it/s] Iteration: 99% 4750/4796 [09:40&lt;00:05, 8.22it/s] Iteration: 99% 4751/4796 [09:40&lt;00:05, 8.22it/s] Iteration: 99% 4752/4796 [09:40&lt;00:05, 8.20it/s] Iteration: 99% 4753/4796 [09:40&lt;00:05, 8.20it/s] Iteration: 99% 4754/4796 [09:40&lt;00:05, 8.20it/s] Iteration: 99% 4755/4796 [09:40&lt;00:04, 8.20it/s] Iteration: 99% 4756/4796 [09:41&lt;00:04, 8.31it/s] Iteration: 99% 4757/4796 [09:41&lt;00:04, 8.29it/s] Iteration: 99% 4758/4796 [09:41&lt;00:04, 8.15it/s] Iteration: 99% 4759/4796 [09:41&lt;00:04, 8.27it/s] Iteration: 99% 4760/4796 [09:41&lt;00:04, 8.26it/s] Iteration: 99% 4761/4796 [09:41&lt;00:04, 8.26it/s] Iteration: 99% 4762/4796 [09:41&lt;00:04, 8.24it/s] Iteration: 99% 4763/4796 [09:41&lt;00:04, 8.19it/s] Iteration: 99% 4764/4796 [09:41&lt;00:03, 8.18it/s] Iteration: 99% 4765/4796 [09:42&lt;00:03, 8.18it/s] Iteration: 99% 4766/4796 [09:42&lt;00:03, 8.18it/s] Iteration: 99% 4767/4796 [09:42&lt;00:03, 8.16it/s] Iteration: 99% 4768/4796 [09:42&lt;00:03, 8.30it/s] Iteration: 99% 4769/4796 [09:42&lt;00:03, 8.27it/s] Iteration: 99% 4770/4796 [09:42&lt;00:03, 8.20it/s] Iteration: 99% 4771/4796 [09:42&lt;00:03, 8.18it/s] Iteration: 99% 4772/4796 [09:42&lt;00:02, 8.15it/s] Iteration: 100% 4773/4796 [09:43&lt;00:02, 8.18it/s] Iteration: 100% 4774/4796 [09:43&lt;00:02, 8.17it/s] Iteration: 100% 4775/4796 [09:43&lt;00:02, 8.16it/s] Iteration: 100% 4776/4796 [09:43&lt;00:02, 8.17it/s] Iteration: 100% 4777/4796 [09:43&lt;00:02, 8.16it/s] Iteration: 100% 4778/4796 [09:43&lt;00:02, 8.28it/s] Iteration: 100% 4779/4796 [09:43&lt;00:02, 8.26it/s] Iteration: 100% 4780/4796 [09:43&lt;00:01, 8.23it/s] Iteration: 100% 4781/4796 [09:44&lt;00:01, 8.23it/s] Iteration: 100% 4782/4796 [09:44&lt;00:01, 8.08it/s] Iteration: 100% 4783/4796 [09:44&lt;00:01, 8.12it/s] Iteration: 100% 4784/4796 [09:44&lt;00:01, 8.09it/s] Iteration: 100% 4785/4796 [09:44&lt;00:01, 8.26it/s] Iteration: 100% 4786/4796 [09:44&lt;00:01, 8.08it/s] Iteration: 100% 4787/4796 [09:44&lt;00:01, 8.10it/s] Iteration: 100% 4788/4796 [09:44&lt;00:00, 8.14it/s] Iteration: 100% 4789/4796 [09:45&lt;00:00, 8.26it/s] Iteration: 100% 4790/4796 [09:45&lt;00:00, 8.25it/s] Iteration: 100% 4791/4796 [09:45&lt;00:00, 8.14it/s] Iteration: 100% 4792/4796 [09:45&lt;00:00, 8.17it/s] Iteration: 100% 4793/4796 [09:45&lt;00:00, 8.28it/s] Iteration: 100% 4794/4796 [09:45&lt;00:00, 8.24it/s] Iteration: 100% 4795/4796 [09:45&lt;00:00, 8.35it/s] Iteration: 100% 4796/4796 [09:45&lt;00:00, 8.19it/s] Epoch: 100% 3/3 [29:19&lt;00:00, 586.36s/it] /usr/local/lib/python3.6/dist-packages/transformers/trainer.py:1048: FutureWarning: This method is deprecated, use `Trainer.is_world_process_zero()` instead. warnings.warn(&#34;This method is deprecated, use `Trainer.is_world_process_zero()` instead.&#34;, FutureWarning) 02/21/2021 14:39:43 - INFO - filelock - Lock 140312530545688 acquired on /content/drive/My Drive/transformers-ner/data/cached_test_RobertaTokenizer_128.lock 02/21/2021 14:39:43 - INFO - utils_ner - Loading features from cached file /content/drive/My Drive/transformers-ner/data/cached_test_RobertaTokenizer_128 02/21/2021 14:39:44 - INFO - filelock - Lock 140312530545688 released on /content/drive/My Drive/transformers-ner/data/cached_test_RobertaTokenizer_128.lock Prediction: 100% 1199/1199 [01:13&lt;00:00, 16.21it/s] 02/21/2021 14:41:42 - INFO - __main__ - eval_loss = 0.09005147668966454 02/21/2021 14:41:42 - INFO - __main__ - eval_accuracy_score = 0.9736736755819052 02/21/2021 14:41:42 - INFO - __main__ - eval_precision = 0.8440124895553894 02/21/2021 14:41:42 - INFO - __main__ - eval_recall = 0.8517663767086809 02/21/2021 14:41:42 - INFO - __main__ - eval_f1 = 0.8478717059486205 02/21/2021 14:41:42 - WARNING - tasks - Maximum sequence length exceeded: No prediction for &#39;.&#39;. 02/21/2021 14:41:42 - WARNING - tasks - Maximum sequence length exceeded: No prediction for &#39;&#39;. . After training for 3 epochs the model achieves an accuracy 97% of on the test dataset . eval_loss = 0.08999748958216078 eval_accuracy_score = 0.9735164039117754 eval_precision = 0.8436429136279765 eval_recall = 0.8522545712764069 eval_f1 = 0.84792687773215 . . Tip: Reduce the per_device_train_batch_size if you are facing out of memory issues. . Model Prediction . Once the model is trained, the final model weights, configuration, tokenizer will be avilable in the output_dir. We will use the Pipeline module to do the model predictions. . from transformers import pipeline model_name = &#39;/content/drive/My Drive/transformers-ner/model&#39; nlp = pipeline(task=&quot;ner&quot;, model=model_name, tokenizer=model_name, framework=&quot;pt&quot;,grouped_entities=True) . sequence = [&quot;Remind me to do those 11 things at 10.&quot;, &quot;Today, Sachin won&#39;t be playing in the cricket match between India and Pakistan.&quot;, &quot;The phase-III human clinical trial of the COVID-19 vaccine developed by Oxford University, and being manufactured by the Serum Institute of India (SII), will begin at the Sassoon General Hospital in Pune next week.&quot;, &quot;On 24 June I will be travelling to Goa.&quot;, &quot;Russian Government is trying hard to convince the world that their vaccine is effective.&quot;, &quot;Pharma company Astrazeneca has released a 111-page trial blueprint on 21 Sept 2020.&quot; ] result = nlp(sequence) result . [[{&#39;entity_group&#39;: &#39;B-tim&#39;, &#39;score&#39;: 0.5767102837562561, &#39;word&#39;: &#39; 10&#39;}], [{&#39;entity_group&#39;: &#39;B-tim&#39;, &#39;score&#39;: 0.9989056587219238, &#39;word&#39;: &#39;Today&#39;}, {&#39;entity_group&#39;: &#39;B-per&#39;, &#39;score&#39;: 0.8931595087051392, &#39;word&#39;: &#39; Sachin&#39;}, {&#39;entity_group&#39;: &#39;B-geo&#39;, &#39;score&#39;: 0.7804469466209412, &#39;word&#39;: &#39; India&#39;}, {&#39;entity_group&#39;: &#39;B-geo&#39;, &#39;score&#39;: 0.5479587316513062, &#39;word&#39;: &#39; Pakistan&#39;}], [{&#39;entity_group&#39;: &#39;B-org&#39;, &#39;score&#39;: 0.9265464246273041, &#39;word&#39;: &#39; Oxford University&#39;}, {&#39;entity_group&#39;: &#39;B-org&#39;, &#39;score&#39;: 0.9648504376411438, &#39;word&#39;: &#39; Serum Institute of India&#39;}, {&#39;entity_group&#39;: &#39;B-org&#39;, &#39;score&#39;: 0.9607944488525391, &#39;word&#39;: &#39;SII&#39;}, {&#39;entity_group&#39;: &#39;B-org&#39;, &#39;score&#39;: 0.9906694442033768, &#39;word&#39;: &#39; Sassoon General Hospital&#39;}, {&#39;entity_group&#39;: &#39;B-geo&#39;, &#39;score&#39;: 0.8247686326503754, &#39;word&#39;: &#39; Pune&#39;}], [{&#39;entity_group&#39;: &#39;B-tim&#39;, &#39;score&#39;: 0.9983495771884918, &#39;word&#39;: &#39; 24 June&#39;}, {&#39;entity_group&#39;: &#39;B-geo&#39;, &#39;score&#39;: 0.9488541781902313, &#39;word&#39;: &#39; Goa&#39;}], [{&#39;entity_group&#39;: &#39;B-gpe&#39;, &#39;score&#39;: 0.9983706474304199, &#39;word&#39;: &#39;Russian&#39;}], [{&#39;entity_group&#39;: &#39;B-org&#39;, &#39;score&#39;: 0.9142362674077352, &#39;word&#39;: &#39; Astrazeneca&#39;}, {&#39;entity_group&#39;: &#39;B-tim&#39;, &#39;score&#39;: 0.9961005647977194, &#39;word&#39;: &#39; 21 Sept 2020&#39;}]] . nlp = pipeline(task=&quot;ner&quot;, model=model_name, tokenizer=model_name, framework=&quot;pt&quot;,grouped_entities=False) result = nlp(sequence) result . [[{&#39;entity&#39;: &#39;B-tim&#39;, &#39;index&#39;: 10, &#39;score&#39;: 0.5767102837562561, &#39;word&#39;: &#39;Ġ10&#39;}], [{&#39;entity&#39;: &#39;B-tim&#39;, &#39;index&#39;: 1, &#39;score&#39;: 0.9989056587219238, &#39;word&#39;: &#39;Today&#39;}, {&#39;entity&#39;: &#39;B-per&#39;, &#39;index&#39;: 3, &#39;score&#39;: 0.9104933738708496, &#39;word&#39;: &#39;ĠSach&#39;}, {&#39;entity&#39;: &#39;I-per&#39;, &#39;index&#39;: 4, &#39;score&#39;: 0.8758256435394287, &#39;word&#39;: &#39;in&#39;}, {&#39;entity&#39;: &#39;B-geo&#39;, &#39;index&#39;: 14, &#39;score&#39;: 0.7804469466209412, &#39;word&#39;: &#39;ĠIndia&#39;}, {&#39;entity&#39;: &#39;B-geo&#39;, &#39;index&#39;: 16, &#39;score&#39;: 0.5479587316513062, &#39;word&#39;: &#39;ĠPakistan&#39;}], [{&#39;entity&#39;: &#39;B-org&#39;, &#39;index&#39;: 17, &#39;score&#39;: 0.8851138353347778, &#39;word&#39;: &#39;ĠOxford&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 18, &#39;score&#39;: 0.9679790139198303, &#39;word&#39;: &#39;ĠUniversity&#39;}, {&#39;entity&#39;: &#39;B-org&#39;, &#39;index&#39;: 25, &#39;score&#39;: 0.9966782331466675, &#39;word&#39;: &#39;ĠSer&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 26, &#39;score&#39;: 0.9899328947067261, &#39;word&#39;: &#39;um&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 27, &#39;score&#39;: 0.9981464743614197, &#39;word&#39;: &#39;ĠInstitute&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 28, &#39;score&#39;: 0.9931064248085022, &#39;word&#39;: &#39;Ġof&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 29, &#39;score&#39;: 0.8463881611824036, &#39;word&#39;: &#39;ĠIndia&#39;}, {&#39;entity&#39;: &#39;B-org&#39;, &#39;index&#39;: 31, &#39;score&#39;: 0.9819338917732239, &#39;word&#39;: &#39;S&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 32, &#39;score&#39;: 0.9396550059318542, &#39;word&#39;: &#39;II&#39;}, {&#39;entity&#39;: &#39;B-org&#39;, &#39;index&#39;: 38, &#39;score&#39;: 0.9816001653671265, &#39;word&#39;: &#39;ĠSass&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 39, &#39;score&#39;: 0.9911067485809326, &#39;word&#39;: &#39;oon&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 40, &#39;score&#39;: 0.9923107028007507, &#39;word&#39;: &#39;ĠGeneral&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 41, &#39;score&#39;: 0.9976601600646973, &#39;word&#39;: &#39;ĠHospital&#39;}, {&#39;entity&#39;: &#39;B-geo&#39;, &#39;index&#39;: 43, &#39;score&#39;: 0.9934419393539429, &#39;word&#39;: &#39;ĠP&#39;}, {&#39;entity&#39;: &#39;I-geo&#39;, &#39;index&#39;: 44, &#39;score&#39;: 0.6560953259468079, &#39;word&#39;: &#39;une&#39;}], [{&#39;entity&#39;: &#39;B-tim&#39;, &#39;index&#39;: 2, &#39;score&#39;: 0.9988309144973755, &#39;word&#39;: &#39;Ġ24&#39;}, {&#39;entity&#39;: &#39;I-tim&#39;, &#39;index&#39;: 3, &#39;score&#39;: 0.9978682398796082, &#39;word&#39;: &#39;ĠJune&#39;}, {&#39;entity&#39;: &#39;B-geo&#39;, &#39;index&#39;: 9, &#39;score&#39;: 0.9958592057228088, &#39;word&#39;: &#39;ĠGo&#39;}, {&#39;entity&#39;: &#39;I-geo&#39;, &#39;index&#39;: 10, &#39;score&#39;: 0.9018491506576538, &#39;word&#39;: &#39;a&#39;}], [{&#39;entity&#39;: &#39;B-gpe&#39;, &#39;index&#39;: 1, &#39;score&#39;: 0.9983706474304199, &#39;word&#39;: &#39;Russian&#39;}], [{&#39;entity&#39;: &#39;B-org&#39;, &#39;index&#39;: 4, &#39;score&#39;: 0.9142678380012512, &#39;word&#39;: &#39;ĠAst&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 5, &#39;score&#39;: 0.9503166675567627, &#39;word&#39;: &#39;razen&#39;}, {&#39;entity&#39;: &#39;I-org&#39;, &#39;index&#39;: 6, &#39;score&#39;: 0.8781242966651917, &#39;word&#39;: &#39;eca&#39;}, {&#39;entity&#39;: &#39;B-tim&#39;, &#39;index&#39;: 16, &#39;score&#39;: 0.9991741180419922, &#39;word&#39;: &#39;Ġ21&#39;}, {&#39;entity&#39;: &#39;I-tim&#39;, &#39;index&#39;: 17, &#39;score&#39;: 0.9986246824264526, &#39;word&#39;: &#39;ĠSept&#39;}, {&#39;entity&#39;: &#39;I-tim&#39;, &#39;index&#39;: 18, &#39;score&#39;: 0.9905028939247131, &#39;word&#39;: &#39;Ġ2020&#39;}]] . We will try Training Token Classification for one more dataset in Part-3 to see how easy it is do the prediction and training for any dataset. .",
            "url": "http://forgetfulcrow.com/nlp/token%20classification/2021/02/21/_09_20_Entity_Extraction_Transformers_Part_2.html",
            "relUrl": "/nlp/token%20classification/2021/02/21/_09_20_Entity_Extraction_Transformers_Part_2.html",
            "date": " • Feb 21, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Entity Extraction (NER) - Training and Inference using Transformers - Part 1",
            "content": ". In Part-1, we will discuss how to use the Pretrained language model, the Token Classification Head, and Tokenizer. You can skip the Part-1 if you want to go ahead and check the finetuning demo and model prediction. . In Part-2, we will learn to finetune the TokenClassification head of RoBerta model. . Token Classification Task . The token classification task identifies the entities of interest in the text. For NER task, we identify the Named entities like Person, Location, Organization and etc. . . Fig 0. NER task . Pretrained Language Model . A pretrained language model like BERT, ALBERT provides the contextual embedding for a token. The contextual embedding is the representation based on the sentence/context a token is used in. So it will understand difference between a River Bank and a Financial Banks. . What is a token? . A token could be a whole word or a substring of a word. If a word is not part of the model vocabulary it would be broken down into subwords based on some algorithm. . There are 3 important parts of a pretrained language model . Model - Neural Network model Architecture Tokenizer - Preprocessor for converting the text into the input representation that the model can understand. Model Weights - The weights of the model are saved in a seperate file. . How to use a pretrained model for a specific task? . For any task like NER or Classification, we add a Task head(another Neural Network layer on top of base model) to map word embedding into output labels. During the Training process we learn weights of the head to classify each token properly. . . Fig 1. Pretrained Bert Model without any task specific head. Each sentence is converted into token embedding Tok1, Tok2 using a Tokenizer and the fed into the Model which outputs new representation for each token Tok1, Tok2 .. along with additional token [CLS] and [SEP] . Installation . Install the latest package of transformers from the github or follow the installation instructions here https://huggingface.co/transformers/installation.html . #install the latest transformers library !pip install git+https://github.com/huggingface/transformers.git . import transformers transformers.__version__ ## 3.1.0 . &#39;3.1.0&#39; . Base Language Model . Roberta Pretrained embeddings, or any other Language Model embeddings, provides a vector representation for each token. A word could be broken down into multiple tokens by the tokenizer. . from transformers import AutoModel, AutoTokenizer import torch # Load the Ro pretrained tokenizer and model tokenizer = AutoTokenizer.from_pretrained(&#39;roberta-base&#39;) model = AutoModel.from_pretrained(&#39;roberta-base&#39;) . Tokenizer . A tokenizer . split the sentence into words and then further into subwords if the word is not part of the Tokenizer Vocabulary. | assign id to each token based on the vocabulary dictionary (word to integer mapping) | . Since the pretrained models are not trained for any specific domains, they consider Top N high frequency tokens. It is not possible to add all the words to the model vocabulary because that would drastically increase the model Embedding layer weights and also, lot of new words are added to dictionary every now and then. . . Fig 2. The above picture is taked from the Huggingface Tokenizer example. It clearly illustrates the character level, the token level and the word level tokenizer. . The middle one is the Token level Tokenizer which is used frequently now a days. . #The Roberta tokenizer vocabulary size tokenizer.vocab_size . 50265 . #list all the vocabulary words in the tokenizer tokenizer.get_vocab() . Any word not present in the vocabulary will be split into tokens. . #__call__ method Returns a dictionary containing the encoded sequence or sequence pair and additional informationReturns a dictionary containing the encoded sequence or sequence pair and additional information #tokenize the sentence using __call__ method of the tokenizer inputs = tokenizer(&quot;&quot;&quot;Today, Sachin won&#39;t be playing in the cricket match between India and Pakistan.&quot;&quot;&quot;, return_tensors=&#39;pt&#39;) inputs . {&#39;input_ids&#39;: tensor([[ 0, 5625, 6, 19686, 179, 351, 75, 28, 816, 11, 5, 5630, 914, 227, 666, 8, 1752, 4, 2]]), &#39;attention_mask&#39;: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])} . Let&#39;s decode the token id&#39;s to see the token text . [tokenizer.decode(i) for i in inputs[&#39;input_ids&#39;][0].tolist()] . [&#39;&lt;s&gt;&#39;, &#39;Today&#39;, &#39;,&#39;, &#39; Sach&#39;, &#39;in&#39;, &#39; won&#39;, &#34;&#39;t&#34;, &#39; be&#39;, &#39; playing&#39;, &#39; in&#39;, &#39; the&#39;, &#39; cricket&#39;, &#39; match&#39;, &#39; between&#39;, &#39; India&#39;, &#39; and&#39;, &#39; Pakistan&#39;, &#39;.&#39;, &#39; Sach&#39;, &#39;in&#39;, &#39; wil&#39;, &#39;&lt;/s&gt;&#39;] . The word Sachin is split into [&#39;Sach,&#39;in&#39;] tokens. This method of splitting a word into tokens helps in handling out of vocabulary words. . Special Tokens . Roberta uses special token &lt;s&gt; to mark sentence boundaries. While BERT has special tokens like [CLS] [SEP] . [CLS] provides the vector representation for the whole sentence and [SEP] token is useful when we have to encode two sentences. . Tokenize a sentence . There are a lot of tokenizer functions available in the transformers library. It can get really confusing as to which function to use and when. . __call__ method is a wrapper around the tokenizer.tokenize method. It adds special tokens specific to the model and returns additional fields like token_type_ids and attention_masks . tokenize method splits the sentence into tokens without adding any special tokens. . convert_tokens_to_ids is called after converting a string into tokens, to convert the tokens into vocabulary token ids . tokens = tokenizer.tokenize(&quot;I don&#39;t like it here&quot;) tokens . [&#39;I&#39;, &#39;Ġdon&#39;, &#34;&#39;t&#34;, &#39;Ġlike&#39;, &#39;Ġit&#39;, &#39;Ġhere&#39;] . tokenizer.convert_tokens_to_ids(tokens) . [100, 218, 75, 101, 24, 259] . tokenizer.build_inputs_with_special_tokens(tokens) . [0, &#39;I&#39;, &#39;Ġdon&#39;, &#34;&#39;t&#34;, &#39;Ġlike&#39;, &#39;Ġit&#39;, &#39;Ġhere&#39;, 2] . use the __call__ method to get the token_ids with extra inputs required by the specific model. . tokenizer(&quot;I don&#39;t like it here&quot;) . {&#39;input_ids&#39;: [2, 31, 221, 22, 38, 101, 32, 235, 3], &#39;token_type_ids&#39;: [0, 0, 0, 0, 0, 0, 0, 0, 0], &#39;attention_mask&#39;: [1, 1, 1, 1, 1, 1, 1, 1, 1]} . Before trying to understand the attention_mask and token_type_ids return values. Let us first look at the inputs required by a transformers model. . Model Inputs . The base RoBERTa Model provides the raw hidden-states without any specific head on top. . The forward method of the Model has following input parameters . def forward( self, input_ids=None, attention_mask=None, token_type_ids=None, position_ids=None, head_mask=None, inputs_embeds=None, output_attentions=None, output_hidden_states=None, return_dict=None, ):input_ids - The input ids are often the only required parameters to be passed to the model as input. These are numerical representation of the tokens the one which we got in the previous step using tokenizer call method. attention_mask - A binary value representing whether to attend to the corresponding input_id token or not. It is useful when we have different length sentences in a batch and we need to pad all sentences to the same length. We ignore the padding index input_id using attention mask. . token_type_id - Useful when encoding multiple sentences. . The tokenizers __call__ method handles everything to prepare the input for the model. It does more than just encoding the sentence into numeric representation. . Model Inference / Output . Run the model for the input sentence and get the embedding for each token . output = model(**inputs) . output[0].shape #(batch_size, #tokens, embedding_dim) . torch.Size([1, 19, 768]) . We provided a single sentence as input to the model, hence the batch_size of 1. . The tokenizer converted the sentence into 19 tokens, including the special tokens then the model converted each token into a vector representation of 768 dimension, hence [19,768] . output[1].shape #pooled output - the vector representation of a whole sentence . torch.Size([1, 768]) . output = model(input_ids= inputs[&#39;input_ids&#39;], attention_mask=inputs[&#39;attention_mask&#39;] , return_dict=True) . if not return_dict:return (sequence_output, pooled_output) + encoder_outputs[1:] return BaseModelOutputWithPooling( last_hidden_state=sequence_output, pooler_output=pooled_output, hidden_states=encoder_outputs.hidden_states, attentions=encoder_outputs.attentions, ) . To return hiddden states and attentions, we have to set output_attentions and output_hidden_states in the model call . output = model(input_ids= inputs[&#39;input_ids&#39;], attention_mask=inputs[&#39;attention_mask&#39;] , return_dict=True, output_hidden_states=True, output_attentions= True) . len(output.attentions) . 12 . output.attentions[0].shape . torch.Size([1, 12, 19, 19]) . Token Classification(TC) Head for Entity Extraction . What we have learned so far - . How to tokenize a sentence using model specific tokenizer | How to get contextual embeddings using the Pretrained Model | . The Token classification task assigns a label to each token in the sentence. . For example in the sentence . &quot;The battery of the speaker is very poor.&quot; TC head will map each token embedding to a label like . The O | battery Aspect | of O | the O | speaker O | is O | very Sentiment | poor Sentiment. | . Here, we wanted to extract the Aspect and the Sentiment in the text. O is Others. . RoBerta Token Classification Head . Since we have the embedding vector for each token, if we add a linear head on top of the embedding to map each embedding to one of the labels, we will get a label for each token. . hidden_size of Roberta is 786, and depending on the num_labels(the entities of interest) it will do the token classification . From RobertaTokenClassification code . self.classifier = nn.Linear(config.hidden_size, self.config.num_labels) self.dropout = nn.Dropout(config.hidden_dropout_prob) sequence_output = self.dropout(sequence_output) logits = self.classifier(sequence_output) . (N, T, 786) -&gt; (N, T, num_labels) . N - batch_size T - Number of tokens . . Token Classification Output . During Training, we will provide labels along with the input_ids to the model. The model calculates the CrossEntropy Loss of the predicted labels and the ground truth and the weights are updated with the gradient. . Task Head will return the loss if labels are provided as part of the model input . output = (logits,) + outputs[2:]return ((loss,) + output) if loss is not None else output . loss is the cross entropy loss between the labels and the logits . loss_fct = CrossEntropyLoss() loss_fct(logits.view(-1, self.num_labels), labels.view(-1)) . from transformers import AutoModelForTokenClassification,RobertaForTokenClassification . Let us run Token Classification model Prediction without any finetuning to see the output of the model . from transformers import AutoConfig config = AutoConfig.from_pretrained( &#39;roberta-base&#39;, num_labels=3, id2label={0:&#39;ASPECT&#39;,1:&#39;OTHERS&#39;,2:&#39;EXTRA&#39;}, label2id={label: i for i, label in enumerate([&#39;ASPECT&#39;,&#39;OTHERS&#39;,&#39;EXTRA&#39;])} ) . config . RobertaConfig { &#34;architectures&#34;: [ &#34;RobertaForMaskedLM&#34; ], &#34;attention_probs_dropout_prob&#34;: 0.1, &#34;bos_token_id&#34;: 0, &#34;eos_token_id&#34;: 2, &#34;gradient_checkpointing&#34;: false, &#34;hidden_act&#34;: &#34;gelu&#34;, &#34;hidden_dropout_prob&#34;: 0.1, &#34;hidden_size&#34;: 768, &#34;id2label&#34;: { &#34;0&#34;: &#34;ASPECT&#34;, &#34;1&#34;: &#34;OTHERS&#34;, &#34;2&#34;: &#34;EXTRA&#34; }, &#34;initializer_range&#34;: 0.02, &#34;intermediate_size&#34;: 3072, &#34;label2id&#34;: { &#34;ASPECT&#34;: 0, &#34;EXTRA&#34;: 2, &#34;OTHERS&#34;: 1 }, &#34;layer_norm_eps&#34;: 1e-05, &#34;max_position_embeddings&#34;: 514, &#34;model_type&#34;: &#34;roberta&#34;, &#34;num_attention_heads&#34;: 12, &#34;num_hidden_layers&#34;: 12, &#34;pad_token_id&#34;: 1, &#34;type_vocab_size&#34;: 1, &#34;vocab_size&#34;: 50265 } . model = RobertaForTokenClassification.from_pretrained(&#39;albert-base-v2&#39;, config = config) . output = model(**inputs) output . (tensor([[[ 8.0052e-01, -7.5425e-02, 4.5114e-01], [ 8.4571e-01, -2.9972e-01, 1.7145e-01], [ 9.3446e-01, -7.4490e-01, 1.6924e-01], [ 2.6570e-01, 1.0174e-01, 5.2277e-01], [ 4.5587e-01, -1.6770e-01, 8.7134e-01], [ 1.2516e+00, -6.7618e-01, 7.1735e-01], [ 7.4633e-01, 4.1005e-01, 4.7558e-01], [ 5.2609e-01, -9.0839e-02, 5.9321e-01], [ 8.0308e-01, -2.6667e-01, 1.1635e+00], [ 7.8067e-01, 9.4608e-02, 4.2717e-02], [ 6.4042e-01, -1.1400e-01, 1.8376e-01], [ 2.9740e-01, -3.3065e-01, 7.9212e-01], [ 8.3010e-01, -6.5126e-01, 5.6326e-01], [ 4.0874e-01, -1.6919e-01, 1.2946e+00], [ 9.3214e-01, 2.3070e-01, 3.4809e-01], [ 9.2671e-01, -4.8473e-01, 3.4551e-01], [ 5.1119e-01, -2.8516e-01, 2.6419e-01], [ 6.8518e-01, -6.7281e-01, 6.1023e-01], [ 6.1454e-01, -1.0960e-03, 2.6023e-01]]], grad_fn=&lt;AddBackward0&gt;),) . output[0].shape . torch.Size([1, 19, 3]) . This outputs a 3-label probabilities for each token. . During training, we will provide the labels also as input to the model which will calculate the CorssEntropy loss. . labels = torch.randint(0,3,(19,)) . outputs = model(input_ids = inputs[&#39;input_ids&#39;],attention_mask= inputs[&#39;attention_mask&#39;], labels = labels) loss = outputs[0] . In the next Part, we will discuss about finetuning the model for Entity Extraction Task .",
            "url": "http://forgetfulcrow.com/nlp/token%20classification/2021/02/21/_09_20_Entity_Extraction_Transformers_Part_1.html",
            "relUrl": "/nlp/token%20classification/2021/02/21/_09_20_Entity_Extraction_Transformers_Part_1.html",
            "date": " • Feb 21, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "A Neural Probabilistic Language Model",
            "content": "We will go through the paper by Yoshua Bengio - A Neural Probabilistic Language Model . Language Modeling . In language modeling task we try to learn the joint probability function of word sequences p(w1 w2 .. wm). . p(w1 w2 .. wm) = count(w1 w2 .. wm) / count(all m-gram word seq) . Unseen Word sequences . Calculating joint probability is difficult becuase it involves counting all the m-word sequences and also, it doesn&#39;t generalize well on unseen word sequences. . What will happen to the word sequences we have not seen during the modeling time? We will assign a zero probability to all such sequences. . We use probability chain formula to frame the joint probability as a product of conditional probabilities. We define joint probability as product of conditional probabilities as follows . p(w1 w2 ..wm) = p(w1) p(w2|w1) p(w3|w2w1) .. p(wm|w1..wm-1) . Calculating conditional probability is comparatively easy. p(w3|w2 w1) = count(w1 w2 w2)/count(w1 w2) . But still we have the same problem when calculating conditional probability of long word sequences - it is highly likely that we won&#39;t have seen such long sequence of exact words during the modeling time. How do we handle this? . N-gram assumption . Linguists have observed that a word depends only n previous words and not all the words before it. This is the n-gram or Markov assumption. This simplifies the function p(wm|w1 w2..wm-1) into p(wm| wm-n ..wm-1). If we make a trigram(n=3) assumption, which is popular in statistical language modeling, it becomes p(wm| wm-1 wm-2), i.e. each word is assumed to be dependent on only last two words in the sequence. . Back-off and Smoothed Models . To further improve the generalization on unseen word sequences, there a few more bag of tricks like back-off trigram model where if p(w4|w3 w2) is not known to us, we consider futher smaller sequences until we find the required probability. We look at p(w4|w3) if it is available, else we look at p(w4). Also, we use smoothed trigram model to distribute the probability mass. . Bengio&#39;s NNLM paper . It addresses two problems with the traditional statistical language modelling . Curse of Dimensionality To model a joint distribution of 10-gram word sequence of 10,000 words vocabulary, there are 10,000^10 -1 free parameters required. When modeling continous variables, we obtain generalization more easily because function to be learned is expected to have some local smoothness, i.e. if we have smoothness property for language modeling task, we should be able to use some local smoothness to generalize the model to unseen word sequences. If we have seen a word sequence &quot;The cat is walking in the bedroom&quot;, it should be able to generalize to simliar word sequence like &quot;A dog was running in the room&quot; as &quot;dog&quot; and &quot;cat&quot; have similar semantic and grammatic roles. The generalization in the statistical language modeling is obtained by gluing together(product of conditional probabilities) the short subsequneces. Typically, trigrams were considered becuase of the curse of dimensionality. It doesn&#39;t take in to account more than 1-2 previous words. | Not taking into account similarity between words The big problem in language modeling is generalization. If the model understands the semantic simliary between words, it will generalize better. | Previous Work . Neural Networks for Modeling Joint Probability Distribution- Neural networks have been used to model the joint probability distribution of random variables and also for lanugage modeling before this paper. Each output node spits the conditional probability of a word give the sequence of words as input. . | Word Similarities Discovering the word simliarties to obtain generalization has been tried as well, by clustering similar words together but the model proposed by Bengio learns the distributed feature vector to represent word similarty. . | Vector space representation of words -The previous works in information retrieval has explored the vector-space representation of words(LSI) but this paper explores the reprsentation of words which helps in representing the probability distribution of the word sequences. The paper mentions that learning the word representation and probability distribution jointly is very useful. . | . . Implementation . import torch import torch.nn as nn import torch.optim as optim . corpus = [&#39;i like dog&#39;, &#39;i love coffee&#39;, &#39;i hate milk&#39;] # list of all the sentences vocabulary = list(set(&#39; &#39;.join(corpus).split())) # |v| list of all the uwords word2int = {w:i for i, w in enumerate(vocabulary)} corpus = [&#39;i like dog&#39;, &#39;i love coffee&#39;, &#39;i hate milk&#39;] # list of all the sentences vocabulary = list(set(&#39; &#39;.join(corpus).split())) # |v| list of all the uwords n_vocab = len(vocabulary) class NNLM(nn.Module): def __init__(self): super(NNLM, self).__init__() # projection layer self.C = nn.Embedding(n_vocab, m) # hidden layer # tanh(XH + d) self.H = nn.Parameter(torch.randn(n_step * m, n_hidden).type(torch.FloatTensor)) self.d = nn.Parameter(torch.randn(n_hidden).type(torch.FloatTensor)) # hidden layer # WX + b self.W = nn.Parameter(torch.randn(n_step * m, n_vocab).type(torch.FloatTensor)) self.b = nn.Parameter(torch.randn(n_vocab).type(torch.FloatTensor)) # tanh U self.U = nn.Parameter(torch.randn(n_hidden, n_vocab).type(torch.FloatTensor)) def forward(self, X): X = self.C(X) # (batch_size, n_step, m) X = X.view(-1, n_step * m) # (batch_size, n_step * m) tanh = torch.tanh(self.d + torch.mm(X, self.H)) output = torch.mm(tanh, self.U) + torch.mm(X, self.W) + self.b return output def prepare_input(sentences): X = [] Y = [] for sent in sentences: sent = sent.split() X.append([word2int[word] for word in sent[:-1]]) Y.append(word2int[sent[-1]]) return (X, Y) . X, Y = prepare_input(corpus) m = 2 n_step = 2 n_hidden =2 model = NNLM() criterion = nn.CrossEntropyLoss() optimizer = optim.Adam(model.parameters(), lr=0.001) X = torch.LongTensor(X) Y = torch.LongTensor(Y) for epoch in range(5000): optimizer.zero_grad() output = model(X) # output : [batch_size, n_class], target_batch : [batch_size] (LongTensor, not one-hot) loss = criterion(output, Y) if (epoch + 1)%1000 == 0: print(&#39;Epoch:&#39;, &#39;%04d&#39; % (epoch + 1), &#39;cost =&#39;, &#39;{:.6f}&#39;.format(loss)) loss.backward() optimizer.step() . Epoch: 1000 cost = 0.207585 Epoch: 2000 cost = 0.035829 Epoch: 3000 cost = 0.012441 Epoch: 4000 cost = 0.005522 Epoch: 5000 cost = 0.002739 . input = [] for w in X: input.append([vocabulary[i] for i in w]) predictions = model(X).data.max(1, keepdim=True)[1].squeeze() for i,o in zip(input, [vocabulary[pred] for pred in predictions]): print(&#39;Input: &#39;+&#39; &#39;.join(i)) print(&#39;Output:&#39;,o) print(&#39; n&#39;) . Input: i like Output: dog Input: i love Output: coffee Input: i hate Output: milk . How word2vec improves on the NNLM model? . The embedding to hidden and hidden to softmax layers are expensive in NNLM network. The softmax layers has 300*|V| weights. For a vocabulary of 10,000 words, the number of weights will be approx 3 million. Word2vec simplifies the NNLM model in few ways. . use negative sampling to update only a fraction of 3M weights in output layer. | modeling a binary classification instead of next word prediction model | .",
            "url": "http://forgetfulcrow.com/nnlm/torch/language%20model/nlp/2020/05/03/A-Neural-Probabilistic-Language-Model-(1).html",
            "relUrl": "/nnlm/torch/language%20model/nlp/2020/05/03/A-Neural-Probabilistic-Language-Model-(1).html",
            "date": " • May 3, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Detecting Handwritten text in Documents",
            "content": "Problem Statement . We wish to detect the handwritten text in the scanned/pdf document. It could be for number of reasons like . to identify if the document has been signed | to process handwritten text in the document in a different way | to mask the handwritten text | . Take following document image for an example. We wish to detect the text highlighted in the red bounding boxes. . Training Dataset . We will use the annotated dataset available in the following github repo https://github.com/CatalystCode/Handwriting/tree/master/Data/labelledcontracttrainingdata/trainingjpg_output_99/ . The dataset is part of the Microsoft blog available here https://devblogs.microsoft.com/cse/2018/05/07/handwriting-detection-and-recognition-in-scanned-documents-using-azure-ml-package-computer-vision-azure-cognitive-services-ocr/ . Each image is annotated in Pascal VOC Annotation format using Microsoft Vott Annotation tool. The directory structure of the annotated dataset looks like this . data/Annotations_99 data/JPEGImages_99 . There are 99 annotated images in the dataset. The images are present in JPEGImages_99 folder and corresponding xml annotations are available under Annotations_99. . An XML annotation file looks like . &lt;annotation verified=&quot;yes&quot;&gt; &lt;folder&gt;Annotation&lt;/folder&gt; &lt;filename&gt;07653e58-24d1-4b3f-9b4a-76057efe5c09-1&lt;/filename&gt; &lt;path&gt;C: data JPEGImages 07653e58-24d1-4b3f-9b4a-76057efe5c09-1.jpg&lt;/path&gt; &lt;source&gt; &lt;database&gt;Unknown&lt;/database&gt; &lt;/source&gt; &lt;size&gt; &lt;width&gt;1700&lt;/width&gt; &lt;height&gt;2200&lt;/height&gt; &lt;depth&gt;3&lt;/depth&gt; &lt;/size&gt; &lt;segmented&gt;0&lt;/segmented&gt; &lt;object&gt; &lt;name&gt;signature&lt;/name&gt; &lt;pose&gt;Unspecified&lt;/pose&gt; &lt;bndbox&gt; &lt;xmin&gt;192&lt;/xmin&gt; &lt;ymin&gt;1188&lt;/ymin&gt; &lt;xmax&gt;738&lt;/xmax&gt; &lt;ymax&gt;1320&lt;/ymax&gt; &lt;/bndbox&gt; &lt;/object&gt; ... . In Pascal VOC annotation, there is a seperate annotation file for each image. The data we are interested in the xml file is . image filename - 07653e58-24d1-4b3f-9b4a-76057efe5c09-1 | object attribute for each annotation in the image category/class of the marked annotation | bounding box coordinates of top left and right bottom position | . | . About Detectron2 Framework . We will use pytorch detectron2 framework because it is simple and easy to extend. There are simple Training, Visualization, and Prediction modules available in the detectron2 which handles most of the stuff and we can use it as is, or if required, we can extend the functionality. . Simple steps to train a vision model in Detectron2 . Convert dataset in the detectron2 format | Register the dataset and metadata information like class labels | Update the config with registered dataset (DATASETS.{TRAIN,TEST}), model weight (MODEL.WEIGHT), learning rate, Number of output classes (MODEL.ROI_HEADS.NUM_CLASSES), and other training and test parameters | Train the model using DefaultTrainer class | Dataset Preparation(step 1 &amp; 2) . Detectron2 expects the dataset as list[dict] in the following format. So for training with detectron2 we will have to convert our dataset in the following format. . [{&#39;file_name&#39;: &#39;datasets/JPEGImages/1.jpg&#39;, &#39;image_id&#39;: &#39;1&#39;, &#39;height&#39;: 3300, &#39;width&#39;: 2550, &#39;annotations&#39;: [{&#39;category_id&#39;: 1, &#39;bbox&#39;: [1050.1000264270613, 457.33333333333337, 1406.9139799154334, 587.7450980392157], &#39;bbox_mode&#39;: &lt;BoxMode.XYXY_ABS: 0&gt;}, {&#39;category_id&#39;: 1, &#39;bbox&#39;: [1529.9097515856238, 473.5098039215687, 1617.167679704017, 555.3921568627452], &#39;bbox_mode&#39;: &lt;BoxMode.XYXY_ABS: 0&gt;}]}] . Detectron registers this list of dict as torch dataset and uses the default dataloader and datasampler for training. We can register the list[dict] with detectron2 using following code . def get_dicts(): ... return list[dict] in the above format from detectron2.data import DatasetCatalog DatasetCatalog.register(&quot;my_dataset&quot;, get_dicts) . And to register the metadata information related to dataset like category mapping to id&#39;s, the type of dataset, we have to set the keyvalue pair using . MetadataCatalog.get(&quot;my_dataset&quot;).thing_classes = [&quot;person&quot;, &quot;dog&quot;] . Choosing a Model and Initializing Configuration (step 3) . Detectron2 has lot of pretrained model available in the model zoo. For handwritten text detection, we will choose Faster RCNN with FPN backbone. . We have to initialize the parameters and weights for model we want to train. . cfg = get_cfg() cfg.merge_from_file(&#39;&lt;pretrained model config&#39;&gt;) cfg.MODEL.WEIGHTS = &#39;&lt;path to pretrained model weight&gt; #custom config for training cfg.DATASETS.TRAIN = (&quot;&lt;registered training dataset name&gt;&quot;,) cfg.SOLVER.MAX_ITER = &#39;&lt;number of training iterations&gt;&#39; cfg.MODEL.ROI_HEADS.NUM_CLASSES = &#39;&lt;number of classes&gt;&#39; . All the model configs are available in cfg object. If we want to replicate the training later, we can save the cfg object and load it back to resume training. . Model Training (step 4) . We will use the DefaultTrainer for now. There are simple modules available which only accept the minimal parameters and make assumptions about lot of things. . The DefaultTrainer Module . builds the model | builds the optimizer | builds the dataloader | loads the model weights, and | register common hooks | . trainer = DefaultTrainer(cfg) trainer.resume_or_load(resume=False) trainer.train() . Now, we can train our Instance Detection model using Detectron2. We will try FasterRCNN-FPN-50 Model and see how it performs . 1. Install Detectron2 . !pip install -U torch==1.4+cu100 torchvision==0.5+cu100 -f https://download.pytorch.org/whl/torch_stable.html !pip install cython pyyaml==5.1 !pip install -U &#39;git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI&#39; import torch, torchvision torch.__version__ !gcc --version # opencv is pre-installed on colab # install detectron2: !pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cu100/index.html . 2. Download the Dataset . We will create following directory structure . datasets/ Annotations/ JPEGImages/ train.txt . train.txt and test.txt have a filename(without extension) per row . !git clone https://github.com/CatalystCode/Handwriting !mv Handwriting/Data/labelledcontracttrainingdata/trainingjpg_output_99/ datasets !mv datasets/Annotations_99 datasets/Annotations !mv datasets/JPEGImages_99 datasets/JPEGImages !ls -l datasets/Annotations | awk &#39;{print $9}&#39; | sed &#39;s/ .[^.]*$//&#39; &gt; datasets/train.txt . 1. Prepare &amp; Visualize the Dataset . To visualize the labeled dataset in detectron2, we need to convert the xml annotations in the detectron2 dataset format as explained above. . We will use the custom function register_pascal_voc() which will convert the dataset into detectron2 format and register it with DatasetCatalog. . Visualizer Class . To draw the annotations on the images, we will use the Detectron2 Visualizer class which takes the image in rgb format, the metadata which has ordered label names and the scale parameter. . Visualizer.draw_instance_predictions() function to visualize prediction results Visualizer.draw_dataset_dict() function to draw the annotated dataset . Download the dataset . %matplotlib inline . import numpy as np import os import xml.etree.ElementTree as ET from detectron2.data import DatasetCatalog, MetadataCatalog from detectron2.structures import BoxMode from fvcore.common.file_io import PathManager import random import cv2 from detectron2.utils.visualizer import Visualizer from matplotlib.pyplot import figure from matplotlib import pyplot as plt def load_voc_instances(dirname, split, CLASS_NAMES): &quot;&quot;&quot; Load Pascal VOC detection annotations to Detectron2 format. Args: dirname: Contain &quot;Annotations&quot;, &quot;JPEGImages&quot; split (str): one of &quot;train&quot;, &quot;test&quot;, &quot;val&quot;, &quot;trainval&quot; &quot;&quot;&quot; with PathManager.open(os.path.join(dirname, split+&quot;.txt&quot;)) as f: fileids = np.loadtxt(f, dtype=np.str) dicts = [] for fileid in fileids: anno_file = os.path.join(dirname, &quot;Annotations&quot;, fileid + &quot;.xml&quot;) jpeg_file = os.path.join(dirname, &quot;JPEGImages&quot;, fileid + &quot;.jpg&quot;) tree = ET.parse(anno_file) r = { &quot;file_name&quot;: jpeg_file, &quot;image_id&quot;: fileid, &quot;height&quot;: int(tree.findall(&quot;./size/height&quot;)[0].text), &quot;width&quot;: int(tree.findall(&quot;./size/width&quot;)[0].text), } instances = [] for obj in tree.findall(&quot;object&quot;): cls = obj.find(&quot;name&quot;).text # We include &quot;difficult&quot; samples in training. # Based on limited experiments, they don&#39;t hurt accuracy. # difficult = int(obj.find(&quot;difficult&quot;).text) # if difficult == 1: # continue bbox = obj.find(&quot;bndbox&quot;) bbox = [float(bbox.find(x).text) for x in [&quot;xmin&quot;, &quot;ymin&quot;, &quot;xmax&quot;, &quot;ymax&quot;]] # Original annotations are integers in the range [1, W or H] # Assuming they mean 1-based pixel indices (inclusive), # a box with annotation (xmin=1, xmax=W) covers the whole image. # In coordinate space this is represented by (xmin=0, xmax=W) bbox[0] -= 1.0 bbox[1] -= 1.0 instances.append( {&quot;category_id&quot;: CLASS_NAMES.index(cls), &quot;bbox&quot;: bbox, &quot;bbox_mode&quot;: BoxMode.XYXY_ABS} ) r[&quot;annotations&quot;] = instances dicts.append(r) return dicts def visualize_dataset(datasetname, n_samples=10): dataset_dicts = DatasetCatalog.get(datasetname) metadata = MetadataCatalog.get(datasetname) for d in random.sample(dataset_dicts,n_samples): print(d[&#39;file_name&#39;]) img = cv2.imread(d[&quot;file_name&quot;]) visualizer = Visualizer(img[:, :, ::-1], metadata=metadata, scale=0.5) vis = visualizer.draw_dataset_dict(d) figure(num=None, figsize=(15, 15), dpi=100, facecolor=&#39;w&#39;, edgecolor=&#39;k&#39;) plt.axis(&quot;off&quot;) plt.imshow(vis.get_image()[:, :, ::-1]) plt.show() def register_pascal_voc(name, dirname, split, CLASS_NAMES): if name not in DatasetCatalog.list(): DatasetCatalog.register(name, lambda: load_voc_instances(dirname, split, CLASS_NAMES)) MetadataCatalog.get(name).set( thing_classes=CLASS_NAMES, split=split, dirname= dirname, year=2012 ) . #register pascal voc dataset in detectron2 register_pascal_voc(&#39;signature_dataset_train&#39;, dirname=&#39;datasets&#39;, split=&#39;train&#39;, CLASS_NAMES=[&quot;signature&quot;,&quot;others&quot;]) . visualize_dataset(&#39;signature_dataset_train&#39;,n_samples = 4) . datasets/JPEGImages/07653e58-24d1-4b3f-9b4a-76057efe5c09-3.jpg . datasets/JPEGImages/7674b81e-aa42-4891-856d-8938620d6fa0-1.jpg . datasets/JPEGImages/84cce561-1ee5-4201-9dfe-13da1711ca75-2.jpg . datasets/JPEGImages/9854ded9-3bd7-437c-83c4-b05d409c5872-2.jpg . 2. Model Training . from detectron2.engine import default_argument_parser from detectron2.engine import DefaultTrainer from detectron2.engine import default_setup from detectron2.config import get_cfg def setup_cfg(args): &quot;&quot;&quot; Create configs and perform basic setups. &quot;&quot;&quot; cfg = get_cfg() cfg.merge_from_file(args.config_file) cfg.merge_from_list(args.opts) cfg.freeze() default_setup(cfg, args) return cfg parser = default_argument_parser() args = parser.parse_args(&quot;--config-file sign_config/sign_faster_rcnn_R_50_FPN_3x.yaml OUTPUT_DIR sign_model &quot;.split()) . We have copied the config file for Faster RCNN R50 FPN from the model zoo as sign_faster_rcnn_R_50_FPN_3x.yaml and updated the configuration parameters. We have set the MODEL.ROI_HEADS(classes) to 2, Max Number of iterations to 4000, and training dataset name to the one we registered earlier. . config.setup_cfg function will load the configuration from the --config-file path, and will update the configration with other parameters passed as arguments . Here, we have passed the OUTPUT_DIR parameter to update the cfg.OUTPUT_DIR parameter value . cfg = setup_cfg(args) . Now that we have all the configurations, we can start training the model. . As I explained earlier, DefaultTrainer will build the model(without weights), optimizer, learning rate scheduler and then load weights from the checkpoint file specified in the cfg.MODEL.WEIGHTS parameter. . trainer = DefaultTrainer(cfg) trainer.resume_or_load(resume=False) trainer.train() . 3. Model Prediction . Now that the model has been trained and saved in the output directory. The config saved during the model training has all the parameters except model weight. We pass the model weight path as paramter to load the trained model weight. . The DefaultPredictor does image translation and takes only single image for prediction. But we can easily modify the DefaultPredictor class to accept batch of input images for prediction . from detectron2.engine import default_argument_parser from detectron2.engine import DefaultPredictor import config parser = default_argument_parser() args = parser.parse_args(&quot;--config-file sign_model/config.yaml MODEL.WEIGHTS sign_model/model_final.pth&quot;.split()) cfg = config.setup_cfg(args) predictor = DefaultPredictor(cfg) . import glob import time import os from matplotlib.pyplot import figure from matplotlib import pyplot as plt import cv2 from detectron2.utils.visualizer import Visualizer from detectron2.data import MetadataCatalog files = glob.glob(&quot;test_images/*.jpg&quot;) sample_size = 5 for file,_ in zip(files,range(sample_size)): im = cv2.imread(file) MetadataCatalog.get(&quot;signature_dataset_train&quot;).thing_classes = [&quot;signature&quot;,&quot;others&quot;] start_time = time.time() outputs = predictor(im) print(time.time()- start_time) v = Visualizer(im[:, :, ::-1], metadata=MetadataCatalog.get(&quot;signature_dataset_train&quot;), scale=0.5) v = v.draw_instance_predictions(outputs[&quot;instances&quot;].to(&quot;cpu&quot;)) print(file) figure(num=None, figsize=(15, 15), dpi=100, facecolor=&#39;w&#39;, edgecolor=&#39;k&#39;) plt.axis(&quot;off&quot;) plt.imshow(v.get_image()[:, :, ::-1]) plt.show() . 0.4223031997680664 test_images/image_11.jpg . 0.18352723121643066 test_images/0d0eddfc-731b-44de-b84d-d265afc7d996-1.jpg . 0.17967772483825684 test_images/07653e58-24d1-4b3f-9b4a-76057efe5c09-6.jpg . 0.14139199256896973 test_images/0d0eddfc-731b-44de-b84d-d265afc7d996-2.jpg . 0.15801262855529785 test_images/image_10.jpg . 4. Evaluate . The DefaultTrainer class doesn&#39;t have a evaluator method implemented. I have created a new Trainer class and added the build_evaluator method. We could have used this new Trainer class in the first step instead of DefaultTrainer but I wanted to show how easy it is to train the model without writing more code. . from detectron2.engine import default_argument_parser import config import trainer import dataset_utils dataset_utils.register_pascal_voc(&#39;signature_dataset_train&#39;, dirname=&#39;datasets&#39;, split=&#39;train&#39;, CLASS_NAMES=[&quot;signature&quot;,&quot;others&quot;]) #dataset_utils.register_pascal_voc(&#39;signature_dataset_test&#39;, dirname=&#39;datasets&#39;, split=&#39;test&#39;, CLASS_NAMES=[&quot;signature&quot;,&quot;others&quot;]) parser = default_argument_parser() args = parser.parse_args(&quot;--config-file sign_model/config.yaml MODEL.WEIGHTS sign_model/model_final.pth&quot;.split()) trainer.eval(args) . OrderedDict([(&#39;bbox&#39;, {&#39;AP&#39;: 69.67298193268152, &#39;AP50&#39;: 98.10585383880746, &#39;AP75&#39;: 88.13255308840152})]) . . Training on a Custom Dataset . Let us say we have got some more annotated dataset which is not in PASCAL VOC xml format. To train the above model, we have write a custom function get_dicts() which returns data in detectron2 format. . To improve the accuracy of handwriting detection, I found one more dataset which is of annotated french documents. The annotations are in json format for each image. The dataset is available in the following github repo https://github.com/hyperlex/Signature-detection-Practical-guide/tree/master/data/dataset. Download and save it in french_dataset directory . I have added all the functions in the library files dataset_utils.py and trainer.py. We will use these abstractions to quickly train and evaluate new models . import json import glob import os import cv2 from detectron2.structures import BoxMode def get_french_dicts(annot_dir): json_files = glob.glob(os.path.join(annot_dir,&#39;*.json&#39;)) dataset_dicts = [] for f in json_files: record={} img_ann = json.load(open(f)) filename = img_ann[&#39;asset&#39;][&#39;name&#39;] height, width = cv2.imread(os.path.join(annot_dir,&#39;..&#39;,filename)).shape[:2] record[&quot;file_name&quot;] = os.path.join(annot_dir,&#39;..&#39;,filename) record[&quot;image_id&quot;] = img_ann[&#39;asset&#39;][&#39;id&#39;] record[&quot;height&quot;] = height record[&quot;width&quot;] = width annos = img_ann[&quot;regions&quot;] objs =[] for ann in annos: px = ann[&#39;boundingBox&#39;][&#39;left&#39;] py = ann[&#39;boundingBox&#39;][&#39;top&#39;] px1 = ann[&#39;boundingBox&#39;][&#39;left&#39;] + ann[&#39;boundingBox&#39;][&#39;width&#39;] py1 = ann[&#39;boundingBox&#39;][&#39;top&#39;] + ann[&#39;boundingBox&#39;][&#39;height&#39;] obj = { &quot;bbox&quot;: [px, py, px1, py1], &quot;bbox_mode&quot;: BoxMode.XYXY_ABS, &quot;category_id&quot;: {&#39;signature&#39;:0,&#39;paraphe&#39;:1,&#39;date&#39;:1}[ann[&#39;tags&#39;][0]], &quot;iscrowd&quot;: 0 } objs.append(obj) record[&quot;annotations&quot;] = objs dataset_dicts.append(record) return dataset_dicts . from detectron2.utils.visualizer import Visualizer from detectron2.data import DatasetCatalog, MetadataCatalog import dataset_utils def get_img_dicts(): ann1 = dataset_utils.load_voc_instances(dirname = &#39;datasets&#39;, split = &#39;train&#39;, CLASS_NAMES=[&quot;signature&quot;,&quot;others&quot;]) ann2 = get_french_dicts(&#39;french_dataset/per_img_labels&#39;) return ann1 + ann2 dataset_name = &#39;signature_dataset_train&#39; DatasetCatalog.register(dataset_name, lambda: get_img_dicts()) MetadataCatalog.get(dataset_name).set(thing_classes=[&quot;signature&quot;,&quot;others&quot;], split=&#39;train&#39;, dirname= dirname, year=2012) . Metadata(name=&#39;signature_dataset_train&#39;, thing_classes=[&#39;signature&#39;, &#39;others&#39;]) . len(DatasetCatalog.get(dataset_name)) . 139 . dataset_utils.visualize_dataset(&#39;signature_dataset_train&#39;, n_samples=2) . datasets/JPEGImages/63348ad3-b0cc-45d0-bc85-bf2c865744ec-2.jpg . datasets/JPEGImages/4c85bb9b-1d8d-45b0-8f4a-664d77ee4b83-4.jpg . We can run the remaining steps as we did before for training the model and prediction . from detectron2.engine import default_argument_parser from detectron2.engine import DefaultTrainer import trainer parser = default_argument_parser() args = parser.parse_args(&quot;--config-file sign_config/chk_faster_rcnn_R_50_FPN_3x.yaml --num-gpus 3 OUTPUT_DIR french_sign_model SOLVER.MAX_ITER 4000&quot;.split()) trainer.train(args) . from detectron2.engine import default_argument_parser import config import trainer import dataset_utils import dataset_utils dataset_utils.register_pascal_voc(&#39;signature_dataset_test&#39;, dirname=&#39;datasets&#39;, split=&#39;train&#39;, CLASS_NAMES=[&quot;signature&quot;,&quot;others&quot;]) parser = default_argument_parser() args = parser.parse_args(&#39;--config-file french_sign_model/config.yaml MODEL.WEIGHTS french_sign_model/model_final.pth DATASETS.TEST (&quot;signature_dataset_test&quot;,)&#39;.split()) trainer.eval(args) . OrderedDict([(&#39;bbox&#39;, {&#39;AP&#39;: 67.82590895115814, &#39;AP50&#39;: 96.77629667360196, &#39;AP75&#39;: 84.18387912626437})]) . The Average Precision has reduced compared to the previous model. Let us check the prediction results. . from detectron2.engine import default_argument_parser from detectron2.engine import DefaultPredictor import config parser = default_argument_parser() args = parser.parse_args(&quot;--config-file french_sign_model/config.yaml MODEL.WEIGHTS french_sign_model/model_final.pth&quot;.split()) cfg = config.setup_cfg(args) predictor = DefaultPredictor(cfg) . import glob import time import os from matplotlib.pyplot import figure from matplotlib import pyplot as plt import cv2 from detectron2.utils.visualizer import Visualizer from detectron2.data import MetadataCatalog files = glob.glob(&quot;test_images/*.jpg&quot;) sample_size = 5 for file,_ in zip(files,range(sample_size)): im = cv2.imread(file) MetadataCatalog.get(&quot;signature_dataset_train&quot;).thing_classes = [&quot;signature&quot;,&quot;others&quot;] start_time = time.time() outputs = predictor(im) print(time.time()- start_time) v = Visualizer(im[:, :, ::-1], metadata=MetadataCatalog.get(&quot;signature_dataset_train&quot;), scale=0.5) v = v.draw_instance_predictions(outputs[&quot;instances&quot;].to(&quot;cpu&quot;)) print(file) figure(num=None, figsize=(15, 15), dpi=100, facecolor=&#39;w&#39;, edgecolor=&#39;k&#39;) plt.imshow(v.get_image()[:, :, ::-1]) plt.show() . 0.4847722053527832 test_images/image_11.jpg . 0.18241333961486816 test_images/0d0eddfc-731b-44de-b84d-d265afc7d996-1.jpg . 0.17200803756713867 test_images/07653e58-24d1-4b3f-9b4a-76057efe5c09-6.jpg . 0.18814849853515625 test_images/0d0eddfc-731b-44de-b84d-d265afc7d996-2.jpg . 0.19216012954711914 test_images/image_10.jpg .",
            "url": "http://forgetfulcrow.com/detectron2/fasterrcnn/vision/2020/04/09/Handwritten-Text-Detection-in-Detectron2.html",
            "relUrl": "/detectron2/fasterrcnn/vision/2020/04/09/Handwritten-Text-Detection-in-Detectron2.html",
            "date": " • Apr 9, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Musing on the AI, Life and apparently Trivial matters. .",
          "url": "http://forgetfulcrow.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "http://forgetfulcrow.com/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}